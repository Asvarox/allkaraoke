import{b as y,g as h,s as l,S as u}from"./index-_VvKvqHS.js";try{let e=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="f1a7bbcf-09c6-4c52-b870-c03bd4ea8fe5",e._sentryDebugIdIdentifier="sentry-dbid-f1a7bbcf-09c6-4c52-b870-c03bd4ea8fe5")}catch{}{let e=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{};e._sentryModuleMetadata=e._sentryModuleMetadata||{},e._sentryModuleMetadata[new e.Error().stack]=Object.assign({},e._sentryModuleMetadata[new e.Error().stack],{"_sentryBundlerPluginAppKey:allkaraoke-party-sentry-key":!0})}const w="https://eu.posthog.com",b="281",m=new Date(Date.now()-1e3*3600*24*28).toISOString(),S=["(tv)","(album version)","(movie version)","[duet]"],I=e=>(S.forEach(t=>{e.title.toLowerCase().endsWith(t)&&(e.title=e.title.slice(0,-t.length))}),e.title=e.title.trim(),e.language=e.language.map(t=>t.toLowerCase().startsWith("espa")?"Spanish":t.toLowerCase().endsWith("(romanized)")?t.slice(0,-11).trim():t.toLowerCase().endsWith("(brazil)")?"Portuguese":t),e.lastUpdate=new Date().toISOString(),e.id=void 0,e.id=h(e),e),D=async(e,t,a,c,i,n)=>{const r=await e(`${w}/api/projects/${b}/query`,{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:{kind:"HogQLQuery",query:`
            select events.properties.song, events.properties.songId, events.created_at
            from events
            where events.created_at > toDateTime('${n??m}')
              and event IN ('share-song', 'unshare-song') and events.properties.$user_id !='3ab0feed-e1d2-4ff0-8780-5db00698eb60'
            ORDER BY events.created_at ASC
            LIMIT 300
        `}})}),s=[];for(const[g,d,p]of r.results)try{!g&&d&&s.includes(d)&&(await i(d),console.log(`Deleting song ${d}`));const o=y(g.replaceAll("\\n",`
`).replaceAll('\\"','"'));if(!o.id){console.log("Song has no ID",o);return}I(o),a.includes(o.id)?console.log(`Song ${o.id} already fetched`):(o.tracks[0]?.sections.length??0)<5?console.log(`Song ${o.id} seems to be broken, ${o.tracks[0]?.sections.length} sections found`):t.find(f=>f.id===o.id)?console.log(`Song ${o.id} already exists (by song id)`):t.find(f=>f.video===o.video)?console.log(`Song ${o.id} already exists (by video id)`):(o.lastUpdate=new Date().toISOString(),s.push(o.id),await c(o,p),console.log(`Added song ${o.id}`))}catch(o){console.warn(`Couldn't convert song ${g}`,o)}},v=async()=>{const e=l.session.getItem("posthog_key")||prompt("Enter PostHog PAT");if(!e)return;l.session.setItem("posthog_key",e);const t=new Date;t.setDate(t.getDate()-10);let a=prompt("Enter from",l.local.getItem("posthog_from")||t.toISOString());if(a===null)return;a=new Date(a).toISOString();const c=async(n,r)=>{const s=await fetch(n,{...r,headers:{...r.headers,Authorization:`Bearer ${e}`}});if(!s.ok)throw new Error(`Request failed with status ${s.status}`);return s.json()};let i=0;await D(c,await u.getIndex(!0),[],async(n,r)=>{await u.store(n,!1);const s=new Date(r).getTime();s>i&&(i=s)},async n=>u.deleteSong(n),a),l.local.setItem("posthog_from",new Date(i).toISOString())};export{v as default};
//# sourceMappingURL=importSongsFromPostHog-B6UfSbPr.js.map
