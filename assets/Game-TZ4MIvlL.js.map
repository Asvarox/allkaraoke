{"version":3,"file":"Game-TZ4MIvlL.js","sources":["../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/toInteger.js","../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/chunk.js","../../.yarn/__virtual__/@mui-icons-material-virtual-8c58d8dd14/0/cache/@mui-icons-material-npm-5.15.5-4ff0024be9-25feb86a76.zip/node_modules/@mui/icons-material/esm/Casino.js","../../.yarn/__virtual__/@mui-icons-material-virtual-8c58d8dd14/0/cache/@mui-icons-material-npm-5.15.5-4ff0024be9-25feb86a76.zip/node_modules/@mui/icons-material/esm/CheckCircleOutline.js","../../src/Scenes/SingASong/SongSelection/Components/QuickSearch.tsx","../../src/Scenes/SingASong/SongSelection/Components/AdditionalListControls.tsx","../../src/Scenes/SingASong/SongSelection/Components/BackgroundThumbnail.tsx","../../src/Scenes/SingASong/SongSelection/Components/Playlists.tsx","../../.yarn/__virtual__/@mui-icons-material-virtual-8c58d8dd14/0/cache/@mui-icons-material-npm-5.15.5-4ff0024be9-25feb86a76.zip/node_modules/@mui/icons-material/PeopleAlt.js","../../src/Elements/Flag/mapping.ts","../../src/Scenes/SingASong/SongSelection/Components/SongCard/SongFlag.tsx","../../src/Songs/stats/hooks.ts","../../src/Scenes/SingASong/SongSelection/Components/SongCard.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongGroupsNavigation.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/GameSettings.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/NoiseDetection.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/SinglePlayer.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck.tsx","../../src/Elements/Autocomplete.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/PlayerSettings/SinglePlayer.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/PlayerSettings.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/SongSettings.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongPreview.tsx","../../src/Scenes/SingASong/SongSelection/Hooks/usePlaylists.tsx","../../src/Scenes/SingASong/SongSelection/Hooks/useSongList.ts","../../src/Scenes/SingASong/SongSelection/Hooks/selectRandomSong.ts","../../src/Scenes/SingASong/SongSelection/Hooks/useSongSelectionKeyboardNavigation.ts","../../src/Scenes/SingASong/SongSelection/Hooks/useSongSelection.ts","../../src/hooks/useBlockScroll.ts","../../src/Scenes/SingASong/SongSelection/SongSelection.tsx","../../src/Scenes/SingASong/SingASong.tsx","../../src/hooks/useFullscreen.ts","../../src/assets/459342__papaninkasettratat__cinematic-music-short.mp3","../../src/utils/sleep.ts","../../src/Scenes/Game/Singing/WaitForReadiness.tsx","../../src/Scenes/Game/Singing/Helpers/generatePlayerChanges.ts","../../src/Elements/GameTip.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results/CameraRoll.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results/ScoreBar.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results/PlayerDetailedScore.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results/PlayerScore.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results.tsx","../../src/hooks/players/useRecentPlayerNames.ts","../../src/Scenes/Game/Singing/PostGame/Views/HighScoreRename.tsx","../../src/Scenes/Game/Singing/PostGame/Views/HighScores.tsx","../../src/Scenes/Game/Singing/PostGame/PostGameView.tsx","../../src/utils/seededRandom.ts","../../src/Scenes/Game/Singing/PostGame/hooks/useHighScores.ts","../../src/Scenes/Game/Singing/PostGame/PostGame.tsx","../../src/Scenes/Game/Singing/Singing.tsx","../../src/Scenes/Game/Game.tsx"],"sourcesContent":["import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import baseSlice from './_baseSlice.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nexport default chunk;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2M7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18m0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9m4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5m4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5m0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9\"\n}), 'Casino');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}), 'CheckCircleOutline');","import styled from '@emotion/styled';\nimport { Input } from 'Elements/Input';\nimport events from 'GameEvents/GameEvents';\nimport { useEventEffect } from 'GameEvents/hooks';\nimport { AppliedFilters } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport { REGULAR_ALPHA_CHARS } from 'hooks/useKeyboard';\nimport { Dispatch, SetStateAction, useCallback, useEffect, useRef, useState } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\ninterface Props {\n  setFilters: Dispatch<SetStateAction<AppliedFilters>>;\n  setVisible: Dispatch<SetStateAction<boolean>>;\n  filters: AppliedFilters;\n  keyboardControl: boolean;\n  visible: boolean;\n}\nexport default function QuickSearch({ setFilters, filters, keyboardControl, visible, setVisible }: Props) {\n  const searchInput = useRef<HTMLInputElement | null>(null);\n  const [isFocused, setIsFocused] = useState(false);\n\n  const setSearch = (value: string) => {\n    setFilters((current) => ({\n      ...current,\n      search: value,\n    }));\n  };\n\n  const onLeave = () => {\n    searchInput.current?.blur();\n  };\n\n  useHotkeys('down', onLeave, { enabled: isFocused, enableOnTags: ['INPUT'] });\n\n  const onSearchSong = (e: KeyboardEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    setSearch(e.key);\n  };\n\n  useHotkeys(\n    REGULAR_ALPHA_CHARS,\n    (e) => {\n      onSearchSong(e);\n      setVisible(true);\n    },\n    {\n      enabled: !filters.search && keyboardControl,\n    },\n  );\n\n  const onRemoteSearch = useCallback(\n    (search: string) => {\n      if (keyboardControl) {\n        setSearch(search);\n      }\n    },\n    [keyboardControl],\n  );\n  useEventEffect(events.remoteSongSearch, onRemoteSearch);\n\n  useHotkeys(\n    REGULAR_ALPHA_CHARS,\n    (e) => {\n      onSearchSong(e);\n      searchInput.current?.focus();\n    },\n    { enabled: !isFocused && keyboardControl },\n    [filters.search],\n  );\n\n  useHotkeys(\n    'Backspace',\n    (e) => {\n      searchInput.current?.focus();\n    },\n    { enabled: !isFocused && keyboardControl },\n    [filters.search],\n  );\n\n  useEffect(() => {\n    // Navigating to another playlist will blur the search input and clear the search - this hides the input\n    if (!isFocused) {\n      setVisible(!!filters.search);\n    }\n  }, [isFocused, filters.search, setVisible]);\n\n  if (!filters.search && !visible) {\n    return null;\n  }\n\n  return (\n    <Container data-test=\"song-list-search\">\n      <FilterItem large>\n        <form\n          data-test=\"filters-search-form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            searchInput.current?.blur();\n          }}>\n          <Input\n            onFocus={() => setIsFocused(true)}\n            onBlur={() => setIsFocused(false)}\n            onKeyDown={(e) => {\n              // Hide the search input when the user presses backspace and the search is empty\n              if (e.key === 'Backspace' && filters.search?.length === 0) {\n                setVisible(false);\n              }\n            }}\n            focused={isFocused}\n            autoFocus\n            label=\"Search\"\n            value={filters.search ?? ''}\n            onChange={setSearch}\n            ref={searchInput}\n            data-test=\"filters-search\"\n          />\n        </form>\n      </FilterItem>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  background: rgba(0, 0, 0, 0.7);\n  padding: 2rem;\n  font-size: 3rem;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  gap: 2rem;\n  position: fixed;\n  z-index: 200;\n  top: 4.5rem;\n  left: 30rem;\n  right: 30rem;\n`;\n\nconst FilterItem = styled.div<{ large?: boolean }>`\n  flex: ${(props) => (props.large ? 1.5 : 1)};\n`;\n","import styled from '@emotion/styled';\nimport { Casino, Search } from '@mui/icons-material';\nimport { Button } from 'Elements/Button';\nimport { Tooltip } from 'Elements/Tooltip';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport QuickSearch from 'Scenes/SingASong/SongSelection/Components/QuickSearch';\nimport { AppliedFilters } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport { Dispatch, SetStateAction, useState } from 'react';\n\ninterface Props {\n  onRandom: () => void;\n  setFilters: Dispatch<SetStateAction<AppliedFilters>>;\n  filters: AppliedFilters;\n  keyboardControl: boolean;\n}\n\nexport default function AdditionalListControls({ onRandom, setFilters, filters, keyboardControl }: Props) {\n  const [searchActive, setSearchActive] = useState(false);\n\n  const clearSearch = () => {\n    setFilters((current) => ({ ...current, search: '' }));\n  };\n\n  return (\n    <>\n      <Container>\n        <Tooltip title=\"Search\" placement=\"left\">\n          <RoundButton\n            onClick={() => (searchActive ? clearSearch() : setSearchActive(true))}\n            data-test=\"search-song-button\">\n            <Search />\n          </RoundButton>\n        </Tooltip>\n        <Tooltip title=\"Pick random\" placement=\"left\">\n          <RoundButton onClick={onRandom} data-test=\"random-song-button\">\n            <Casino />\n          </RoundButton>\n        </Tooltip>\n      </Container>\n\n      <QuickSearch\n        setFilters={setFilters}\n        filters={filters}\n        visible={searchActive}\n        setVisible={setSearchActive}\n        keyboardControl={keyboardControl}\n      />\n    </>\n  );\n}\n\nconst RoundButton = styled(Button)`\n  box-shadow: inset 0 0 2px 2px ${styles.colors.text.active};\n  background: black;\n  width: 7.5rem;\n  height: 7.5rem;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  svg {\n    width: 4.5rem;\n    height: 4.5rem;\n  }\n`;\n\nconst Container = styled.div`\n  pointer-events: none;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  //bottom: 50%;\n  bottom: 2.5rem;\n  right: 2.5rem;\n  z-index: 100;\n  gap: 2rem;\n`;\n","import styled from '@emotion/styled';\nimport { useLayoutEffect, useState } from 'react';\nimport { usePreviousDistinct } from 'react-use';\nimport { GraphicSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\n\nfunction Tile({ videoId, ...props }: Props) {\n  return (\n    <Image\n      src={`https://img.youtube.com/vi/${videoId}/default.jpg`}\n      alt={`Thumbnail image for YouTube video ${videoId}`}\n      {...props}\n    />\n  );\n}\n\ninterface Props {\n  videoId: string;\n}\nfunction BackgroundThumbnail({ videoId, ...props }: Props) {\n  const previousVideoId = usePreviousDistinct(videoId) ?? videoId;\n  const [visible, setVisible] = useState(true);\n  useLayoutEffect(() => {\n    setVisible((current) => !current);\n  }, [videoId]);\n  const [graphicSettings] = useSettingValue(GraphicSetting);\n\n  if (graphicSettings === 'low') {\n    return null;\n  }\n\n  return (\n    <Container {...props}>\n      <TileAnimated videoId={visible ? videoId : previousVideoId} visible={visible} />\n      <TileAnimated videoId={visible ? previousVideoId : videoId} visible={!visible} />\n      <BaseTile videoId={previousVideoId} />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: relative;\n  overflow: hidden;\n  background: black;\n`;\n\nconst BaseTile = styled(Tile)`\n  visibility: hidden;\n`;\nconst TileAnimated = styled(Tile)<{ visible: boolean }>`\n  position: absolute;\n  transition: opacity 300ms;\n  opacity: ${(props) => (props.visible ? 1 : 0)};\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport default BackgroundThumbnail;\n","import styled from '@emotion/styled';\nimport { Button } from 'Elements/Button';\nimport { focusedStatic, typography } from 'Elements/cssMixins';\nimport useKeyboard from 'hooks/useKeyboard';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { Dispatch, SetStateAction, useEffect } from 'react';\nimport { PlaylistEntry } from 'Scenes/SingASong/SongSelection/Hooks/usePlaylists';\n\ninterface Props {\n  selectedPlaylist: string | null;\n  setSelectedPlaylist: Dispatch<SetStateAction<string | null>>;\n  playlists: PlaylistEntry[];\n  closePlaylist: (leavingKey: 'left' | 'right') => void;\n  active: boolean;\n}\n\nexport default function Playlists({ active, closePlaylist, playlists, selectedPlaylist, setSelectedPlaylist }: Props) {\n  const { register, focused, focusElement } = useKeyboardNav({\n    enabled: active,\n    additionalHelp: {\n      // It's possible to leave the playlists with left/right\n      vertical: undefined,\n      'horizontal-vertical': null,\n    },\n  });\n\n  useKeyboard(\n    {\n      left: () => closePlaylist('left'),\n      right: () => closePlaylist('right'),\n    },\n    active,\n  );\n\n  useEffect(() => {\n    const param = new URLSearchParams(window.location.search).get('playlist');\n    if (param) {\n      focusElement(`playlist-${param}`);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (focused) {\n      const playlist = playlists.find((list) => `playlist-${list.name}` === focused);\n      if (playlist) {\n        /// push query param to url containing playlist name\n        const url = new URL(window.location.href);\n        url.searchParams.set('playlist', playlist.name);\n        window.history.pushState(null, '', url.toString());\n        setSelectedPlaylist(playlist.name);\n      }\n    }\n  }, [focused, playlists]);\n\n  return (\n    <Container data-test=\"song-list-playlists\" active={active}>\n      {playlists.map((playlist) => (\n        <Playlist\n          key={playlist.name}\n          data-selected={`playlist-${playlist.name}` === focused}\n          active={active}\n          {...register(\n            `playlist-${playlist.name}`,\n            () => focusElement(`playlist-${playlist.name}`),\n            undefined,\n            playlist.name === selectedPlaylist,\n          )}\n          {...(!active ? { selected: `playlist-${playlist.name}` === focused } : {})}>\n          {playlist.display ?? playlist.name}\n        </Playlist>\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div<{ active: boolean }>`\n  background: rgba(0, 0, 0, ${(props) => (props.active ? 0.75 : 0.5)});\n  width: 100vh;\n  transform-origin: top right;\n  transform: rotate(-90deg);\n  position: absolute;\n  z-index: 200;\n  left: -100vh;\n  top: 0;\n  font-size: 3.6rem;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row-reverse;\n  gap: 0;\n\n  h2 {\n    ${typography};\n    margin: 0;\n  }\n`;\n\nconst Playlist = styled(Button)<{ selected?: boolean; active: boolean }>`\n  font-size: 2.75rem;\n  justify-self: stretch;\n  flex-grow: 1;\n  ${(props) => !props.focused && props.active && `background-color: transparent;`};\n  padding: 1.5rem;\n  ${(props) => (props.selected ? focusedStatic : !props.active && `opacity: .75;`)}\n`;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M16.67 13.13C18.04 14.06 19 15.32 19 17v3h4v-3c0-2.18-3.57-3.47-6.33-3.87\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"9\",\n  cy: \"8\",\n  r: \"4\",\n  fillRule: \"evenodd\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4c-.47 0-.91.1-1.33.24C14.5 5.27 15 6.58 15 8s-.5 2.73-1.33 3.76c.42.14.86.24 1.33.24m-6 1c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4\"\n}, \"2\")], 'PeopleAlt');","/**\n * https://en.wikipedia.org/wiki/List_of_official_languages_by_country_and_territory\n const data = {};\n\n (() => {\n let countryCodes = (() => {\n const langNames = new Intl.DisplayNames(['en'], { type: 'region' });\n const langMap = {};\n for (let i = 0; i < 26; i++) {\n for (let j = 0; j < 26; j++) {\n let code = String.fromCharCode(97 + i) + String.fromCharCode(97 + j);\n let name = langNames.of(code.toUpperCase());\n if (name !== code && name !== undefined) {\n langMap[name] = code;\n }\n }\n }\n const langMap2 = {\n // Avoid using deprecated codes:\n Akan: 'ak',\n Hebrew: 'he',\n Indonesian: 'id',\n Javanese: 'jv',\n Romanian: 'ro',\n Yiddish: 'yi',\n // Optional extras:\n Tagalog: 'tl',\n English: 'gb',\n Korean: 'kr',\n Swedish: 'se',\n Latin: 'va',\n 'Czech Republic': 'cz',\n 'Antigua and Barbuda': 'ag',\n 'Bosnia and Herzegovina': 'ba',\n 'Trinidad and Tobago': 'tt',\n Transnistria: 'md',\n 'South Ossetia': 'ge',\n Somaliland: 'so',\n 'São Tomé and Príncipe': 'st',\n Turkey: 'tr',\n\n 'Saint Vincent and the Grenadines': 'vc',\n 'Saint Lucia': 'lc',\n 'Saint Kitts and Nevis': 'kn',\n 'Sahrawi Arab Democratic Republic': 'eh',\n 'Northern Cyprus': 'cy',\n 'Myanmar': 'mm',\n 'Federated States of Micronesia': 'fm',\n 'Sovereign Military Order of Malta': 'mt',\n 'Ivory Coast': 'ci',\n 'East Timor': 'tl',\n 'Republic of the Congo': 'cg',\n 'Democratic Republic of the Congo': 'cd',\n\n\n\n };\n return { ...langMap, ...langMap2 };\n })();\n\n document.querySelector('table.wikitable > tbody').querySelectorAll('tr').forEach((tr) => {\n /// get first two td elements from tr\n const [first, second] = tr.querySelectorAll('td');\n\n function getValues(td) {\n let values = td.innerText.split('\\n').map((s) => s.trim());\n /// clean the values from all non alphan characters\n return values.map((s) => s.replace(/[^a-zA-Z ]/g, '')).filter(Boolean);\n }\n\n const country = first.querySelector('a')?.innerText ?? getValues(first)[0];\n const languages = getValues(second);\n /// country is a name of the country - convert it to ISO 3166-1 alpha-2 code\n if (countryCodes[country]) {\n data[countryCodes[country]] = languages;\n } else {\n console.log(`No country code for ${country}`);\n }\n });\n\n console.log(JSON.stringify(data, null, 2));\n })();\n */\n// const langMap = {\nconst langMap: Record<string, string[]> = JSON.parse(`{\n  \"af\": [\n    \"Persian Dari\",\n    \"Pashto\"\n  ],\n  \"al\": [\n    \"Albanian\"\n  ],\n  \"dz\": [\n    \"Arabic\",\n    \"Berber\"\n  ],\n  \"ad\": [\n    \"Catalan\"\n  ],\n  \"ao\": [\n    \"Portuguese\"\n  ],\n  \"ag\": [\n    \"English\"\n  ],\n  \"ar\": [\n    \"Spanish\"\n  ],\n  \"am\": [\n    \"Armenian\"\n  ],\n  \"au\": [\n    \"English\"\n  ],\n  \"at\": [\n    \"German\"\n  ],\n  \"az\": [\n    \"Azerbaijani\"\n  ],\n  \"bs\": [\n    \"English\"\n  ],\n  \"bh\": [\n    \"Arabic\"\n  ],\n  \"bd\": [\n    \"Bengali\"\n  ],\n  \"bb\": [\n    \"English\"\n  ],\n  \"by\": [\n    \"Belarusian\",\n    \"Russian\"\n  ],\n  \"be\": [\n    \"Dutch\",\n    \"French\",\n    \"German\"\n  ],\n  \"bz\": [\n    \"English\"\n  ],\n  \"dy\": [\n    \"French\"\n  ],\n  \"bt\": [\n    \"Dzongkha\"\n  ],\n  \"bo\": [\n    \"Spanish\",\n    \"Aymara\",\n    \"Araona\",\n    \"Baure\",\n    \"Bsiro Chiquitano\",\n    \"Canichana\",\n    \"Cavinea\",\n    \"Cayubaba\",\n    \"Chcobo\",\n    \"Chimn\",\n    \"Ese Ejja\",\n    \"Guaran\",\n    \"Guarasuwe\",\n    \"Guarayu\",\n    \"Itonama\",\n    \"Leco\",\n    \"Machajuyai\",\n    \"Machineri\",\n    \"Maropa\",\n    \"Mojeo\",\n    \"Mojeo\",\n    \"Mor\",\n    \"Mosetn\",\n    \"Movima\",\n    \"Pacawara\",\n    \"Puquina\",\n    \"Quechua\",\n    \"Sirion\",\n    \"Tacana\",\n    \"Tapiet\",\n    \"Toromona\",\n    \"Uru-Chipaya\",\n    \"Weenhayek\",\n    \"Yaminawa\",\n    \"Yuki\",\n    \"Yuracar\",\n    \"Zamuco\"\n  ],\n  \"ba\": [\n    \"Bosnian\",\n      \"Croatian\",\n      \"Serbian\"\n  ],\n  \"bw\": [\n    \"English\"\n  ],\n  \"br\": [\n    \"Portuguese\"\n  ],\n  \"bn\": [\n    \"Malay\"\n  ],\n  \"bg\": [\n    \"Bulgarian\"\n  ],\n  \"hv\": [\n    \"French\"\n  ],\n  \"bi\": [\n    \"French\",\n    \"Kirundi\",\n    \"English\"\n  ],\n  \"kh\": [\n    \"Khmer\"\n  ],\n  \"cm\": [\n    \"English\",\n    \"French\"\n  ],\n  \"ca\": [\n    \"English\",\n    \"French\"\n  ],\n  \"cv\": [\n    \"Portuguese\"\n  ],\n  \"cf\": [\n    \"French\",\n    \"Sango\"\n  ],\n  \"td\": [\n    \"Arabic\",\n    \"French\"\n  ],\n  \"cl\": [\n    \"Spanish\"\n  ],\n  \"cn\": [\n    \"Chinese\"\n  ],\n  \"cx\": [\n    \"English\",\n    \"Chinese\",\n    \"Malay\"\n  ],\n  \"cc\": [\n    \"English\",\n    \"Cocos Malay\"\n  ],\n  \"co\": [\n    \"Spanish\"\n  ],\n  \"km\": [\n    \"Arabic\",\n    \"Comorian\",\n    \"French\"\n  ],\n  \"cd\": [\n    \"French\"\n  ],\n  \"cg\": [\n    \"French\"\n  ],\n  \"ck\": [\n    \"English\",\n    \"Cook Islands Mori\"\n  ],\n  \"cr\": [\n    \"Spanish\"\n  ],\n  \"hr\": [\n    \"Croatian\"\n  ],\n  \"cu\": [\n    \"Spanish\"\n  ],\n  \"cy\": [\n    \"Turkish\"\n  ],\n  \"cz\": [\n    \"Czech\",\n    \"Slovak\"\n  ],\n  \"dk\": [\n    \"Danish\"\n  ],\n  \"dj\": [\n    \"Arabic\",\n    \"French\"\n  ],\n  \"dm\": [\n    \"English\"\n  ],\n  \"do\": [\n    \"Spanish\"\n  ],\n  \"tl\": [\n    \"Portuguese\",\n    \"Tetum\"\n  ],\n  \"ec\": [\n    \"Spanish\",\n    \"Quechua\"\n  ],\n  \"eg\": [\n    \"Arabic\"\n  ],\n  \"sv\": [\n    \"Spanish\"\n  ],\n  \"gq\": [\n    \"French\",\n    \"Portuguese\",\n    \"Spanish\"\n  ],\n  \"er\": [\n    \"Tigrinya\"\n  ],\n  \"ee\": [\n    \"Estonian\"\n  ],\n  \"sz\": [\n    \"English\",\n    \"Swazi\"\n  ],\n  \"et\": [\n    \"Afar\",\n    \"Amharic\",\n    \"Oromo\",\n    \"Somali\",\n    \"Tigrinya\"\n  ],\n  \"fj\": [\n    \"English\",\n    \"Fijian\",\n    \"Fiji Hindi\"\n  ],\n  \"fi\": [\n    \"Finnish\",\n    \"Swedish\"\n  ],\n  \"fx\": [\n    \"French\"\n  ],\n  \"ga\": [\n    \"French\"\n  ],\n  \"gm\": [\n    \"English\"\n  ],\n  \"ge\": [\n    \"Ossetian\",\n    \"Russian\"\n  ],\n  \"de\": [\n    \"German\"\n  ],\n  \"gh\": [\n    \"English\"\n  ],\n  \"gr\": [\n    \"Greek\"\n  ],\n  \"gd\": [\n    \"English\"\n  ],\n  \"gt\": [\n    \"Spanish\"\n  ],\n  \"gn\": [\n    \"French\"\n  ],\n  \"gw\": [\n    \"Portuguese\"\n  ],\n  \"gy\": [\n    \"English\"\n  ],\n  \"ht\": [\n    \"French\",\n    \"Creole\"\n  ],\n  \"hn\": [\n    \"Spanish\"\n  ],\n  \"hu\": [\n    \"Hungarian\"\n  ],\n  \"is\": [\n    \"Icelandic\"\n  ],\n  \"in\": [\n    \"Hindi\",\n    \"English\"\n  ],\n  \"id\": [\n    \"Indonesian\"\n  ],\n  \"ir\": [\n    \"Persian\"\n  ],\n  \"iq\": [\n    \"Arabic\",\n    \"Kurdish\"\n  ],\n  \"ie\": [\n    \"Irish\",\n    \"English\"\n  ],\n  \"il\": [\n    \"Hebrew\"\n  ],\n  \"it\": [\n    \"Italian\"\n  ],\n  \"ci\": [\n    \"French\"\n  ],\n  \"jm\": [\n    \"English\"\n  ],\n  \"jp\": [\n    \"Japanese\"\n  ],\n  \"jo\": [\n    \"Arabic\"\n  ],\n  \"kz\": [\n    \"Kazakh\",\n    \"Russian\"\n  ],\n  \"ke\": [\n    \"English\",\n    \"Swahili\"\n  ],\n  \"ki\": [\n    \"English\",\n    \"Gilbertese\"\n  ],\n  \"kp\": [\n    \"Korean\"\n  ],\n  \"kr\": [\n    \"Korean\"\n  ],\n  \"xk\": [\n    \"Albanian\",\n    \"Serbian\"\n  ],\n  \"kw\": [\n    \"Arabic\"\n  ],\n  \"kg\": [\n    \"Kyrgyz\",\n    \"Russian\"\n  ],\n  \"la\": [\n    \"Lao\"\n  ],\n  \"lv\": [\n    \"Latvian\"\n  ],\n  \"lb\": [\n    \"Arabic\"\n  ],\n  \"ls\": [\n    \"Sotho\",\n    \"English\"\n  ],\n  \"lr\": [\n    \"English\"\n  ],\n  \"ly\": [\n    \"Arabic\"\n  ],\n  \"li\": [\n    \"German\"\n  ],\n  \"lt\": [\n    \"Lithuanian\"\n  ],\n  \"lu\": [\n    \"French\",\n    \"German\",\n    \"Luxembourgish\"\n  ],\n  \"mg\": [\n    \"French\",\n    \"Malagasy\"\n  ],\n  \"mw\": [\n    \"English\",\n    \"Chichewa\"\n  ],\n  \"my\": [\n    \"Malay\"\n  ],\n  \"mv\": [\n    \"Dhivehi\"\n  ],\n  \"ml\": [\n    \"Bambara\",\n    \"Bobo\",\n    \"Bozo\",\n    \"Dogon\",\n    \"Fula\",\n    \"Hassaniya\",\n    \"Kassonke\",\n    \"Maninke\",\n    \"Minyanka\",\n    \"Senufo\",\n    \"Songhay\",\n    \"Soninke\",\n    \"Tamasheq\"\n  ],\n  \"mt\": [\n    \"Italian\"\n  ],\n  \"mh\": [\n    \"English\",\n    \"Marshallese\"\n  ],\n  \"mr\": [\n    \"Arabic\"\n  ],\n  \"mu\": [\n    \"English\",\n    \"Morisien\"\n  ],\n  \"mx\": [\n    \"Spanish\"\n  ],\n  \"fm\": [\n    \"English\"\n  ],\n  \"md\": [\n    \"Moldovan\",\n    \"Russian\",\n    \"Ukrainian\"\n  ],\n  \"mc\": [\n    \"French\"\n  ],\n  \"mn\": [\n    \"Mongolian\"\n  ],\n  \"me\": [\n    \"Montenegrin\"\n  ],\n  \"ma\": [\n    \"Arabic\",\n    \"Berber\"\n  ],\n  \"mz\": [\n    \"Portuguese\"\n  ],\n  \"mm\": [\n    \"Burmese\"\n  ],\n  \"na\": [\n    \"English\"\n  ],\n  \"nr\": [\n    \"English\",\n    \"Nauruan\"\n  ],\n  \"np\": [\n    \"Nepali\"\n  ],\n  \"nl\": [\n    \"Dutch\"\n  ],\n  \"nz\": [\n    \"English\",\n    \"Maori\"\n  ],\n  \"ni\": [\n    \"Spanish\"\n  ],\n  \"ne\": [\n    \"French\"\n  ],\n  \"ng\": [\n    \"English\"\n  ],\n  \"nu\": [\n    \"English\",\n    \"Niuean\"\n  ],\n  \"nf\": [\n    \"English\",\n    \"Norfuk\"\n  ],\n  \"mk\": [\n    \"Macedonian\",\n    \"Albanian\"\n  ],\n  \"no\": [\n    \"Norwegian\",\n    \"Sami\"\n  ],\n  \"om\": [\n    \"Arabic\"\n  ],\n  \"pk\": [\n    \"Urdu\",\n    \"English\"\n  ],\n  \"pw\": [\n    \"English\",\n    \"Palauan\"\n  ],\n  \"ps\": [\n    \"Arabic\"\n  ],\n  \"pa\": [\n    \"Spanish\"\n  ],\n  \"pg\": [\n    \"English\",\n    \"Hiri Motu\",\n    \"Tok Pisin\"\n  ],\n  \"py\": [\n    \"Spanish\",\n    \"Guaran\"\n  ],\n  \"pe\": [\n    \"Spanish\",\n    \"Quechua\",\n    \"Aymara\",\n    \"Ashninka\"\n  ],\n  \"ph\": [\n    \"Filipino\",\n    \"English\"\n  ],\n  \"pl\": [\n    \"Polish\"\n  ],\n  \"pt\": [\n    \"Portuguese\"\n  ],\n  \"qa\": [\n    \"Arabic\"\n  ],\n  \"ro\": [\n    \"Romanian\"\n  ],\n  \"su\": [\n    \"Russian\"\n  ],\n  \"rw\": [\n    \"English\",\n    \"French\",\n    \"Kinyarwanda\",\n    \"Swahili\"\n  ],\n  \"eh\": [\n    \"Arabic\"\n  ],\n  \"kn\": [\n    \"English\"\n  ],\n  \"lc\": [\n    \"English\"\n  ],\n  \"vc\": [\n    \"English\"\n  ],\n  \"ws\": [\n    \"English\",\n    \"Samoan\"\n  ],\n  \"sm\": [\n    \"Italian\"\n  ],\n  \"st\": [\n    \"Portuguese\"\n  ],\n  \"sa\": [\n    \"Arabic\"\n  ],\n  \"sn\": [\n    \"French\"\n  ],\n  \"yu\": [\n    \"Serbian\"\n  ],\n  \"sc\": [\n    \"English\",\n    \"French\",\n    \"Creole\"\n  ],\n  \"sl\": [\n    \"English\"\n  ],\n  \"sg\": [\n    \"English\",\n    \"Malay\",\n    \"Chinese\",\n    \"Tamil\"\n  ],\n  \"sk\": [\n    \"Slovak\"\n  ],\n  \"si\": [\n    \"Slovene\"\n  ],\n  \"sb\": [\n    \"English\"\n  ],\n  \"so\": [\n    \"Arabic\",\n    \"English\",\n    \"Somali\"\n  ],\n  \"za\": [\n    \"Afrikaans\",\n    \"English\",\n    \"Ndebele\",\n    \"Sotho\",\n    \"Swazi\",\n    \"Tsonga\",\n    \"Tswana\",\n    \"Venda\",\n    \"Xhosa\",\n    \"Zulu\"\n  ],\n  \"ss\": [\n    \"English\"\n  ],\n  \"es\": [\n    \"Spanish\"\n  ],\n  \"lk\": [\n    \"Sinhala\",\n    \"Tamil\"\n  ],\n  \"sd\": [\n    \"Arabic\",\n    \"English\"\n  ],\n  \"sr\": [\n    \"Dutch\"\n  ],\n  \"se\": [\n    \"Swedish\"\n  ],\n  \"ch\": [\n    \"French\",\n    \"German\",\n    \"Italian\",\n    \"Romansh\"\n  ],\n  \"sy\": [\n    \"Arabic\"\n  ],\n  \"tw\": [\n    \"Chinese\"\n  ],\n  \"tj\": [\n    \"Tajik\"\n  ],\n  \"tz\": [\n    \"Swahili\",\n    \"English\"\n  ],\n  \"th\": [\n    \"Thai\"\n  ],\n  \"tg\": [\n    \"French\"\n  ],\n  \"tk\": [\n    \"English\",\n    \"Tokelauan\"\n  ],\n  \"to\": [\n    \"English\",\n    \"Tongan\"\n  ],\n  \"tt\": [\n    \"English\"\n  ],\n  \"tn\": [\n    \"Arabic\"\n  ],\n  \"tr\": [\n    \"Turkish\"\n  ],\n  \"tm\": [\n    \"Turkmen\"\n  ],\n  \"tv\": [\n    \"Tuvaluan\",\n    \"English\"\n  ],\n  \"ug\": [\n    \"English\",\n    \"Swahili\"\n  ],\n  \"ua\": [\n    \"Ukrainian\"\n  ],\n  \"ae\": [\n    \"Arabic\"\n  ],\n  \"uk\": [\n    \"English\"\n  ],\n  \"us\": [\n    \"English\"\n  ],\n  \"uy\": [\n    \"Spanish\"\n  ],\n  \"uz\": [\n    \"Uzbek\"\n  ],\n  \"vu\": [\n    \"English\",\n    \"French\",\n    \"Bislama\"\n  ],\n  \"va\": [\n    \"Italian\"\n  ],\n  \"ve\": [\n    \"Spanish\"\n  ],\n  \"vn\": [\n    \"Vietnamese\"\n  ],\n  \"ye\": [\n    \"Arabic\"\n  ],\n  \"zm\": [\n    \"English\"\n  ],\n  \"zw\": [\n    \"Chewa\",\n    \"Chibarwe\",\n    \"English\",\n    \"Kalanga\",\n    \"Khoisan\",\n    \"Nambya\",\n    \"Ndau\",\n    \"Ndebele\",\n    \"Shangani\",\n    \"Shona\",\n    \"Sotho\",\n    \"Tonga\",\n    \"Tswana\",\n    \"Venda\",\n    \"Xhosa\"\n  ]\n}`);\n// };\n\nexport default langMap;\n","import { Flag } from 'Elements/Flag';\nimport langMap from 'Elements/Flag/mapping';\nimport { SongPreview } from 'interfaces';\nimport { useMemo } from 'react';\n\n// skipping US and GB songs as there are a lot of them making the list look messy\nconst SKIPPED_ORIGINS = ['US', 'GB'];\n\ninterface Props {\n  song: Pick<SongPreview, 'language' | 'artistOrigin'>;\n}\nexport default function SongFlag({ song, ...props }: Props) {\n  const lang = Array.isArray(song.language) ? song.language[0] : song.language;\n\n  const isLangArtistOrigin = useMemo(() => {\n    if (!song.artistOrigin) return false;\n    return langMap[song.artistOrigin.toLowerCase()]?.includes(lang) ?? false;\n  }, [song.artistOrigin, lang]);\n\n  return (\n    <>\n      {isLangArtistOrigin && !SKIPPED_ORIGINS.includes(song.artistOrigin!) ? (\n        <Flag isocode={song.artistOrigin!} {...props} />\n      ) : song.language !== 'English' ? (\n        <Flag language={song.language} {...props} />\n      ) : null}\n    </>\n  );\n}\n","import events from 'GameEvents/GameEvents';\nimport { useEventEffect } from 'GameEvents/hooks';\nimport { SongStats, fetchSongStats, getSongKey, storeSongStats } from 'Songs/stats/common';\nimport { SongPreview } from 'interfaces';\nimport { useEffect, useState } from 'react';\n\nexport const useSongStats = (song: Pick<SongPreview, 'artist' | 'title'>) => {\n  const [stats, setStats] = useState<SongStats | null>(null);\n\n  const storageKey = getSongKey(song);\n\n  const setSongStats = async () => {\n    setStats(await fetchSongStats(song));\n  };\n\n  useEffect(() => {\n    setSongStats();\n  }, [storageKey]);\n\n  useEventEffect(events.songStatStored, setSongStats);\n\n  return stats;\n};\n\nexport const useEditScore = (song: Pick<SongPreview, 'artist' | 'title'>) => {\n  return async (singId: string, score: number, oldName: string, newName: string) => {\n    const storageKey = getSongKey(song);\n    const data = await fetchSongStats(song);\n\n    const newScores = data.scores.map((record) => {\n      if (record.setup.id !== singId) return record;\n\n      const newScores = record.scores.map((previousScore) => {\n        if (previousScore.name !== oldName || previousScore.score !== score) return previousScore;\n\n        return { name: newName.trim(), score };\n      });\n\n      return { ...record, scores: newScores };\n    });\n\n    const newData = { ...data, scores: newScores };\n\n    await storeSongStats(song, newData);\n    events.songScoreUpdated.dispatch(storageKey, newData, newName.trim());\n  };\n};\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\nimport { typography } from 'Elements/cssMixins';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport SongFlag from 'Scenes/SingASong/SongSelection/Components/SongCard/SongFlag';\nimport { useSongStats } from 'Songs/stats/hooks';\nimport dayjs from 'dayjs';\nimport { SongPreview } from 'interfaces';\nimport { ComponentProps, ReactNode, useCallback } from 'react';\n\ninterface Props extends ComponentProps<typeof SongCardContainer> {\n  song: SongPreview;\n  focused: boolean;\n  index?: number;\n  expanded?: boolean;\n  background?: boolean;\n  handleClick?: (index: number) => void;\n  video?: ReactNode;\n}\n\nexport const FinalSongCard = ({\n  song,\n  focused,\n  video,\n  children,\n  index,\n  handleClick,\n  background = true,\n  expanded = false,\n  ...restProps\n}: Props) => {\n  const onClickCallback = useCallback(() => (handleClick ? handleClick(index!) : undefined), [handleClick, index]);\n\n  return (\n    <SongCardContainer {...restProps} onClick={handleClick ? onClickCallback : undefined}>\n      {background && (\n        <SongCardBackground\n          style={{\n            backgroundImage: `url('https://i3.ytimg.com/vi/${song.video}/hqdefault.jpg')`,\n          }}\n          focused={focused}\n          expanded={expanded}\n        />\n      )}\n      <SongInfo expanded={expanded}>\n        {!expanded && <SongCardStatsIndicator song={song} />}\n        {song.tracksCount > 1 && !expanded && (\n          <MultiTrackIndicator data-test=\"multitrack-indicator\">\n            <PeopleAltIcon />\n            &nbsp; Duet\n          </MultiTrackIndicator>\n        )}\n        <SongListEntryDetailsArtist expanded={expanded}>{song.artist}</SongListEntryDetailsArtist>\n        <SongListEntryDetailsTitle expanded={expanded}>{song.title}</SongListEntryDetailsTitle>\n        <ExpandedData expanded={expanded}>\n          {expanded && (\n            <>\n              {song.author && (\n                <SongAuthor expanded={expanded}>\n                  by&nbsp;\n                  {song.authorUrl ? (\n                    <a href={song.authorUrl} target=\"_blank\" rel=\"noreferrer\">\n                      {song.author}\n                    </a>\n                  ) : (\n                    song.author\n                  )}\n                </SongAuthor>\n              )}\n              <SongListEntryStats song={song} />\n            </>\n          )}\n          {!expanded && <Language song={song} />}\n        </ExpandedData>\n      </SongInfo>\n      {children}\n      {video}\n    </SongCardContainer>\n  );\n};\n\nexport const Language = styled(SongFlag)`\n  height: 2.75rem;\n  object-fit: cover;\n  border-top-right-radius: 1rem;\n  position: absolute;\n  z-index: -1;\n  left: 0rem;\n  bottom: 0rem;\n  opacity: 0.95;\n`;\n\nexport const ExpandedData = styled.div<{ expanded: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nconst SongInfo = styled.div<{ expanded: boolean }>`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n  z-index: 1;\n  box-sizing: border-box;\n\n  flex-direction: column;\n\n  ${(props) =>\n    props.expanded &&\n    css`\n      align-items: flex-start;\n      justify-content: flex-start;\n    `}\n`;\n\nexport const SongCardContainer = styled.div`\n  font-size: 4.5rem;\n\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n  flex-direction: column;\n  box-sizing: border-box;\n  position: relative;\n  padding: 0.5rem;\n\n  border: 0.1rem black solid;\n  border-radius: 1rem;\n`;\n\nexport const SongCardBackground = styled.div<{\n  focused: boolean;\n  expanded: boolean;\n}>`\n  background-color: ${styles.colors.text.inactive};\n  position: absolute;\n  z-index: -1;\n  inset: 0;\n  ${(props) =>\n    props.theme.graphicSetting === 'high'\n      ? css`\n          background-size: ${props.focused ? 100 : 110}%;\n          ${!props.focused ? 'filter: grayscale(90%);' : ''}\n          ${props.expanded ? 'filter: blur(10px);' : ''}\n                  transition: 300ms;\n          opacity: ${props.focused ? 1 : 0.8};\n        `\n      : css`\n          background-size: 100%;\n          opacity: ${props.focused ? 1 : 0.6};\n        `}\n  background-position: center center;\n`;\n\nexport const SongListEntryDetails = styled.span<{ expanded?: boolean }>`\n  background: rgba(0, 0, 0, 0.7);\n\n  width: auto;\n  display: inline-block;\n  padding: 0.5rem;\n  ${typography};\n\n  text-align: right;\n  font-size: ${({ expanded }) => (expanded ? '6rem' : '2.7rem')};\n`;\n\nexport const SongListEntryDetailsArtist = styled(SongListEntryDetails)`\n  color: ${styles.colors.text.active};\n`;\n\nexport const SongListEntryDetailsTitle = styled(SongListEntryDetails)`\n  margin-top: ${(props) => (props.expanded ? '1.5rem' : '0.5rem')};\n  color: white;\n`;\n\nexport const SongAuthor = styled(SongListEntryDetailsTitle)`\n  font-size: 3rem;\n  margin-top: 3rem;\n`;\n\nexport const SongCardStatsIndicator = ({ song }: { song: SongPreview }) => {\n  const stats = useSongStats(song);\n  const lastPlayed = stats?.scores?.at(-1)?.date ?? false;\n\n  const playedToday = lastPlayed && dayjs(lastPlayed).isAfter(dayjs().subtract(1, 'days'));\n\n  return stats?.plays ? (\n    <SongStatIndicator data-test=\"song-stat-indicator\">{playedToday ? 'Played today' : stats.plays}</SongStatIndicator>\n  ) : null;\n};\n\nconst SongStatIndicator = styled.div`\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  padding: 0 1rem;\n  height: 2.75rem;\n  min-width: 2.75rem;\n  box-sizing: border-box;\n  border-radius: 5rem;\n  color: white;\n  background: rgba(0, 0, 0, 0.75);\n  font-size: 1.4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n`;\nconst MultiTrackIndicator = styled(SongStatIndicator)`\n  left: 0.5rem;\n  right: auto;\n\n  svg {\n    width: 1.75rem;\n    height: 1.75rem;\n  }\n`;\n\nexport const SongListEntryStats = ({ song }: { song: SongPreview }) => {\n  const stats = useSongStats(song);\n\n  return (\n    <SongAuthor>\n      {stats?.plays ? `Played ${stats.plays} time${stats.plays > 1 ? 's' : ''}` : 'Never played yet'}\n    </SongAuthor>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Button } from 'Elements/Button';\nimport { typography } from 'Elements/cssMixins';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { SongGroup } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport { useEffect, useState } from 'react';\n\ninterface Props {\n  containerRef: React.RefObject<HTMLDivElement>;\n  groupedSongList: SongGroup[];\n  selectSong: (songIndex: number) => void;\n}\n\nexport default function SongGroupsNavigation({ groupedSongList, containerRef, selectSong }: Props) {\n  const [activeGroups, setActiveGroups] = useState<string[]>([]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          const id = entry.target.getAttribute('data-group-letter')!;\n\n          if (entry.isIntersecting) {\n            setActiveGroups((current) => [...current, id]);\n          } else {\n            setActiveGroups((current) => current.filter((group) => group !== id));\n          }\n        });\n      },\n      { threshold: 0.05 },\n    );\n    groupedSongList.forEach((group) => {\n      const element = document.querySelector(`[data-group-letter=\"${group.letter}\"]`);\n      if (element) {\n        observer.observe(element);\n      }\n    });\n    return () => {\n      observer.disconnect();\n      setActiveGroups([]);\n    };\n  }, [groupedSongList]);\n\n  const scrollToGroup = (group: SongGroup) => {\n    selectSong(group.songs[0].index);\n\n    // wait for the song to be selected and scrolled into view - then override the scroll and scroll to the group instead\n    setTimeout(() => {\n      const element = document.querySelector(`[data-group-letter=\"${group.letter}\"]`);\n      if (element && containerRef.current) {\n        // calculate 10rem offset from top\n        const offset = 10 * parseFloat(getComputedStyle(document.documentElement).fontSize);\n\n        const topPos = element.getBoundingClientRect().top + containerRef.current.scrollTop - offset;\n        containerRef.current.scrollTo({ top: topPos, behavior: 'smooth' });\n      }\n    }, 20);\n  };\n\n  return (\n    <>\n      <Container>\n        {groupedSongList.map((group) => {\n          const active = activeGroups.includes(group.letter);\n          return (\n            <SongsGroupButton\n              key={group.letter}\n              active={active}\n              onClick={() => scrollToGroup(group)}\n              data-active={active}\n              data-test={`group-navigation-${group.letter}`}>\n              {group.letter}\n            </SongsGroupButton>\n          );\n        })}\n      </Container>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  position: fixed;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  top: 0;\n  left: 6.2rem;\n  padding: 1rem 0 1.5rem 2rem;\n  width: 100%;\n  z-index: 100;\n  gap: 1rem;\n  background: rgba(0, 0, 0, 0.8);\n`;\n\nconst SongsGroupButton = styled(Button)<{ active: boolean }>`\n  border: none;\n  cursor: pointer;\n  ${typography};\n  display: inline-block;\n  padding: 0.5rem 1.25rem;\n  font-size: 2.75rem;\n  z-index: 1;\n  color: ${styles.colors.text.default};\n  background: ${(props) => (props.active ? styles.colors.lines.star.stroke : 'rgba(0, 0, 0, 0.7)')};\n`;\n","import styled from '@emotion/styled';\nimport SwapHorizIcon from '@mui/icons-material/SwapHoriz';\nimport { Button } from 'Elements/Button';\nimport { nextIndex, nextValue, Switcher } from 'Elements/Switcher';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { GAME_MODE, SingSetup, SongPreview } from 'interfaces';\nimport createPersistedState from 'use-persisted-state';\nimport { ValuesType } from 'utility-types';\nimport isDev from 'utils/isDev';\nimport { v4 } from 'uuid';\n\ninterface Props {\n  songPreview: SongPreview;\n  onNextStep: (setup: SingSetup) => void;\n  keyboardControl: boolean;\n  onExitKeyboardControl: () => void;\n}\n\nconst gameModeNames = {\n  [GAME_MODE.DUEL]: 'Duel',\n  [GAME_MODE.PASS_THE_MIC]: 'Pass The Mic',\n  [GAME_MODE.CO_OP]: 'Cooperation',\n};\n\nconst difficultyNames = ['Hard', 'Medium', 'Easy'];\n\nif (isDev()) {\n  difficultyNames.push('Debug 4');\n  difficultyNames.push('Debug 5');\n  difficultyNames.push('Debug 6');\n}\n\n// added -v3 to the key as the value to handle default selection if it wasnt changed\nconst useSetGameMode = createPersistedState<ValuesType<typeof GAME_MODE> | null>('song_settings-game_mode-v3');\nconst useSetTolerance = createPersistedState<number>('song_settings-tolerance-v2');\n\nexport default function GameSettings({ songPreview, onNextStep, keyboardControl, onExitKeyboardControl }: Props) {\n  const [rememberedMode, setMode] = useSetGameMode(null);\n  const mode = rememberedMode ?? (songPreview.tracksCount > 1 ? GAME_MODE.CO_OP : GAME_MODE.DUEL);\n  const [tolerance, setTolerance] = useSetTolerance(1);\n\n  const handleNextButton = () => {\n    const singSetup = {\n      id: v4(),\n      players: [],\n      mode,\n      tolerance: tolerance + 1,\n    };\n    onNextStep(singSetup);\n  };\n\n  const changeMode = () => {\n    setMode(nextValue(Object.values(GAME_MODE), mode));\n  };\n\n  const changeTolerance = () => setTolerance((current) => nextIndex(difficultyNames, current, -1));\n\n  const { register } = useKeyboardNav({ enabled: keyboardControl, onBackspace: onExitKeyboardControl });\n\n  return (\n    <>\n      <GSSwitcher\n        {...register('difficulty-setting', changeTolerance, 'Change difficulty')}\n        label=\"Difficulty\"\n        value={difficultyNames[tolerance]}\n        data-test-value={difficultyNames[tolerance]}\n      />\n      <GSSwitcher\n        {...register('game-mode-setting', changeMode, 'Change mode')}\n        label=\"Mode\"\n        value={gameModeNames[mode]}\n        data-test-value={gameModeNames[mode]}\n      />\n      <ModeDescription>\n        {mode === GAME_MODE.DUEL && 'Face off against each other - person that earns more points wins.'}\n        {mode === GAME_MODE.CO_OP && 'Join forces and sing together - your points will be added up to a single pool.'}\n        {mode === GAME_MODE.PASS_THE_MIC && (\n          <>\n            For more than 2 players - split into groups and pass the microphone within the group when prompted with{' '}\n            <SwapHorizIcon /> symbol.\n          </>\n        )}\n      </ModeDescription>\n      <PlayButton {...register('next-step-button', handleNextButton, undefined, true)}>Next ➤</PlayButton>\n    </>\n  );\n}\n\nconst PlayButton = styled(Button)`\n  padding: 0.5rem 9rem;\n  font-size: 4.3rem;\n  width: 50rem;\n`;\n\nconst ModeDescription = styled.h3`\n  max-width: 50rem;\n  margin: -1rem 0 1rem !important;\n  padding: 1.5rem;\n  background: rgba(0, 0, 0, 0.7);\n  box-sizing: border-box;\n`;\n\nconst GSSwitcher = styled(Switcher)`\n  font-size: 4.3rem;\n  padding: 1rem;\n  min-width: 50rem;\n  box-sizing: border-box;\n`;\n","import styled from '@emotion/styled';\nimport { Warning } from '@mui/icons-material';\nimport events from 'GameEvents/GameEvents';\nimport { useEventListenerSelector } from 'GameEvents/hooks';\nimport PlayersManager from 'Players/PlayersManager';\nimport usePlayerMic from 'hooks/players/usePlayerMic';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nexport default function NoiseDetection() {\n  const inputs = useEventListenerSelector(events.playerInputChanged, () => PlayersManager.getInputs());\n  const isBuiltIn = inputs.some((input) => input.source === 'Microphone');\n\n  const measures = useRef<Array<[number, number]>>([]);\n  const handleMeasure = useCallback((data: [number, number]) => {\n    measures.current.push(data);\n  }, []);\n\n  usePlayerMic(0, 50, handleMeasure);\n\n  const [noiseDetected, setNoiseDetected] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(\n      () => {\n        const noDetection = measures.current.filter(([, freq]) => freq === 0);\n        const detection = measures.current.filter(([, freq]) => freq > 0);\n        const avgNoDetectionVolume = noDetection.reduce((acc, [volume]) => acc + volume, 0) / (noDetection.length + 1);\n        const avgDetectionVolume = detection.reduce((acc, [volume]) => acc + volume, 0) / (detection.length + 1);\n\n        // The logic is that if the singing measures and non-singing measures have similar volume, then there's\n        // something playing in the background that is picked up as singing. If someone is singing into the mic\n        // the non-singing measures are usually quiet compared to singing measures.\n        const isNoisy =\n          detection.length > noDetection.length * 0.1 &&\n          avgDetectionVolume > 0.01 &&\n          avgNoDetectionVolume > 0.01 &&\n          avgDetectionVolume - avgNoDetectionVolume < avgNoDetectionVolume / 2;\n\n        setNoiseDetected(isNoisy);\n        measures.current.length = 0;\n      },\n      noiseDetected ? 5000 : 2500,\n    );\n\n    return () => clearInterval(interval);\n  }, [noiseDetected]);\n\n  return (\n    <NoiseWarningContainer visible={noiseDetected}>\n      <h2>\n        <strong>\n          <Warning />\n        </strong>{' '}\n        Noise detected\n      </h2>\n      <hr />\n      <h4>\n        This might make singing inaccurate. Make sure your microphone doesn't pick up the music.{' '}\n        {isBuiltIn && (\n          <>\n            Alternatively, use your <strong>smartphone as a microphone</strong> instead.\n          </>\n        )}\n      </h4>\n    </NoiseWarningContainer>\n  );\n}\n\nconst NoiseWarningContainer = styled.div<{ visible: boolean }>`\n  opacity: ${(props) => (props.visible ? 1 : 0)};\n  transition: 300ms;\n  background: rgba(0, 0, 0, 0.75);\n  padding: 1rem;\n  max-width: 50rem;\n  position: relative;\n  top: -1rem;\n  left: -0.5rem;\n`;\n","import styled from '@emotion/styled';\nimport { PlayerMicCheck } from 'Elements/VolumeIndicator';\nimport { PlayerEntity } from 'Players/PlayersManager';\nimport Ping from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/Ping';\nimport PlayerStatus from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/Status';\nimport usePlayerMicStatus from 'hooks/players/usePlayerMicStatus';\n\ninterface Props {\n  player: PlayerEntity;\n}\nexport default function SinglePlayer({ player }: Props) {\n  const status = usePlayerMicStatus(player.number);\n\n  return (\n    <Indicator key={player.number} data-test={`indicator-player-${player.number}`}>\n      <Ping playerNumber={player.number} />\n      <PlayerStatus status={status} />\n      {status !== 'unavailable' && <PlayerMicCheck playerNumber={player.number} />}\n      <PlayerName className=\"ph-no-capture\">{player.getName()}</PlayerName>\n    </Indicator>\n  );\n}\n\nconst Indicator = styled.div`\n  position: relative;\n  border: 0.1rem solid white;\n  padding: 1rem 3rem;\n  background: black;\n  width: 80%;\n\n  text-align: center;\n  gap: 1.25rem;\n  font-size: 2.3rem;\n  color: white;\n\n  -webkit-text-stroke: 1px black;\n`;\n\nconst PlayerName = styled.span`\n  position: relative;\n  z-index: 1;\n`;\n","import styled from '@emotion/styled';\nimport { typography } from 'Elements/cssMixins';\nimport events from 'GameEvents/GameEvents';\nimport { useEventListener, useEventListenerSelector } from 'GameEvents/hooks';\nimport PlayersManager from 'Players/PlayersManager';\nimport InputManager from 'Scenes/Game/Singing/Input/InputManager';\nimport NoiseDetection from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/NoiseDetection';\nimport SinglePlayer from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/SinglePlayer';\nimport { ComponentProps, useEffect } from 'react';\n\nexport default function MicCheck(props: ComponentProps<typeof Container>) {\n  // Force update when the name changes\n  useEventListener(events.playerNameChanged);\n\n  useEffect(() => {\n    InputManager.startMonitoring();\n  }, []);\n\n  const inputs = useEventListenerSelector(events.playerInputChanged, () => PlayersManager.getInputs());\n  const isSetup = inputs.some((input) => input.source !== 'Dummy');\n\n  return (\n    <Container {...props}>\n      <MicChecksContainer>\n        Microphone Check\n        {isSetup ? (\n          PlayersManager.getPlayers().map((player) => <SinglePlayer key={player.number} player={player} />)\n        ) : (\n          <>\n            <Indicator>Mic not setup</Indicator>\n            <h4>Singing will be emulated</h4>\n            <h5>You can setup in the Next step</h5>\n          </>\n        )}\n      </MicChecksContainer>\n      <NoiseDetection />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  font-size: 3rem;\n  ${typography};\n  margin-bottom: 8.6rem;\n  gap: 3.5rem;\n`;\n\nconst MicChecksContainer = styled.div`\n  gap: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Indicator = styled.div`\n  position: relative;\n  border: 0.1rem solid white;\n  padding: 1rem 3rem;\n  background: black;\n  width: 80%;\n\n  text-align: center;\n  gap: 1.25rem;\n  font-size: 2.3rem;\n  color: white;\n`;\n","import styled from '@emotion/styled';\nimport { typography } from 'Elements/cssMixins';\nimport { Input } from 'Elements/Input';\nimport { nextIndex } from 'Elements/Switcher';\nimport {\n  ComponentProps,\n  ForwardedRef,\n  forwardRef,\n  KeyboardEventHandler,\n  ReactNode,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\n\ninterface Props extends ComponentProps<typeof Input> {\n  label: ReactNode;\n  value: string;\n  onChange: (value: string) => void;\n  disabled?: boolean;\n  options: string[];\n  placeholder?: string;\n  keyboardNavigationChangeFocus?: (direction: -1 | 1) => void;\n  onBlur?: () => void;\n  className?: string;\n}\n\nexport const Autocomplete = forwardRef(\n  (\n    {\n      options,\n      focused,\n      label,\n      value,\n      onChange,\n      disabled,\n      placeholder,\n      keyboardNavigationChangeFocus,\n      onBlur,\n      className,\n      ...restProps\n    }: Props,\n    forwardedRef: ForwardedRef<HTMLInputElement | null>,\n  ) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    useImperativeHandle(forwardedRef, () => inputRef.current!);\n\n    const autocompleteMenu = useRef<HTMLDivElement>(null);\n\n    const [isInputFocused, setIsInputFocused] = useState(false);\n    const [focusedOption, setFocusedOption] = useState(-1);\n\n    const filteredOptions = useMemo(\n      () =>\n        options.filter(\n          (option) => option.toLowerCase().trim().includes(value.toLowerCase().trim()) && option !== value,\n        ),\n      [options, value],\n    );\n\n    const handleKeyDown: KeyboardEventHandler<HTMLInputElement> = (e) => {\n      if (e.code === 'ArrowUp' || e.code === 'ArrowDown') {\n        if (filteredOptions.length) {\n          e.preventDefault();\n          const newIndex = nextIndex(filteredOptions, focusedOption, e.code === 'ArrowUp' ? -1 : 1);\n          setFocusedOption(newIndex);\n\n          const option = autocompleteMenu.current?.querySelector(`[data-index=\"${newIndex}\"]`) as HTMLDivElement;\n\n          option?.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        } else {\n          inputRef.current?.blur();\n          keyboardNavigationChangeFocus?.(e.code === 'ArrowUp' ? -1 : 1);\n        }\n      } else if (e.code === 'Enter') {\n        const option = filteredOptions[focusedOption];\n        if (option) {\n          setFocusedOption(-1);\n          onChange(option);\n        } else {\n          inputRef.current?.blur();\n        }\n      }\n    };\n\n    const handleBlur = () => {\n      setTimeout(() => {\n        setIsInputFocused(false);\n        onBlur?.();\n      }, 300);\n    };\n\n    return (\n      <Container className={className}>\n        <Input\n          onFocus={() => setIsInputFocused(true)}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          onChange={onChange}\n          value={value}\n          focused={focused}\n          label={label}\n          disabled={disabled}\n          ref={inputRef}\n          placeholder={placeholder}\n          {...restProps}\n        />\n        {isInputFocused && !!filteredOptions.length && (\n          <AutocompleteMenu ref={autocompleteMenu} role=\"listbox\">\n            {filteredOptions.map((option, index) => (\n              <AutocompleteMenuitem\n                role=\"listitem\"\n                data-index={index}\n                data-focused={index === focusedOption}\n                key={option}\n                focused={index === focusedOption}\n                onClick={() => {\n                  onChange(option);\n                  setFocusedOption(-1);\n                  inputRef.current?.blur();\n                }}>\n                {option}\n              </AutocompleteMenuitem>\n            ))}\n          </AutocompleteMenu>\n        )}\n      </Container>\n    );\n  },\n);\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst AutocompleteMenu = styled.div`\n  margin-top: 0.1em;\n  position: absolute;\n  width: 100%;\n  background: black;\n  max-height: ${(1 + 2 * 0.3) * 4}em;\n  overflow-y: auto;\n  z-index: 2;\n`;\n\nconst AutocompleteMenuitem = styled.div<{ focused: boolean }>`\n  ${typography};\n  padding: 0.3em;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: ${(props) => (props.focused ? styles.colors.text.active : 'white')};\n  cursor: pointer;\n`;\n\ninterface TestWrapperProps {\n  label: string;\n  options: string[];\n  focused: boolean;\n}\n\nexport const AutocompleteTestWrapper = ({ label, options, focused }: TestWrapperProps) => {\n  const [value, setValue] = useState('');\n  return <Autocomplete value={value} onChange={setValue} label={label} options={options} focused={focused} />;\n};\n","import styled from '@emotion/styled';\nimport { Autocomplete } from 'Elements/Autocomplete';\nimport { Switcher } from 'Elements/Switcher';\nimport events from 'GameEvents/GameEvents';\nimport { useEventListener } from 'GameEvents/hooks';\nimport { PlayerEntity } from 'Players/PlayersManager';\nimport { MAX_NAME_LENGTH } from 'consts';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { PlayerSetup, SongPreview } from 'interfaces';\nimport { useRef, useState } from 'react';\n\ninterface Props {\n  multipleTracks: boolean;\n  player: PlayerEntity | undefined;\n  songPreview: SongPreview;\n  onChange: (setup: PlayerSetup) => void;\n  setup: PlayerSetup;\n  playerNames: string[];\n  register: ReturnType<typeof useKeyboardNav>['register'];\n}\n\nconst getTrackName = (tracks: SongPreview['tracks'], index: number) => tracks[index]?.name ?? `Track ${index + 1}`;\n\nexport default function SinglePlayer({\n  multipleTracks,\n  player,\n  songPreview,\n  playerNames,\n  register,\n  onChange,\n  setup,\n}: Props) {\n  const [inputTouched, setInputTouched] = useState(false);\n  const nameRef = useRef<HTMLInputElement | null>(null);\n  // Force update when the name changes\n  useEventListener(events.playerNameChanged);\n\n  if (player === undefined) {\n    return null;\n  }\n\n  const togglePlayerTrack = () =>\n    onChange({ number: player.number, track: (setup.track + 1) % songPreview.tracksCount });\n\n  const onNameChange = (newName: string) => {\n    setInputTouched(true);\n    player.setName(newName);\n  };\n\n  const isDefaultName = !inputTouched;\n  const currentName = player.getName();\n\n  return (\n    <>\n      <PlayerName\n        maxLength={MAX_NAME_LENGTH}\n        className=\"ph-no-capture\"\n        value={isDefaultName ? '' : currentName}\n        placeholder={isDefaultName ? currentName : undefined}\n        options={playerNames}\n        onChange={onNameChange}\n        label=\"Name:\"\n        ref={nameRef}\n        {...register(`player-${player.number}-name`, () => nameRef.current?.focus())}\n      />\n      {multipleTracks && (\n        <Track\n          {...register(`player-${player.number}-track-setting`, togglePlayerTrack, 'Change track')}\n          label=\"Track\"\n          value={getTrackName(songPreview.tracks, setup.track)}\n          data-test-value={setup.track + 1}\n        />\n      )}\n    </>\n  );\n}\n\nconst PlayerName = styled(Autocomplete)`\n  input {\n    font-size: 4.5rem;\n  }\n\n  [role='listbox'] {\n    max-height: ${6 * (4.5 + 0.3)}rem;\n  }\n`;\nconst Track = styled(Switcher)`\n  font-size: 4.5rem;\n  padding: 1.1rem;\n`;\n","import styled from '@emotion/styled';\nimport { Button } from 'Elements/Button';\nimport { typography } from 'Elements/cssMixins';\nimport gameEvents from 'GameEvents/GameEvents';\nimport { useEventEffect } from 'GameEvents/hooks';\nimport PlayersManager from 'Players/PlayersManager';\nimport InputManager from 'Scenes/Game/Singing/Input/InputManager';\nimport SelectInputModal from 'Scenes/SelectInput/SelectInputModal';\nimport { MicSetupPreferenceSetting, MobilePhoneModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport SinglePlayer from 'Scenes/SingASong/SongSelection/Components/SongSettings/PlayerSettings/SinglePlayer';\nimport { PLAYER_NAMES_SESSION_STORAGE_KEY } from 'hooks/players/consts';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { PlayerSetup, SongPreview } from 'interfaces';\nimport { useEffect, useMemo, useState } from 'react';\n\ninterface Props {\n  songPreview: SongPreview;\n  onNextStep: (players: PlayerSetup[]) => void;\n  keyboardControl: boolean;\n  onExitKeyboardControl: () => void;\n}\n\nexport default function PlayerSettings({ songPreview, onNextStep, keyboardControl, onExitKeyboardControl }: Props) {\n  const [mobilePhoneMode] = useSettingValue(MobilePhoneModeSetting);\n  const [storedPreference] = useSettingValue(MicSetupPreferenceSetting);\n\n  const players = PlayersManager.getPlayers();\n  const multipleTracks = !mobilePhoneMode && players.length === 2 && songPreview.tracksCount > 1;\n  const initialisePlayerSetup = () =>\n    players.map((player, index) => ({\n      number: player.number,\n      track: multipleTracks ? Math.min(index, songPreview.tracksCount - 1) : 0,\n    }));\n  const [playerSetup, setPlayerSetup] = useState<PlayerSetup[]>(initialisePlayerSetup());\n\n  useEventEffect([gameEvents.playerAdded, gameEvents.playerRemoved], () => setPlayerSetup(initialisePlayerSetup()));\n\n  const playerList = players.map(\n    (player, index) => playerSetup.find((setup) => setup.number === player.number) ?? initialisePlayerSetup()[index],\n  );\n\n  const playerNames = useMemo<string[]>(\n    () => JSON.parse(sessionStorage.getItem(PLAYER_NAMES_SESSION_STORAGE_KEY)!) ?? [],\n    [],\n  );\n\n  const updatePlayer = (playerNumber: number) => (newSetup: PlayerSetup) => {\n    setPlayerSetup((current) => current.map((setup) => (setup.number === playerNumber ? newSetup : setup)));\n  };\n\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!showModal) {\n      InputManager.startMonitoring();\n    }\n  }, [showModal]);\n\n  const { register, focusElement } = useKeyboardNav({\n    enabled: keyboardControl && !showModal,\n    onBackspace: onExitKeyboardControl,\n  });\n\n  const startSong = () => {\n    onNextStep(playerList);\n  };\n\n  const areInputsConfigured = !!storedPreference && storedPreference !== 'skip';\n\n  return (\n    <>\n      {showModal && (\n        <SelectInputModal\n          closeButtonText={areInputsConfigured ? 'Continue to the song' : 'Continue to player setup'}\n          onClose={() => {\n            setShowModal(false);\n\n            if (areInputsConfigured) {\n              focusElement('play');\n            }\n          }}\n        />\n      )}\n      {playerList.map((setup, index) => (\n        <PlayerSettingContainer key={setup.number}>\n          <PlayerSettingTitle>Player {index + 1}</PlayerSettingTitle>\n          <div>\n            <SinglePlayer\n              multipleTracks={multipleTracks}\n              player={PlayersManager.getPlayer(setup.number)}\n              setup={setup}\n              onChange={updatePlayer(setup.number)}\n              playerNames={playerNames}\n              register={register}\n              songPreview={songPreview}\n            />\n          </div>\n        </PlayerSettingContainer>\n      ))}\n      {areInputsConfigured && (\n        <PlayButton {...register('play-song-button', startSong, undefined, true)}>Play</PlayButton>\n      )}\n      <PlayButton {...register('select-inputs-button', () => setShowModal(true), undefined, false)}>\n        Setup mics\n      </PlayButton>\n    </>\n  );\n}\n\nconst PlayerSettingContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst PlayButton = styled(Button)<{ focused: boolean }>`\n  padding: 0.5rem 9rem;\n  font-size: 4.3rem;\n`;\n\nconst PlayerSettingTitle = styled.span`\n  ${typography};\n  padding: 1.3rem;\n  font-size: 4.5rem;\n`;\n","import styled from '@emotion/styled';\nimport events from 'GameEvents/GameEvents';\nimport GameSettings from 'Scenes/SingASong/SongSelection/Components/SongSettings/GameSettings';\nimport MicCheck from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck';\nimport PlayerSettings from 'Scenes/SingASong/SongSelection/Components/SongSettings/PlayerSettings';\nimport { PlayerSetup, SingSetup, SongPreview } from 'interfaces';\nimport { useState } from 'react';\n\ninterface Props {\n  songPreview: SongPreview;\n  onPlay: (setup: SingSetup & { song: SongPreview }) => void;\n  keyboardControl: boolean;\n  onExitKeyboardControl: () => void;\n}\n\nexport default function SongSettings({ songPreview, onPlay, keyboardControl, onExitKeyboardControl }: Props) {\n  const [singSetup, setSingSetup] = useState<SingSetup | null>(null);\n  const [step, setStep] = useState<'song' | 'players'>('song');\n\n  const onSongStepFinish = (setup: SingSetup) => {\n    setSingSetup(setup);\n    setStep('players');\n  };\n  const startSong = (players: PlayerSetup[]) => {\n    if (!singSetup) return;\n    const finalSetup = {\n      ...singSetup,\n      players: players,\n    };\n    events.songStarted.dispatch(songPreview, finalSetup);\n    onPlay({ song: songPreview, ...finalSetup });\n  };\n  return (\n    <Container>\n      <MicCheck style={step === 'players' ? { viewTransitionName: 'player-mic-check-container' } : undefined} />\n      <GameConfiguration>\n        {step === 'song' && (\n          <GameSettings\n            songPreview={songPreview}\n            onNextStep={onSongStepFinish}\n            keyboardControl={keyboardControl}\n            onExitKeyboardControl={onExitKeyboardControl}\n          />\n        )}\n        {step === 'players' && (\n          <PlayerSettings\n            songPreview={songPreview}\n            onNextStep={startSong}\n            keyboardControl={keyboardControl}\n            onExitKeyboardControl={() => setStep('song')}\n          />\n        )}\n      </GameConfiguration>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: space-between;\n  width: 100%;\n\n  hr {\n    margin: 1rem;\n    opacity: 0.25;\n  }\n`;\n\nconst GameConfiguration = styled.div`\n  width: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 1.25rem;\n`;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { useBackground } from 'Elements/LayoutWithBackground';\nimport VideoPlayer, { VideoPlayerRef, VideoState } from 'Elements/VideoPlayer';\nimport { ChristmasModeSetting, GraphicSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport {\n  ExpandedData,\n  FinalSongCard,\n  SongListEntryDetailsArtist,\n  SongListEntryDetailsTitle,\n} from 'Scenes/SingASong/SongSelection/Components/SongCard';\nimport SongSettings from 'Scenes/SingASong/SongSelection/Components/SongSettings';\nimport isChristmasSong from 'Songs/utils/isChristmasSong';\nimport useDebounce from 'hooks/useDebounce';\nimport useViewportSize from 'hooks/useViewportSize';\nimport { SingSetup, SongPreview } from 'interfaces';\nimport { ComponentProps, PropsWithChildren, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\n\ninterface Props {\n  songPreview: SongPreview;\n  onPlay: (setup: SingSetup & { song: SongPreview }) => void;\n  keyboardControl: boolean;\n  onExitKeyboardControl: () => void;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  focusEffect: boolean;\n}\n\nconst PREVIEW_LENGTH = 30;\n\nconst useChristmasSongTheme = (songPreview: SongPreview) => {\n  const [christmasMode, setChristmasMode] = useSettingValue(ChristmasModeSetting);\n  const christmasSong = isChristmasSong(songPreview);\n  useBackground(true, christmasSong);\n\n  useEffect(() => {\n    if (christmasSong) {\n      setChristmasMode(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!christmasMode && christmasSong) {\n      setChristmasMode(true);\n    } else if (christmasMode && !christmasSong) {\n      setChristmasMode(false);\n    }\n  }, [christmasMode, songPreview]);\n};\n\nexport default function SongPreviewComponent({\n  songPreview,\n  top,\n  left,\n  width,\n  height,\n  keyboardControl,\n  onExitKeyboardControl,\n  onPlay,\n  focusEffect,\n}: Props) {\n  const [showVideo, setShowVideo] = useState(false);\n  const player = useRef<VideoPlayerRef | null>(null);\n  const { width: windowWidth, height: windowHeight } = useViewportSize();\n  // useChristmasSongTheme(songPreview);\n\n  const expanded = keyboardControl;\n\n  // need to use layout effect otherwise newly selected song name is displayed briefly before the element is removed\n  useLayoutEffect(() => {\n    setShowVideo(false);\n  }, [songPreview.video]);\n\n  const start = songPreview.previewStart ?? (songPreview.videoGap ?? 0) + 60;\n  const end = songPreview.previewEnd ?? start + PREVIEW_LENGTH;\n  const undebounced = useMemo(\n    () => [songPreview.video, start, end, songPreview.volume] as const,\n    [songPreview.video, start, end, songPreview.volume],\n  );\n  const [videoId, previewStart, previewEnd, volume] = useDebounce(undebounced, 350);\n\n  useEffect(() => {\n    player.current?.loadVideoById({\n      videoId: videoId,\n      startSeconds: previewStart,\n      endSeconds: previewEnd,\n    });\n  }, [videoId, player, previewStart, previewEnd]);\n\n  const videoWidth = expanded ? windowWidth : width;\n  const videoHeight = expanded ? windowHeight : height;\n\n  const finalHeight = expanded ? Math.min((windowWidth! / 20) * 9, windowHeight! * (4 / 5)) : height;\n\n  useEffect(() => {\n    player.current?.setSize(videoWidth, videoHeight);\n  }, [videoWidth, videoHeight, keyboardControl]);\n\n  return (\n    <>\n      {expanded && <Backdrop onClick={onExitKeyboardControl} />}\n      {!expanded && showVideo && (\n        <SongBPMIndicator width={videoWidth} height={videoHeight} left={left} top={top} song={songPreview} />\n      )}\n      <SongPreviewContainer\n        background={expanded || showVideo}\n        video={\n          <Video show={showVideo} expanded={expanded} height={finalHeight} id=\"preview-video-container\">\n            <VideoPlayer\n              width={0}\n              height={0}\n              disablekb\n              ref={player}\n              video={''}\n              volume={volume}\n              onStateChange={(state) => {\n                if (state === VideoState.ENDED) {\n                  player.current?.seekTo(start);\n                  player.current?.playVideo();\n                } else if (state === VideoState.PLAYING) {\n                  setShowVideo(true);\n                }\n              }}\n            />\n          </Video>\n        }\n        focused\n        song={songPreview}\n        top={top}\n        left={left}\n        width={videoWidth}\n        height={finalHeight}\n        showVideo={showVideo}\n        expanded={expanded}\n        data-test=\"song-preview\"\n        data-song={songPreview.id}>\n        <Content expanded={expanded}>\n          {expanded && (\n            <SongSettings\n              songPreview={songPreview}\n              onPlay={onPlay}\n              keyboardControl={keyboardControl}\n              onExitKeyboardControl={onExitKeyboardControl}\n            />\n          )}\n        </Content>\n      </SongPreviewContainer>\n    </>\n  );\n}\n\nconst BaseSongPreviewContainer = styled(FinalSongCard)<{\n  width: number;\n  height: number;\n  expanded: boolean;\n  showVideo: boolean;\n}>`\n  --preview-padding: 5rem;\n  width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n  position: absolute;\n  z-index: ${(props) => (props.expanded ? 201 : 3)};\n  overflow: hidden;\n  visibility: ${(props) => (props.expanded || props.showVideo ? 'visible' : 'hidden')};\n\n  ${(props) =>\n    props.expanded\n      ? css`\n          border: 0;\n          border-radius: 0;\n          position: fixed;\n\n          padding: var(--preview-padding);\n        `\n      : css`\n          pointer-events: none;\n          ${props.showVideo && props.theme.graphicSetting === 'high'\n            ? 'animation: rhythmPulse 1s infinite'\n            : 'scale: 1.2'};\n        `};\n\n  @keyframes rhythmPulse {\n    0% {\n      transform: scale(1.2);\n    }\n    15% {\n      transform: scale(1.25);\n    }\n    100% {\n      transform: scale(1.2);\n    }\n  }\n  view-transition-name: song-preview;\n\n  ${SongListEntryDetailsArtist} {\n    view-transition-name: song-preview-artist;\n  }\n\n  ${SongListEntryDetailsTitle} {\n    view-transition-name: song-preview-title;\n  }\n\n  ${ExpandedData} {\n    view-transition-name: song-preview-expanded-data;\n  }\n`;\n\ninterface SongPreviewContainerProps\n  extends ComponentProps<typeof BaseSongPreviewContainer>,\n    PropsWithChildren<{\n      top: number;\n      left: number;\n      song: SongPreview;\n    }> {}\n\nconst SongPreviewContainer = (props: SongPreviewContainerProps) => {\n  const realBpm = props.song.realBpm ?? (props.song.bpm > 300 ? props.song.bpm / 4 : props.song.bpm / 2);\n\n  return (\n    <BaseSongPreviewContainer\n      style={{\n        top: props.expanded ? `calc(50vh - ${props.height}px / 2)` : props.top,\n        left: props.expanded ? 0 : props.left,\n        animationDuration: `${60 / realBpm}s`,\n      }}\n      {...props}\n    />\n  );\n};\n\nconst Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.8);\n  width: 100vw;\n  height: 100vh;\n  z-index: 201;\n`;\n\nconst Video = styled.div<{ show: boolean; expanded: boolean; height: number }>`\n  ${(props) =>\n    props.expanded\n      ? css`\n          position: fixed;\n          inset: 0;\n          clip-path: inset(calc((100vh - ${props.height}px) / 2) 0);\n        `\n      : css`\n          position: absolute;\n          top: 0;\n          left: 0;\n          background-image: none !important;\n          border-radius: 0.5rem;\n        `}\n\n  div {\n    opacity: ${({ show }) => (show ? 1 : 0)};\n    transition: ${({ show, expanded }) => (show || expanded ? 1000 : 0)}ms;\n  }\n`;\n\nconst Content = styled.div<{ expanded: boolean }>`\n  inset: auto var(--preview-padding);\n  position: fixed; /* makes sure Autocomplete dropdown doesn't get clipped */\n  z-index: 100;\n  ${(props) => !props.expanded && `transform: scale(0.1);`}\n\n  border-radius: 0.5rem;\n\n  view-transition-name: song-preview-content;\n`;\n\nconst BaseSongBPMIndicator = styled.div<{ width: number; height: number }>`\n  background: white;\n  width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n  z-index: 2;\n  top: 0;\n  left: 0;\n  position: absolute;\n  animation: bpm 1s infinite;\n  border-radius: 0.5rem;\n  pointer-events: none;\n\n  @keyframes bpm {\n    0% {\n      transform: scale(1.15);\n      opacity: 1;\n    }\n    100% {\n      transform: scale(1.45);\n      opacity: 0;\n    }\n  }\n`;\n\nconst SongBPMIndicator = (\n  props: {\n    top: number;\n    left: number;\n    song: SongPreview;\n  } & ComponentProps<typeof BaseSongBPMIndicator>,\n) => {\n  const [graphicSetting] = useSettingValue(GraphicSetting);\n\n  if (graphicSetting === 'low') return null;\n\n  const realBpm = props.song.realBpm ?? (props.song.bpm > 300 ? props.song.bpm / 4 : props.song.bpm / 2);\n  return (\n    <BaseSongBPMIndicator\n      width={props.width}\n      height={props.height}\n      style={{\n        left: props.left,\n        top: props.top,\n        animationDuration: `${60 / realBpm}s`,\n      }}\n    />\n  );\n};\n","import { useLanguageList } from 'Scenes/ExcludeLanguages/ExcludeLanguagesView';\nimport { AppliedFilters } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport dayjs from 'dayjs';\nimport { SongPreview } from 'interfaces';\nimport { ReactNode, useMemo } from 'react';\n\nexport interface PlaylistEntry {\n  name: string;\n  display?: ReactNode;\n  filters: AppliedFilters;\n}\n\nexport const usePlaylists = (songs: SongPreview[]): PlaylistEntry[] => {\n  const songLanguages = useLanguageList(songs);\n  return useMemo(\n    () =>\n      [\n        { name: 'All', filters: {} },\n        // {\n        //   name: 'Christmas',\n        //   display: (\n        //     <>\n        //       <span style={{ color: colorSets.christmasRed.text }}>Chris</span>\n        //       <span style={{ color: colorSets.christmasGreen.text }}>tmas</span> 🎄\n        //     </>\n        //   ),\n        //   filters: { edition: 'christmas' },\n        // },\n        songLanguages[0]\n          ? ({\n              name: songLanguages[0].name,\n              filters: { language: songLanguages[0].name },\n            } as PlaylistEntry)\n          : null,\n        songLanguages[1]\n          ? {\n              name: songLanguages[1].name,\n              filters: { language: songLanguages[1].name },\n            }\n          : null,\n        { name: 'Oldies', filters: { yearBefore: 1995 } },\n        { name: 'Modern', filters: { yearAfter: 1995 } },\n        { name: 'Duets', filters: { duet: true } },\n        {\n          name: 'New',\n          filters: { updatedAfter: dayjs().subtract(31, 'days').toISOString() },\n        },\n      ].filter((playlist): playlist is PlaylistEntry => playlist !== null),\n    [songLanguages],\n  );\n};\n","import { captureException } from '@sentry/react';\nimport { ExcludedLanguagesSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport { usePlaylists } from 'Scenes/SingASong/SongSelection/Hooks/usePlaylists';\nimport useSongIndex from 'Songs/hooks/useSongIndex';\nimport dayjs from 'dayjs';\nimport { SongPreview } from 'interfaces';\nimport { useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport clearString from 'utils/clearString';\n\nexport interface SongGroup {\n  letter: string;\n  songs: Array<{ index: number; song: SongPreview }>;\n  isNew?: boolean;\n}\n\nexport interface AppliedFilters {\n  yearBefore?: number;\n  yearAfter?: number;\n  language?: string;\n  excludeLanguages?: string[];\n  search?: string;\n  edition?: string;\n  updatedAfter?: string;\n  duet?: boolean | null;\n}\n\ntype FilterFunc = (songList: SongPreview[], ...args: any) => SongPreview[];\n\nconst filteringFunctions: Record<keyof AppliedFilters, FilterFunc> = {\n  language: (songList, language: string) => {\n    if (language === '') return songList;\n\n    return songList.filter((song) => {\n      const songLangs = Array.isArray(song.language) ? song.language : [song.language!];\n\n      return songLangs.includes(language);\n    });\n  },\n  excludeLanguages: (songList, languages: string[] = [], appliedFilters: AppliedFilters) => {\n    if (languages.length === 0 || clearString(appliedFilters?.search ?? '').length > 2) return songList;\n\n    return songList.filter((song) => {\n      const songLangs = Array.isArray(song.language) ? song.language : [song.language!];\n\n      return !songLangs.every((songLang) => languages.includes(songLang!));\n    });\n  },\n  search: (songList, search: string) => {\n    const cleanSearch = clearString(search);\n\n    return cleanSearch.length > 2 ? songList.filter((song) => song.search.includes(cleanSearch)) : songList;\n  },\n  duet: (songList, duet: boolean | null) => {\n    if (duet === null) return songList;\n\n    return songList.filter((song) => (duet ? song.tracksCount > 1 : song.tracksCount === 1));\n  },\n  yearBefore: (songList, yearBefore: number) => {\n    if (!yearBefore) return songList;\n\n    return songList.filter((song) => Number(song.year) < yearBefore);\n  },\n  yearAfter: (songList, yearAfter: number) => {\n    if (!yearAfter) return songList;\n\n    return songList.filter((song) => Number(song.year) >= yearAfter);\n  },\n  edition: (songList, edition: string) => {\n    const cleanEdition = clearString(edition);\n\n    return cleanEdition.length ? songList.filter((song) => clearString(song.edition ?? '') === edition) : songList;\n  },\n  updatedAfter: (songList, after: string) => {\n    if (!after) return songList;\n    const dateAfter = dayjs(after);\n\n    return songList.filter((song) => song.lastUpdate && dayjs(song.lastUpdate).isAfter(dateAfter));\n  },\n};\n\nconst applyFilters = (list: SongPreview[], appliedFilters: AppliedFilters): SongPreview[] => {\n  return Object.entries(appliedFilters)\n    .filter((filters): filters is [keyof AppliedFilters, FilterFunc] => filters[0] in filteringFunctions)\n    .reduce((songList, [name, value]) => filteringFunctions[name](songList, value, appliedFilters), list);\n};\n\nexport const useSongListFilter = (list: SongPreview[]) => {\n  const [excludedLanguages] = useSettingValue(ExcludedLanguagesSetting);\n  const prefilteredList = useMemo(\n    () => applyFilters(list, { excludeLanguages: excludedLanguages ?? [] }),\n    [list, excludedLanguages],\n  );\n\n  const playlists = usePlaylists(prefilteredList);\n  const [selectedPlaylist, setSelectedPlaylist] = useState<string | null>(\n    new URLSearchParams(window.location.search).get('playlist') ?? null,\n  );\n\n  const [filters, setFilters] = useState<AppliedFilters>({});\n\n  useEffect(() => {\n    setFilters({});\n  }, [selectedPlaylist]);\n\n  const deferredFilters = useDeferredValue(filters);\n\n  const playlistFilters = playlists.find((p) => p.name === selectedPlaylist)?.filters ?? null;\n\n  const filteredList = useMemo(\n    () =>\n      applyFilters(list, {\n        ...playlistFilters,\n        ...deferredFilters,\n        excludeLanguages: excludedLanguages ?? [],\n      }),\n    [list, deferredFilters, excludedLanguages, playlistFilters],\n  );\n\n  return { filters, filteredList, setFilters, selectedPlaylist, setSelectedPlaylist, playlists };\n};\n\nexport default function useSongList() {\n  const songList = useSongIndex();\n\n  const { filters, filteredList, setFilters, selectedPlaylist, setSelectedPlaylist, playlists } = useSongListFilter(\n    songList.data,\n  );\n\n  const groupedSongList = useMemo(() => {\n    if (filteredList.length === 0) return [];\n\n    const groups: SongGroup[] = [];\n\n    // a hack for !filters.edition - due to a bug where selecting a song will make it look selected for both\n    // new and regular entry in the list. On Christmas, where most of the songs are new, it looks weird.\n    // When the bug is fixed, this can be removed.\n    if (!filters.search && !filters.edition) {\n      const newSongs = filteredList.filter((song) => song.isNew);\n\n      if (newSongs.length && newSongs.length < 50) {\n        groups.push({\n          letter: 'New',\n          isNew: true,\n          songs: newSongs.map((song) => ({\n            song,\n            index: filteredList.indexOf(song),\n          })),\n        });\n      }\n    }\n\n    const nonAlphaRegex = /[^a-zA-Z]/;\n\n    filteredList.forEach((song, index) => {\n      try {\n        const firstCharacter =\n          isFinite(+song.artist[0]) || nonAlphaRegex.test(song.artist[0]) ? '0-9' : song.artist[0].toUpperCase();\n        let group = groups.find((group) => group.letter === firstCharacter);\n        if (!group) {\n          group = { letter: firstCharacter, songs: [] };\n          groups.push(group);\n        }\n\n        group.songs.push({ index: index, song });\n      } catch (e) {\n        console.error(e);\n        captureException(e);\n      }\n    });\n\n    return groups;\n  }, [filteredList, filters.search]);\n\n  return {\n    groupedSongList,\n    songList: filteredList,\n    filters,\n    setFilters,\n    isLoading: songList.isLoading,\n    selectedPlaylist,\n    setSelectedPlaylist,\n    playlists,\n  };\n}\n","import { randomInt } from 'utils/randomValue';\n\nconst MAX_REMEMBERED_SONGS_COUNT = 30;\nexport default function selectRandomSong(\n  songCount: number,\n  previouslySelectedSongs: number[],\n  maxRememberedCount = MAX_REMEMBERED_SONGS_COUNT,\n) {\n  let newIndex;\n  if (previouslySelectedSongs.length < songCount) {\n    const possibleOptions = [...Array(songCount).keys()].filter((id) => !previouslySelectedSongs.includes(id));\n\n    newIndex = possibleOptions[randomInt(0, possibleOptions.length - 1)];\n  } else {\n    newIndex = randomInt(0, songCount - 1);\n\n    previouslySelectedSongs.length = 0;\n  }\n\n  if (previouslySelectedSongs.length >= maxRememberedCount) {\n    previouslySelectedSongs.shift();\n  }\n  previouslySelectedSongs.push(newIndex);\n\n  return newIndex;\n}\n","import { HelpEntry } from 'Scenes/KeyboardHelp/Context';\nimport selectRandomSong from 'Scenes/SingASong/SongSelection/Hooks/selectRandomSong';\nimport { AppliedFilters, SongGroup } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport { menuBack, menuEnter, menuNavigate } from 'SoundManager';\nimport useKeyboard from 'hooks/useKeyboard';\nimport useKeyboardHelp from 'hooks/useKeyboardHelp';\nimport usePrevious from 'hooks/usePrevious';\nimport useSmoothNavigate from 'hooks/useSmoothNavigate';\nimport { chunk, throttle } from 'lodash-es';\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport tuple from 'utils/tuple';\n\nconst useTwoDimensionalNavigation = (groups: SongGroup[] = [], itemsPerRow: number) => {\n  const [cursorPosition, setCursorPosition] = useState<[number, number]>([0, 0]);\n  // const setCursorPosition = useCallback<Dispatch<SetStateAction<[number, number]>>>(\n  //   (action) => {\n  //     if (action instanceof Function) {\n  //       test((current) => {\n  //         const newPosition = action(current);\n  //         console.log('newPosition fnc', newPosition);\n  //         return newPosition;\n  //       });\n  //     } else {\n  //       console.log('newPosition', action);\n  //       test(action);\n  //     }\n  //   },\n  //   [test],\n  // );\n  const songIndexMatrix = useMemo(\n    () =>\n      groups\n        .map(({ songs }) =>\n          chunk(\n            songs.map((song) => song.index),\n            itemsPerRow,\n          ),\n        )\n        .flat(),\n    [groups],\n  );\n  const songGroupMatrix = useMemo(\n    () =>\n      groups\n        .map(({ songs, letter }) =>\n          chunk(\n            songs.map(() => letter),\n            itemsPerRow,\n          ),\n        )\n        .flat(),\n    [groups],\n  );\n  const previousMatrix = usePrevious(songIndexMatrix ?? []);\n\n  const isAtLastColumn = cursorPosition[0] === songIndexMatrix[cursorPosition[1]]?.length - 1;\n\n  const moveToSong = useCallback(\n    (songIndex: number) => {\n      const y = songIndexMatrix.findIndex((columns) => columns.includes(songIndex));\n      const x = songIndexMatrix[y]?.indexOf(songIndex);\n      if (x >= 0 && y >= 0) {\n        setCursorPosition([x ?? 0, y ?? 0]);\n      } else {\n        setCursorPosition([0, 0]);\n      }\n    },\n    [songIndexMatrix],\n  );\n\n  const positionToValue = <T>([x, y]: [number, number], matrix: T[][], def: T) => {\n    if (groups.length === 0) return def;\n    const row = matrix[y];\n    return row?.[x] ?? row?.at(-1) ?? matrix?.[0]?.[0] ?? def;\n  };\n  const positionToSongIndex = ([x, y]: [number, number], matrix: number[][] = songIndexMatrix) => {\n    return positionToValue([x, y], matrix, 0);\n  };\n  const positionToGroup = ([x, y]: [number, number], matrix: string[][] = songGroupMatrix) => {\n    return positionToValue([x, y], matrix, 'A');\n  };\n\n  useEffect(() => {\n    const previousFocusedSong = positionToSongIndex(cursorPosition, previousMatrix);\n    const currentFocusedSong = positionToSongIndex(cursorPosition, songIndexMatrix);\n    if (previousMatrix.length && previousFocusedSong !== currentFocusedSong) {\n      moveToSong(previousFocusedSong);\n    }\n  }, [cursorPosition, songIndexMatrix, previousMatrix, isAtLastColumn]);\n\n  const moveCursor = (plane: 'x' | 'y', delta: number) => {\n    menuNavigate.play();\n    setCursorPosition(([x, y]) => {\n      let newX = x;\n      let newY = y;\n      if (plane === 'y') {\n        newY = y + delta;\n      } else {\n        if (songIndexMatrix[y] === undefined) {\n          debugger;\n        }\n        const maxXInRow = songIndexMatrix[y].length - 1;\n        newX = Math.min(x, maxXInRow) + delta;\n        if (newX < 0) {\n          newY = (songIndexMatrix.length + y - 1) % songIndexMatrix.length;\n          newX = songIndexMatrix[newY].length - 1;\n        } else if (newX > maxXInRow) {\n          newY = y + 1;\n          newX = 0;\n        }\n      }\n      return [newX % itemsPerRow, (songIndexMatrix.length + newY) % songIndexMatrix.length];\n    });\n  };\n\n  const focusedSong = positionToSongIndex(cursorPosition);\n  const focusedGroup = positionToGroup(cursorPosition);\n\n  return tuple([focusedSong, focusedGroup, cursorPosition, moveCursor, moveToSong, isAtLastColumn]);\n};\n\nexport const useSongSelectionKeyboardNavigation = (\n  enabled: boolean,\n  groupedSongs: SongGroup[] = [],\n  onEnter: () => void,\n  songCount: number,\n  appliedFilters: AppliedFilters,\n  songsPerRow: number,\n) => {\n  const navigate = useSmoothNavigate();\n  // We need to record how user entered (from which \"side\") and how left and based on that update the selection.\n  // Eg if user was at the last column, entered playlists, and returned to the last column (by clicking left)\n  // then effectively the selection shouldn't change\n  const [showPlaylistsState, setShowPlaylistsState] = useState<[boolean, 'left' | 'right' | null]>([false, null]);\n  const previousPlaylistsState = usePrevious(showPlaylistsState);\n  const [arePlaylistsVisible, leavingKey] = showPlaylistsState;\n\n  const [focusedSong, focusedGroup, cursorPosition, moveCursor, moveToSong, isAtLastColumn] =\n    useTwoDimensionalNavigation(groupedSongs, songsPerRow);\n  const isAtFirstColumn = cursorPosition[0] === 0;\n\n  const handleEnter = () => {\n    menuEnter.play();\n    onEnter();\n  };\n\n  const [blockBack, setBlockBack] = useState(false);\n  const previousSearch = usePrevious(appliedFilters.search);\n  useLayoutEffect(() => {\n    if (previousSearch && !appliedFilters.search) {\n      setBlockBack(true);\n      const timeout = setTimeout(() => setBlockBack(false), 2_000);\n\n      return () => {\n        clearTimeout(timeout);\n        setBlockBack(false);\n      };\n    }\n  }, [appliedFilters.search]);\n\n  const handleBackspace = () => {\n    if (!blockBack && !appliedFilters.search) {\n      menuBack.play();\n      navigate('menu');\n    }\n  };\n\n  const navigateToGroup = useCallback(\n    throttle(\n      (direction: 1 | -1, currentGroup: number) => {\n        const nextGroupIndex = (groupedSongs.length + currentGroup + direction) % groupedSongs.length;\n\n        moveToSong(groupedSongs[nextGroupIndex].songs[0].index);\n        menuNavigate.play();\n      },\n      700,\n      { trailing: false },\n    ),\n    [groupedSongs],\n  );\n\n  const navigateVertically = (e: KeyboardEvent | undefined, direction: 1 | -1) => {\n    if (!e?.repeat) {\n      moveCursor('y', direction);\n    } else {\n      const currentlySelectedGroupIndex = groupedSongs.findIndex(\n        (group) => !!group.songs.find((song) => song.index === focusedSong),\n      );\n      navigateToGroup(direction, currentlySelectedGroupIndex);\n    }\n  };\n\n  const navigateHorizontally = (direction: 1 | -1, ignoreFilters = false) => {\n    // Disable navigation to filters by going right since the filters are on the left\n    // if (!ignoreFilters && direction === 1 && isAtLastColumn && !arePlaylistsVisible) {\n    //   setShowPlaylistsState([true, 'right']);\n    // } else\n    if (!ignoreFilters && direction === -1 && isAtFirstColumn && !arePlaylistsVisible) {\n      setShowPlaylistsState([true, 'left']);\n    } else {\n      moveCursor('x', direction);\n    }\n  };\n\n  const randomlySelectedSongs = useRef<number[]>([]);\n  const randomSong = () => {\n    const newIndex = selectRandomSong(songCount, randomlySelectedSongs.current);\n    moveToSong(newIndex);\n  };\n\n  useKeyboard(\n    {\n      accept: handleEnter,\n      down: (e) => navigateVertically(e, 1),\n      up: (e) => navigateVertically(e, -1),\n      left: () => navigateHorizontally(-1),\n      right: () => navigateHorizontally(1),\n      back: handleBackspace,\n      random: randomSong,\n    },\n    enabled && !arePlaylistsVisible,\n    [groupedSongs, cursorPosition, arePlaylistsVisible, appliedFilters, blockBack],\n  );\n\n  const help = useMemo<HelpEntry>(\n    () => ({\n      'horizontal-vertical': null,\n      accept: null,\n      back: null,\n      shiftR: null,\n      alphanumeric: null,\n      remote: ['search'],\n    }),\n    [],\n  );\n  useKeyboardHelp(help, enabled);\n\n  const closePlaylist = useCallback(\n    (leavingKey: 'left' | 'right') => {\n      setShowPlaylistsState([false, leavingKey]);\n      // if (leavingKey === 'right') navigateHorizontally(1);\n    },\n    [setShowPlaylistsState, navigateHorizontally, groupedSongs, cursorPosition],\n  );\n\n  useLayoutEffect(() => {\n    const [previousShowFilters, enteringKey] = previousPlaylistsState;\n    if (previousShowFilters && !arePlaylistsVisible) {\n      if (enteringKey === leavingKey) navigateHorizontally(leavingKey === 'right' ? 1 : -1, true);\n    }\n  }, [arePlaylistsVisible, leavingKey, isAtFirstColumn, isAtLastColumn, ...cursorPosition]);\n\n  return tuple([focusedSong, focusedGroup, moveToSong, arePlaylistsVisible, closePlaylist, randomSong]);\n};\n","import useSongList from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport { useSongSelectionKeyboardNavigation } from 'Scenes/SingASong/SongSelection/Hooks/useSongSelectionKeyboardNavigation';\nimport { woosh } from 'SoundManager';\nimport useSmoothNavigate from 'hooks/useSmoothNavigate';\nimport { useEffect, useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport { randomInt } from 'utils/randomValue';\nimport startViewTransition from 'utils/startViewTransition';\n\nexport default function useSongSelection(preselectedSong: string | null, songsPerRow: number) {\n  const {\n    songList,\n    groupedSongList,\n    setFilters,\n    filters,\n    isLoading,\n    selectedPlaylist,\n    setSelectedPlaylist,\n    playlists,\n  } = useSongList();\n  const navigate = useSmoothNavigate();\n  const [keyboardControl, setKeyboardControl] = useState(true);\n\n  const handleKeyboardControl = (value: boolean) => {\n    startViewTransition(() => {\n      flushSync(() => {\n        setKeyboardControl(value);\n      });\n    });\n    woosh.play();\n  };\n\n  const [focusedSong, focusedGroup, moveToSong, showFilters, setShowFilters, randomSong] =\n    useSongSelectionKeyboardNavigation(\n      keyboardControl,\n      groupedSongList,\n      () => handleKeyboardControl(false),\n      songList.length,\n      filters,\n      songsPerRow,\n    );\n\n  const [preselected, setPreselected] = useState(false);\n  useEffect(() => {\n    if (!preselected && songList.length) {\n      const preselectedSongIndex = songList.findIndex((song) => song.id === preselectedSong);\n      const firstNewSongIndex = songList.findIndex((song) => song.isNew);\n\n      let songIndex = randomInt(0, songList.length - 1);\n      if (preselectedSongIndex > -1) songIndex = preselectedSongIndex;\n      else if (firstNewSongIndex > -1) songIndex = preselectedSongIndex;\n\n      moveToSong(songIndex);\n      setPreselected(true);\n    }\n  }, [songList, moveToSong, preselectedSong]);\n\n  useEffect(() => {\n    if (preselected && songList.length && songList[focusedSong]) {\n      navigate(\n        `game`,\n        { song: songList[focusedSong].id },\n        {\n          replace: true,\n        },\n      );\n    }\n  }, [preselected, focusedSong, songList]);\n\n  const songPreview = songList?.[focusedSong];\n  return {\n    groupedSongList,\n    focusedSong,\n    focusedGroup,\n    moveToSong,\n    setKeyboardControl: handleKeyboardControl,\n    keyboardControl,\n    songPreview,\n    songList: songList ?? [],\n    filters,\n    setFilters,\n    showFilters,\n    setShowFilters,\n    isLoading,\n    randomSong,\n    selectedPlaylist,\n    setSelectedPlaylist,\n    playlists,\n  };\n}\n","import { useEffect } from 'react';\n\nlet mounts = 0;\n\nexport default function useBlockScroll() {\n  useEffect(() => {\n    document.body.classList.add('blockOverflow');\n    document.documentElement.classList.add('blockOverflow');\n    mounts++;\n\n    return () => {\n      mounts--;\n\n      if (mounts === 0) {\n        document.body.classList.remove('blockOverflow');\n        document.documentElement.classList.remove('blockOverflow');\n      }\n    };\n  }, []);\n}\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { useBackground } from 'Elements/LayoutWithBackground';\nimport { focused, typography } from 'Elements/cssMixins';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { MobilePhoneModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport AdditionalListControls from 'Scenes/SingASong/SongSelection/Components/AdditionalListControls';\nimport BackgroundThumbnail from 'Scenes/SingASong/SongSelection/Components/BackgroundThumbnail';\nimport Playlists from 'Scenes/SingASong/SongSelection/Components/Playlists';\nimport { FinalSongCard } from 'Scenes/SingASong/SongSelection/Components/SongCard';\nimport SongGroupsNavigation from 'Scenes/SingASong/SongSelection/Components/SongGroupsNavigation';\nimport SongPreview from 'Scenes/SingASong/SongSelection/Components/SongPreview';\nimport useSongSelection from 'Scenes/SingASong/SongSelection/Hooks/useSongSelection';\nimport useBackgroundMusic from 'hooks/useBackgroundMusic';\nimport useBlockScroll from 'hooks/useBlockScroll';\nimport usePrevious from 'hooks/usePrevious';\nimport useViewportSize from 'hooks/useViewportSize';\nimport { SingSetup, SongPreview as SongPreviewEntity } from 'interfaces';\nimport { memo, useCallback, useEffect, useRef, useState } from 'react';\n\ninterface Props {\n  onSongSelected: (songSetup: SingSetup & { song: SongPreviewEntity }) => void;\n  preselectedSong: string | null;\n}\n\nconst focusMultiplier = 1.2;\nconst MAX_SONGS_PER_ROW = 4;\n\nexport default function SongSelection({ onSongSelected, preselectedSong }: Props) {\n  const [mobilePhoneMode] = useSettingValue(MobilePhoneModeSetting);\n  const songsPerRow = mobilePhoneMode ? MAX_SONGS_PER_ROW - 1 : MAX_SONGS_PER_ROW;\n\n  useBackgroundMusic(false);\n  useBackground(true);\n  useBlockScroll();\n\n  const [{ previewTop, previewLeft, previewWidth, previewHeight }, setPositions] = useState({\n    previewTop: 0,\n    previewLeft: 0,\n    previewWidth: 0,\n    previewHeight: 0,\n  });\n  const {\n    focusedGroup,\n    focusedSong,\n    moveToSong,\n    groupedSongList,\n    keyboardControl,\n    songPreview,\n    setKeyboardControl,\n    setFilters,\n    filters,\n    setShowFilters,\n    showFilters,\n    isLoading,\n    randomSong,\n    selectedPlaylist,\n    setSelectedPlaylist,\n    playlists,\n  } = useSongSelection(preselectedSong, songsPerRow);\n\n  const list = useRef<HTMLDivElement | null>(null);\n  const { width, handleResize } = useViewportSize();\n  const previouslyFocusedGroup = usePrevious(focusedGroup);\n  const previouslyFocusedSong = usePrevious(focusedSong);\n\n  useEffect(() => {\n    const selector = (group: string, index: number) => `[data-group-letter=\"${group}\"] [data-index=\"${index}\"]`;\n    handleResize(); // Recalculate width/height to account possible scrollbar appearing\n\n    const previousSong = list.current?.querySelector(\n      selector(previouslyFocusedGroup, previouslyFocusedSong),\n    ) as HTMLDivElement;\n    const song = list.current?.querySelector(selector(focusedGroup, focusedSong)) as HTMLDivElement;\n    if (song) {\n      if (!previousSong || previousSong.offsetTop !== song.offsetTop) {\n        song.scrollIntoView?.({\n          behavior: 'smooth',\n          inline: 'center',\n          block: 'center',\n        });\n      }\n      setPositions({\n        previewLeft: song.offsetLeft,\n        previewTop: song.offsetTop,\n        previewWidth: song.offsetWidth,\n        previewHeight: song.offsetHeight,\n      });\n    }\n  }, [width, list, focusedSong, focusedGroup, groupedSongList]);\n\n  const expandSong = useCallback(() => setKeyboardControl(false), [setKeyboardControl]);\n\n  const loading = isLoading || !groupedSongList || !width;\n\n  return (\n    <Container songsPerRow={songsPerRow}>\n      {loading ? (\n        <SongListContainer>\n          <SongsGroupContainer>\n            <SongsGroupHeader>&nbsp;&nbsp;</SongsGroupHeader>\n            <SongsGroup>\n              {new Array(16).fill(0).map((_, i) => (\n                <SongListEntrySkeleton key={i} />\n              ))}\n            </SongsGroup>\n          </SongsGroupContainer>\n        </SongListContainer>\n      ) : (\n        <>\n          {songPreview && <SongImageBackground videoId={songPreview.video} />}\n          <AdditionalListControls\n            setFilters={setFilters}\n            filters={filters}\n            onRandom={randomSong}\n            keyboardControl={keyboardControl}\n          />\n          <SongListContainer ref={list} active={keyboardControl} data-test=\"song-list-container\" dim={showFilters}>\n            <SongGroupsNavigation groupedSongList={groupedSongList} containerRef={list} selectSong={moveToSong} />\n            {groupedSongList.length === 0 && <NoSongsFound>No songs found</NoSongsFound>}\n            {songPreview && (\n              <SongPreview\n                songPreview={songPreview}\n                onPlay={onSongSelected}\n                keyboardControl={!keyboardControl}\n                onExitKeyboardControl={() => setKeyboardControl(true)}\n                top={previewTop}\n                left={previewLeft}\n                width={previewWidth}\n                height={previewHeight}\n                focusEffect={!showFilters}\n              />\n            )}\n            {groupedSongList.map((group) => (\n              <SongsGroupContainer\n                {...(showFilters || !keyboardControl ? { 'data-unfocusable': true } : {})}\n                key={group.letter}\n                data-group-letter={group.letter}\n                highlight={group.letter === 'New'}>\n                <SongsGroupHeader>{group.letter}</SongsGroupHeader>\n                <SongsGroup>\n                  {group.songs.map(({ song, index }) => (\n                    <SongListEntry\n                      key={song.id}\n                      song={song}\n                      handleClick={focusedSong === index ? expandSong : moveToSong}\n                      focused={!showFilters && keyboardControl && index === focusedSong}\n                      index={index}\n                      data-index={index}\n                      data-focused={!showFilters && keyboardControl && index === focusedSong}\n                      data-test={`song-${song.id}${group.isNew ? '-new-group' : ''}`}\n                    />\n                  ))}\n                </SongsGroup>\n              </SongsGroupContainer>\n            ))}\n            <AddSongs>\n              Missing a song? Try <a href=\"convert\">adding one</a> yourself!\n            </AddSongs>\n          </SongListContainer>\n        </>\n      )}\n      <Playlists\n        selectedPlaylist={selectedPlaylist}\n        setSelectedPlaylist={setSelectedPlaylist}\n        playlists={playlists}\n        active={showFilters}\n        closePlaylist={setShowFilters}\n      />\n    </Container>\n  );\n}\n\nconst AddSongs = styled.span`\n  ${typography};\n  text-align: center;\n  font-size: 5rem;\n  margin-top: 10rem;\n`;\n\nconst Container = styled.div<{ songsPerRow: number }>`\n  display: flex;\n  flex-direction: row;\n  max-height: 100vh;\n  --song-list-gap: 3.5rem;\n  --song-item-width: ${(props) =>\n    `calc(${100 / props.songsPerRow}% - ((${props.songsPerRow - 1} / ${props.songsPerRow}) * var(--song-list-gap)))`};\n  --song-item-ratio: calc(16 / 9 * (4 / ${(props) => props.songsPerRow}));\n`;\n\nconst SongImageBackground = styled(BackgroundThumbnail)`\n  position: fixed;\n  inset: 0;\n  width: 100%;\n  height: 100%;\n  filter: blur(7px) grayscale(90%);\n  opacity: 0.25;\n  object-fit: cover;\n`;\n\nconst SongsGroupContainer = styled.div<{ highlight?: boolean }>`\n  padding: 0 4.5rem 0 11rem;\n  ${(props) =>\n    props.highlight &&\n    css`\n      background: rgba(0, 0, 0, 0.5);\n      padding-bottom: 3rem;\n      border-bottom: 0.2rem solid black;\n\n      ${SongsGroupHeader} {\n        @keyframes new-song-group-header {\n          0%,\n          100% {\n            transform: scale(1);\n          }\n          50% {\n            transform: scale(1.1);\n          }\n        }\n        animation: new-song-group-header 600ms ease-in-out infinite both;\n        background: #ffffff;\n      }\n    `}\n`;\n\nconst NoSongsFound = styled.div`\n  ${typography};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n\n  font-size: 10rem;\n`;\n\nconst SongsGroupHeader = styled.div`\n  ${typography};\n  display: inline-block;\n  padding: 0.5rem 1rem;\n  margin-bottom: 2rem;\n  font-size: 3.5rem;\n  z-index: 1;\n  color: ${styles.colors.text.active};\n  background: rgba(0, 0, 0, 0.7);\n`;\n\nconst SongListContainer = styled.div<{ active?: boolean; dim?: boolean }>`\n  position: relative;\n  flex: 1 1 auto;\n  display: flex;\n  flex-direction: column;\n  gap: var(--song-list-gap);\n  padding: 10rem 0;\n  overflow-y: auto;\n  overflow-x: clip;\n  box-sizing: border-box;\n  min-height: 100vh;\n  max-height: 100vh;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  transition: opacity 500ms;\n  opacity: ${(props) => (props.dim ? 0.5 : 1)};\n`;\n\nconst SongsGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: var(--song-list-gap);\n`;\n\nconst SongListEntrySkeleton = styled.div`\n  background: black;\n  flex-basis: var(--song-item-width);\n  aspect-ratio: var(--song-item-ratio);\n  border-radius: 1rem;\n  animation: skeleton 1s ease-in-out infinite alternate;\n\n  @keyframes skeleton {\n    0% {\n      opacity: 0.65;\n    }\n    100% {\n      opacity: 0.75;\n    }\n  }\n`;\n\nconst SongListEntry = memo(styled(FinalSongCard)`\n  cursor: pointer;\n  flex-basis: var(--song-item-width);\n  aspect-ratio: var(--song-item-ratio);\n\n  ${(props) =>\n    props.theme.graphicSetting === 'high' &&\n    css`\n      transition: 300ms;\n    `}\n  transform: scale(${(props) => (props.focused ? focusMultiplier : 1)});\n  ${(props) => props.focused && 'z-index: 2;'}\n  ${(props) => props.focused && focused}\n\n    content-visibility: auto;\n  contain-intrinsic-size: calc(var(--song-item-width) * (1 / var(--song-item-ratio)));\n`);\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n","import ExcludeLanguagesView from 'Scenes/ExcludeLanguages/ExcludeLanguagesView';\nimport { ExcludedLanguagesSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport SongSelection from 'Scenes/SingASong/SongSelection/SongSelection';\nimport { ComponentProps, useState } from 'react';\n\nfunction SingASong(props: ComponentProps<typeof SongSelection>) {\n  const [excludedLanguages, setExcludedLanguages] = useSettingValue(ExcludedLanguagesSetting);\n  const [languageSelection, setLanguageSelection] = useState(excludedLanguages === null);\n  const goBack = () => {\n    setExcludedLanguages(excludedLanguages ?? []);\n    setLanguageSelection(false);\n  };\n\n  return languageSelection ? (\n    <ExcludeLanguagesView onClose={goBack} closeText=\"Continue to Song Selection\" />\n  ) : (\n    <SongSelection {...props} />\n  );\n}\n\nexport default SingASong;\n","import { useEffect } from 'react';\nimport { AutoEnableFullscreenSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\n\nexport default function useFullscreen() {\n  const [autoEnableFullscreen] = useSettingValue(AutoEnableFullscreenSetting);\n\n  useEffect(() => {\n    try {\n      if (autoEnableFullscreen) {\n        document.body.requestFullscreen().catch(console.info);\n      }\n    } catch (e) {}\n  }, []);\n}\n","export default \"__VITE_ASSET__$OLYpZAx__\"","const sleep = (ms: number) => new Promise<void>((resolve) => setTimeout(resolve, ms));\n\nexport default sleep;\n","import styled from '@emotion/styled';\nimport { CheckCircleOutline } from '@mui/icons-material';\nimport Loader from 'Elements/Loader';\nimport { typography } from 'Elements/cssMixins';\nimport events from 'GameEvents/GameEvents';\nimport { useEventEffect, useEventListenerSelector } from 'GameEvents/hooks';\nimport PlayersManager from 'Players/PlayersManager';\nimport SinglePlayer from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/SinglePlayer';\nimport { waitFinished } from 'SoundManager';\nimport backgroundMusic from 'assets/459342__papaninkasettratat__cinematic-music-short.mp3';\nimport { SyntheticEvent, useEffect, useRef, useState } from 'react';\nimport CountUp from 'react-countup';\nimport sleep from 'utils/sleep';\n\ninterface Props {\n  onFinish: () => void;\n}\n\nconst AUTOSTART_TIMEOUT_S = 15;\n\nfunction WaitForReadiness({ onFinish }: Props) {\n  const audio = useRef<HTMLAudioElement>(null);\n  const [areAllPlayersReady, setAreAllPlayersReady] = useState(false);\n\n  const [confirmedPlayers, setConfirmedPlayers] = useState<string[]>([]);\n  useEventEffect(events.readinessConfirmed, (deviceId) => {\n    setConfirmedPlayers((current) => [...current, deviceId]);\n  });\n\n  const players = useEventListenerSelector([events.inputListChanged, events.readinessConfirmed], () => {\n    return PlayersManager.getPlayers().map(\n      (player, index) => [player.input.deviceId!, player.getName(), player] as const,\n    );\n  });\n\n  useEffect(() => {\n    (async () => {\n      // can't use `areAllPlayersReady` as it would need to be specified as useEffect dependency\n      let allInputsReady = false;\n      const inputsReady = PlayersManager.requestReadiness().then(() => {\n        allInputsReady = true;\n        setAreAllPlayersReady(true);\n      });\n      const minTimeElapsed = sleep(1_500);\n      const maxTimeElapsed = sleep(AUTOSTART_TIMEOUT_S * 1_000);\n\n      // Only start the music if waiting for readiness takes some time\n      await sleep(250);\n      if (!allInputsReady) {\n        await audio?.current?.play();\n      }\n\n      await Promise.race([Promise.all([inputsReady, minTimeElapsed]), maxTimeElapsed]);\n      if (!audio?.current?.paused) waitFinished.play();\n      await sleep(500);\n      audio?.current?.pause();\n      await sleep(1000);\n      onFinish();\n    })();\n  }, []);\n\n  const playerStatuses = players.map(([deviceId, name, player]) => ({\n    confirmed: confirmedPlayers.includes(deviceId),\n    name,\n    player: player,\n  }));\n\n  return (\n    <>\n      <WaitingForReady>\n        {!areAllPlayersReady && (\n          <span>\n            Waiting for all players to click <strong>\"Ready\"</strong>\n          </span>\n        )}\n        <PlayerList>\n          {playerStatuses.map(({ confirmed, name, player }, index) => (\n            <PlayerEntry\n              className=\"ph-no-capture\"\n              key={index}\n              data-test=\"player-confirm-status\"\n              data-name={name}\n              data-confirmed={confirmed}>\n              {!areAllPlayersReady && (\n                <ConfirmStatus>{confirmed ? <CheckCircleOutline /> : <Loader color=\"info\" size=\"1em\" />}</ConfirmStatus>\n              )}{' '}\n              <SinglePlayer player={player} />\n            </PlayerEntry>\n          ))}\n        </PlayerList>\n        {!areAllPlayersReady && (\n          <TimeoutMessage>\n            The song will start automatically in{' '}\n            <strong>\n              <CountUp end={0} start={AUTOSTART_TIMEOUT_S} duration={AUTOSTART_TIMEOUT_S} useEasing={false} />\n            </strong>\n          </TimeoutMessage>\n        )}\n      </WaitingForReady>\n      <audio\n        src={backgroundMusic}\n        ref={audio}\n        hidden\n        autoPlay={false}\n        onPlay={(e: SyntheticEvent<HTMLAudioElement>) => {\n          e.currentTarget.volume = 0.8;\n        }}\n      />\n    </>\n  );\n}\n\nconst WaitingForReady = styled.div`\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  gap: 5rem;\n\n  font-size: 5rem;\n  ${typography};\n`;\n\nconst TimeoutMessage = styled.span`\n  font-size: 5rem;\n`;\n\nconst PlayerList = styled.div`\n  //margin-top: 5rem;\n  display: flex;\n  flex-direction: column;\n  gap: 5rem;\n  width: 50rem;\n  view-transition-name: player-mic-check-container;\n`;\n\nconst PlayerEntry = styled.div`\n  display: flex;\n  align-items: center;\n  //justify-content: center;\n  gap: 2rem;\n  transform: scale(1.5);\n`;\n\nconst ConfirmStatus = styled.span`\n  svg {\n    width: 5rem;\n    height: 5rem;\n    stroke: black;\n  }\n`;\n\nexport default WaitForReadiness;\n","import { NotesSection, Section, Song } from 'interfaces';\nimport { cloneDeep, range } from 'lodash-es';\nimport getSongBeatLength from 'Songs/utils/getSongBeatLength';\nimport isNotesSection from 'Songs/utils/isNotesSection';\nimport { getFirstNoteStartFromSections, getLastNoteEndFromSections } from 'Songs/utils/notesSelectors';\n\nconst MAX_SECTION_PAUSE_MS = 250;\n\nconst getSingableBeats = (sections: Section[], start: number = 0, end: number = Infinity) =>\n  sections\n    .filter(isNotesSection)\n    .filter((section) => getFirstNoteStartFromSections([section]) >= start)\n    .filter((section) => getLastNoteEndFromSections([section]) <= end)\n    .reduce((current, section) => current + section.notes.reduce((length, note) => length + note.length, 0), 0);\n\n// Join sections into segments - group of sections that have shorter than MAX_SECTION_PAUSE_MS pause between\nexport const segmentSections = (sections: Section[], beatLength: number): NotesSection[][] => {\n  const [firstSection, ...noteSections] = sections.filter(isNotesSection);\n\n  const segments: NotesSection[][] = [[firstSection]];\n\n  noteSections.forEach((section) => {\n    const lastSegment = segments.at(-1)!;\n\n    const lastSectionEnd = getLastNoteEndFromSections(lastSegment);\n    const firstSectionNoteStart = getFirstNoteStartFromSections([section]);\n    const difference = firstSectionNoteStart - lastSectionEnd;\n\n    if (difference * beatLength > MAX_SECTION_PAUSE_MS) {\n      segments.push([section]);\n    } else {\n      lastSegment.push(section);\n    }\n  });\n\n  return segments;\n};\n\nconst sum = (acc: number, elem: number) => acc + elem;\n\nconst calculateAmplitude = (groups: number[][]) => {\n  const sums = groups.map((group) => group.reduce(sum, 0));\n  return Math.max(...sums) - Math.min(...sums);\n};\n\nconst shiftSolution = (groups: number[][], at: number): number[][] => {\n  const result = cloneDeep(groups);\n  const takeFromLeft = (pos: number) => {\n    if (result[pos - 1].length < 2) return;\n    const left = result[pos - 1].pop()!;\n    result[pos].push(left);\n  };\n  const takeFromRight = (pos: number) => {\n    if (result[pos + 1]?.length < 2) return;\n    const [first, ...rest] = result[pos + 1];\n    result[pos].push(first);\n    result[pos + 1] = rest;\n  };\n\n  at % 2 === 1 ? takeFromLeft(Math.ceil(at / 2)) : takeFromRight(Math.ceil(at / 2));\n\n  return result;\n};\n\nconst arrSum = (arr: number[]) => arr.reduce(sum, 0);\n\nexport default function generatePlayerChanges(song: Song): number[][] {\n  const CHANGES_COUNT = 9;\n  const beatLength = getSongBeatLength(song);\n\n  return song.tracks.map((track) => {\n    if (track.sections.length < 3) return [];\n\n    const segments = segmentSections(track.sections, beatLength);\n\n    // array of groups of singable beats count -- each element is the total singable beats in a segment\n    // The goal is to for the groups to have as similar total count of singable beats as possible\n    let result: number[][] = [];\n\n    // todo replace this hacky algorithm with https://en.wikipedia.org/wiki/Multiway_number_partitioning\n    // STEP1:   Build initial groups by calculating \"ideal\" group length (aka amount of singable beats)\n    //          And try to have them as close to the ideal as possible (by either overflowing or \"underflowing\")\n    let currentBuffer = [getSingableBeats(segments[0])]; // A candidate for the next group\n    for (let i = 0; i < segments.length - 2; i++) {\n      // get the last segment already put in the result\n      const lastSegment = segments[result.flat().length - 1] ?? [];\n      // How many beats are left to sing\n      const singableBeats = getSingableBeats(track.sections, getLastNoteEndFromSections(lastSegment) ?? 0);\n      const idealSize = singableBeats / (1 + CHANGES_COUNT - result.length);\n\n      const segmentSingableBeatsCount = getSingableBeats(segments[i + 1]);\n\n      const bufferSum = arrSum(currentBuffer);\n\n      if (bufferSum + segmentSingableBeatsCount < idealSize) {\n        // If adding the current segment to the candidate doesn't move us past the ideal size, just add it\n        currentBuffer = [...currentBuffer, segmentSingableBeatsCount];\n      } else if (idealSize - bufferSum < bufferSum + segmentSingableBeatsCount - idealSize) {\n        // If the candidate is closer to ideal size, add it as a new group\n        result.push(currentBuffer);\n        currentBuffer = [segmentSingableBeatsCount];\n      } else {\n        // If the candidate with currently inspected segment is closer to ideal size, add it as a new group\n        result.push([...currentBuffer, segmentSingableBeatsCount]);\n        currentBuffer = [];\n      }\n    }\n\n    // STEP2:   Try to make groups more even by trying to move segments between groups and checking if it\n    //          resulted in smaller differences between longest and shortest group (aka amplitude)\n    for (let i = 0; i < 100; i++) {\n      const currentAmplitude = calculateAmplitude(result);\n      // Create alternative results (by shifting one segment between groups in either way)\n      // Note this doesn't guarantee creating best results as moving multiple segments at the same time\n      // isn't accounted for\n      const candidates = range((result.length - 2) * 2 + 2).map((at) => shiftSolution(result, at));\n      const candidatesAmplitudes = candidates.map(calculateAmplitude);\n      const minimalAmplitude = Math.min(...candidatesAmplitudes);\n      if (currentAmplitude <= minimalAmplitude) break; // If no results are better, give up\n      const minimalAmplitudeIndex = candidatesAmplitudes.indexOf(minimalAmplitude);\n      result = candidates[minimalAmplitudeIndex];\n    }\n\n    return result\n      .map((group) => group.length)\n      .reduce<number[]>((acc, length) => [...acc, (acc.at(-1) ?? 0) + length], [])\n      .map((index) => getLastNoteEndFromSections(segments[index - 1]));\n  });\n}\n","import { QrCode2 } from '@mui/icons-material';\nimport { useRef } from 'react';\nimport { randomInt } from 'utils/randomValue';\n\nconst data = [\n  <>\n    You can follow the updates and give feedback on the game through the Facebook Page:{' '}\n    <a href=\"https://www.facebook.com/allkaraoke.party\" target=\"_blank\" rel=\"noreferrer\">\n      <strong>fb.com/AllKaraoke.Party</strong>\n    </a>\n  </>,\n  <>\n    Start typing a name of a song in <strong>Song Selection</strong> to active Search feature\n  </>,\n  <>\n    Narrow down songs through <strong>playlists</strong> on the right in Song Selection\n  </>,\n  <>\n    Select <strong>Pass The Mic</strong> Game Mode to share the microphones and sing in a team\n  </>,\n  <>\n    Your scores and <strong>stats are saved</strong> in this browser - they will be available for the next party!\n  </>,\n  <>\n    You can remove irrelevant songs from the Song Selection in <strong>Edit Songs</strong> page\n  </>,\n  <>\n    If the game feels a bit jaggy with low FPS, check out <strong>Settings</strong> page\n  </>,\n  <>\n    Party is only getting started? Play <strong>Jukebox</strong> for the music and to see what songs are available\n  </>,\n  <>\n    Research shows that <strong>duet songs</strong> are that bit more fun than simple one-track ones\n  </>,\n  <>\n    Want to sing a <strong>new song</strong>? Find UltraStar version of it and import it with\n    <br />\n    <strong>Convert Ultrastar .txt</strong>\n  </>,\n  <>\n    The <strong>white pulse</strong> around selected song in Song Selection tries to match song's tempo\n  </>,\n  <>\n    Entire game (besides add/edit song) is navigable with <strong>Keyboard</strong>\n  </>,\n  <>\n    You can hide or show keyboard navigation help with <kbd>H</kbd> key\n  </>,\n  <>\n    In Song Selection, hold <kbd>↑</kbd> or <kbd>↓</kbd> to jump to the next letter\n  </>,\n  <>\n    Add <strong>vibrato</strong> to the notes you sing to get additional <strong>bonus points</strong>\n  </>,\n  <>\n    You can control the game with your phone - click on the{' '}\n    <strong>\n      <QrCode2 />\n      QR Code Icon\n    </strong>{' '}\n    on the top right and follow the instructions\n  </>,\n];\n\ninterface Props {\n  as?: any;\n}\n\nexport const GameTip = ({ as = 'h4', ...restProps }: Props) => {\n  const randomValue = useRef(randomInt(0, data.length - 1));\n  // const randomValue = useRef(randomInt(0, 0));\n\n  const Component = as;\n  return <Component {...restProps}>{data[randomValue.current]}</Component>;\n};\n","import styled from '@emotion/styled';\nimport { captureException } from '@sentry/react';\nimport CameraManager from 'Camera/CameraManager';\nimport { useEffect, useRef, useState } from 'react';\n\ninterface Props {}\n\nfunction CameraRoll({ ...props }: Props) {\n  const [videoSrc, setVideoSrc] = useState('');\n  const video = useRef<HTMLVideoElement | null>(null);\n\n  useEffect(() => {\n    // Seems it needs some time to process the video, otherwise invalid URL is returned\n    const timeout = setTimeout(() => {\n      setVideoSrc(CameraManager.getVideo());\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  useEffect(() => {\n    try {\n      if (video.current) video.current.playbackRate = 16;\n    } catch (e) {\n      captureException(e);\n    }\n  }, [videoSrc]);\n\n  return (\n    <Container {...props}>\n      <Video src={videoSrc} ref={video} loop autoPlay className=\"ph-no-capture\" />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 80rem;\n  height: 60rem;\n`;\n\nconst Video = styled.video`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default CameraRoll;\n","import styled from '@emotion/styled';\n\ninterface Props {\n  score: number;\n  maxScore: number;\n  color: string;\n}\n\nfunction easeOutCubic(x: number): number {\n  return 1 - Math.pow(1 - x, 3);\n}\n\nfunction easing(x: number): number {\n  return easeOutCubic(x);\n}\n\nfunction ScoreBar({ color, maxScore, score }: Props) {\n  return (\n    <SScoreBar\n      style={{\n        border: score === 0 ? 0 : undefined,\n        width: `${easing(score / maxScore) * 24}%`,\n        backgroundColor: color,\n      }}\n    />\n  );\n}\n\nconst SScoreBar = styled.div`\n  background-image: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0.17) 0%,\n    rgba(0, 0, 0, 0.03) 50%,\n    rgba(0, 0, 0, 0.18) 51%,\n    rgba(0, 0, 0, 0.18) 100%\n  );\n  transition: 1s;\n  border-radius: 0.5rem;\n  height: 100%;\n  border: solid 0.1rem black;\n  box-sizing: border-box;\n`;\n\nexport default ScoreBar;\n","import styled from '@emotion/styled';\nimport { typography } from 'Elements/cssMixins';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { PlayerScore } from 'Scenes/Game/Singing/PostGame/PostGameView';\nimport ScoreBar from 'Scenes/Game/Singing/PostGame/Views/Results/ScoreBar';\nimport Typewriter from 'typewriter-effect';\n\ninterface Props {\n  playerNumber: number;\n  player: PlayerScore;\n  segment: number;\n}\nfunction PlayerDetailedScore({ playerNumber, player, segment }: Props) {\n  const [detailedScore, maxScore] = player.detailedScore;\n\n  return (\n    <ScoreBarContainer>\n      <ScoreBar\n        score={segment > -1 ? detailedScore.rap + detailedScore.freestyle + detailedScore.normal : 0}\n        maxScore={maxScore.rap + maxScore.freestyle + maxScore.normal}\n        color={styles.colors.players[playerNumber].perfect.fill}\n      />\n\n      <ScoreBar\n        score={segment > 0 ? detailedScore.perfect : 0}\n        maxScore={maxScore.perfect}\n        color={styles.colors.players[playerNumber].stroke}\n      />\n\n      <ScoreBar\n        score={segment > 1 ? detailedScore.star : 0}\n        maxScore={maxScore.star}\n        color={styles.colors.players[playerNumber].starPerfect.stroke}\n      />\n\n      <ScoreBar\n        score={segment > 2 ? detailedScore.vibrato : 0}\n        maxScore={maxScore.vibrato}\n        color={styles.colors.players[playerNumber].perfect.stroke}\n      />\n      <ScoreDescription>\n        {segment < 5 && (\n          <Typewriter\n            options={{\n              strings: [\n                'Regular notes',\n                'Perfect notes',\n                'Star notes',\n                'Vibrato',\n                // \"\",\n              ],\n              // @ts-expect-error missing in types\n              pauseFor: 1_000,\n              autoStart: true,\n              // loop: true,\n              delay: 15,\n              deleteSpeed: 15,\n              cursor: '',\n            }}\n          />\n        )}\n      </ScoreDescription>\n    </ScoreBarContainer>\n  );\n}\n\nconst ScoreBarContainer = styled.div`\n  position: relative;\n  height: 4rem;\n  width: 100rem;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: row;\n  padding: 0.5rem;\n  border-radius: 1rem;\n  gap: 0.5rem;\n`;\n\nconst ScoreDescription = styled.span`\n  position: absolute;\n  ${typography};\n  font-size: 3rem;\n  text-align: right;\n  white-space: nowrap;\n  top: 5rem;\n  left: 1rem;\n  display: block;\n`;\n\nexport default PlayerDetailedScore;\n","import styled from '@emotion/styled';\nimport { Badge } from 'Elements/Badge';\nimport { buttonFocused } from 'Elements/Button';\nimport { formatter } from 'Scenes/Game/Singing/GameOverlay/Components/ScoreText';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { PlayerScore } from 'Scenes/Game/Singing/PostGame/PostGameView';\nimport PlayerDetailedScore from 'Scenes/Game/Singing/PostGame/Views/Results/PlayerDetailedScore';\nimport { ContentElement } from 'Scenes/Game/SongPage';\nimport { HighScoreEntity, SingSetup } from 'interfaces';\nimport CountUp from 'react-countup';\n\ninterface Props {\n  player: PlayerScore;\n  revealHighScore: boolean;\n  useColors?: boolean;\n  playerNumber: number;\n  segment: number;\n  highestScore: number;\n  highScores: HighScoreEntity[];\n  singSetup: SingSetup;\n}\n\nfunction PlayerScoreView({\n  playerNumber,\n  player,\n  highestScore,\n  highScores,\n  singSetup,\n  useColors = true,\n  revealHighScore,\n  segment,\n}: Props) {\n  const [detailedScore] = player.detailedScore;\n  let playerScore = 0;\n  if (segment > -1) {\n    playerScore = detailedScore.normal + detailedScore.rap + detailedScore.freestyle;\n  }\n  if (segment > 0) {\n    playerScore = playerScore + detailedScore.perfect;\n  }\n  if (segment > 1) {\n    playerScore = playerScore + detailedScore.star;\n  }\n  if (segment > 2) {\n    playerScore = playerScore + detailedScore.vibrato;\n  }\n\n  const isHighScore = (playerName: string) =>\n    highScores.some((score) => score.singSetupId === singSetup.id && score.name === playerName);\n\n  return (\n    <Container>\n      <ScoreTextPlayer\n        color={useColors ? styles.colors.players[playerNumber].text : ``}\n        data-test={`player-${playerNumber}-name`}\n        className=\"ph-no-capture\">\n        {player.name}\n      </ScoreTextPlayer>\n      <ScoreTextContainer>\n        <ScoreTextScore\n          highscore={revealHighScore && isHighScore(player.name)}\n          color={useColors ? styles.colors.players[playerNumber].text : ``}\n          win={revealHighScore && playerScore === highestScore}\n          data-test={`player-${playerNumber}-score`}\n          data-score={playerScore}>\n          <CountUp preserveValue end={playerScore} formattingFn={formatter.format} duration={segment < 5 ? 1 : 0.5} />\n          <HighScoreBadge highscore={revealHighScore && isHighScore(player.name)}>High score!</HighScoreBadge>\n        </ScoreTextScore>\n      </ScoreTextContainer>\n      <PlayerDetailedScore playerNumber={playerNumber} player={player} segment={segment} />\n    </Container>\n  );\n}\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1.5rem;\n`;\n\nconst ScoreTextPlayer = styled(ContentElement)<{ color: string }>`\n  padding-left: 10rem;\n  padding-right: 10rem;\n  font-size: 3.5rem;\n  color: ${(props) => props.color};\n`;\n\nconst ScoreTextScore = styled(ScoreTextPlayer)<{\n  win: boolean;\n  highscore: boolean;\n  color: string;\n}>`\n  font-size: ${(props) => (props.win ? '8.5rem' : '5.5rem')};\n  color: ${(props) => (props.win ? styles.colors.text.active : 'white')};\n  transition: 400ms ease-in-out;\n  position: relative;\n`;\n\nconst ScoreTextContainer = styled.div`\n  height: 8.5rem;\n`;\n\nconst HighScoreBadge = styled(Badge)<{ highscore: boolean }>`\n  top: -1.5rem;\n  right: -10rem;\n  font-size: 3rem;\n  ${(props) => props.highscore && buttonFocused};\n\n  opacity: ${(props) => (props.highscore ? '1' : '0')};\n  transition: 400ms;\n`;\n\nexport default PlayerScoreView;\n","import styled from '@emotion/styled';\nimport CameraManager from 'Camera/CameraManager';\nimport { Button } from 'Elements/Button';\nimport { sumDetailedScore } from 'Scenes/Game/Singing/GameState/Helpers/calculateScore';\nimport { PlayerScore } from 'Scenes/Game/Singing/PostGame/PostGameView';\nimport CameraRoll from 'Scenes/Game/Singing/PostGame/Views/Results/CameraRoll';\nimport PlayerScoreView from 'Scenes/Game/Singing/PostGame/Views/Results/PlayerScore';\nimport useKeyboard from 'hooks/useKeyboard';\nimport useKeyboardHelp from 'hooks/useKeyboardHelp';\nimport { GAME_MODE, HighScoreEntity, SingSetup } from 'interfaces';\nimport posthog from 'posthog-js';\nimport { useEffect, useMemo, useState } from 'react';\n\ninterface Props {\n  onNextStep: () => void;\n  players: PlayerScore[];\n  highScores: HighScoreEntity[];\n  singSetup: SingSetup;\n}\n\nfunction ResultsView({ onNextStep, players, highScores, singSetup }: Props) {\n  // -1 so the animation starts from the first segment\n  const [segment, setSegment] = useState<number>(-1);\n\n  useEffect(() => {\n    if (segment < 0) {\n      setSegment(0);\n    } else if (segment < 4) {\n      const interval = setInterval(() => {\n        setSegment((segment) => segment + 1);\n      }, 1_500);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [segment]);\n  const isAnimFinished = segment > 3;\n\n  const nextStep = () => {\n    if (!isAnimFinished) {\n      posthog.capture('animation_skipped');\n      setSegment(5);\n    } else {\n      onNextStep();\n    }\n  };\n\n  useKeyboard(\n    {\n      accept: nextStep,\n    },\n    true,\n    [segment],\n  );\n  const help = useMemo(\n    () => ({\n      accept: 'Next',\n    }),\n    [],\n  );\n  useKeyboardHelp(help, true);\n\n  const isCoop = singSetup.mode === GAME_MODE.CO_OP;\n  const finalPlayers = isCoop ? [{ ...players[0], name: players.map((player) => player.name).join(', ') }] : players;\n\n  const playerScores = finalPlayers.map((player) => sumDetailedScore(player.detailedScore[0]));\n  const highestScore = Math.max(...playerScores);\n\n  return (\n    <>\n      <ScoresContainer>\n        {finalPlayers.map((player, number) => (\n          <PlayerScoreView\n            playerNumber={player.playerNumber}\n            useColors={!isCoop}\n            revealHighScore={segment > 3}\n            segment={segment}\n            key={number}\n            player={player}\n            highScores={highScores}\n            highestScore={highestScore}\n            singSetup={singSetup}\n          />\n        ))}\n      </ScoresContainer>\n      <SongSelectionButton\n        onClick={nextStep}\n        focused\n        data-test={isAnimFinished ? 'highscores-button' : 'skip-animation-button'}>\n        {isAnimFinished ? 'Next' : 'Skip'}\n      </SongSelectionButton>\n      {CameraManager.getPermissionStatus() && <StyledPhotoRoll />}\n    </>\n  );\n}\n\nconst ScoresContainer = styled.div`\n  position: absolute;\n  top: 20rem;\n  width: 100%;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst SongSelectionButton = styled(Button)<{ focused: boolean }>`\n  position: absolute;\n  bottom: 4rem;\n  right: 2rem;\n  width: 40rem;\n  font-size: 1.9vw;\n`;\n\nconst StyledPhotoRoll = styled(CameraRoll)`\n  position: absolute;\n  top: calc(50% - 30rem);\n  left: 95rem;\n  transform: scale(0.75);\n`;\n\nexport default ResultsView;\n","import { PLAYER_NAMES_SESSION_STORAGE_KEY } from 'hooks/players/consts';\nimport { useMemo } from 'react';\n\nexport default function useRecentPlayerNames() {\n  return useMemo<string[]>(() => JSON.parse(sessionStorage.getItem(PLAYER_NAMES_SESSION_STORAGE_KEY)!) ?? [], []);\n}\n","import { Autocomplete } from 'Elements/Autocomplete';\nimport useRecentPlayerNames from 'hooks/players/useRecentPlayerNames';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { HighScoreEntity } from 'interfaces';\nimport { useRef, useState } from 'react';\n\ninterface Props {\n  index: number;\n  singSetupId: string;\n  score: HighScoreEntity;\n  register: ReturnType<typeof useKeyboardNav>['register'];\n  onSave: (singId: string, score: number, oldName: string, newName: string) => void;\n}\n\nfunction HighScoreRename({ score, register, singSetupId, onSave, index }: Props) {\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const [newName, setNewName] = useState('');\n  const playerNames = useRecentPlayerNames();\n\n  const onBlur = () => {\n    if (newName.trim().length && newName.trim() !== score.name) onSave(singSetupId, score.score, score.name, newName);\n  };\n\n  return (\n    <Autocomplete\n      className=\"ph-no-capture\"\n      options={playerNames}\n      onChange={setNewName}\n      onBlur={onBlur}\n      value={newName}\n      label=\"\"\n      ref={inputRef}\n      {...register(`highscore-rename-${index}`, () => inputRef.current?.focus())}\n      placeholder={score.name}\n      data-test={`input-edit-highscore`}\n      data-original-name={score.name}\n    />\n  );\n}\n\nexport default HighScoreRename;\n","import styled from '@emotion/styled';\nimport { Button } from 'Elements/Button';\nimport { typography } from 'Elements/cssMixins';\nimport ScoreText from 'Scenes/Game/Singing/GameOverlay/Components/ScoreText';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { useEditScore } from 'Songs/stats/hooks';\nimport dayjs from 'dayjs';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { HighScoreEntity, SingSetup, Song } from 'interfaces';\nimport HighScoreRename from './HighScoreRename';\n\ninterface Props {\n  onNextStep: () => void;\n  singSetup: SingSetup;\n  highScores: HighScoreEntity[];\n  song: Song;\n}\n\nfunction HighScoresView({ onNextStep, highScores, singSetup, song }: Props) {\n  const { register } = useKeyboardNav();\n  const editScore = useEditScore(song);\n\n  return (\n    <>\n      <ScoresContainer data-test=\"highscores-container\">\n        {highScores.map((score, index) => (\n          <ScoreContainer isCurrentSing={score.singSetupId === singSetup.id} key={index}>\n            <ScorePosition>{index + 1}</ScorePosition>\n\n            <ScorePlayerName className=\"ph-no-capture\">\n              {score.singSetupId === singSetup.id ? (\n                <HighScoreRename\n                  index={index}\n                  score={score}\n                  register={register}\n                  singSetupId={singSetup.id}\n                  onSave={editScore}\n                />\n              ) : (\n                score.name\n              )}\n            </ScorePlayerName>\n            <ScoreScore>\n              <ScoreText score={score.score} />\n            </ScoreScore>\n            <ScoreDate>{dayjs(score.date).format('MMMM DD, YYYY')}</ScoreDate>\n          </ScoreContainer>\n        ))}\n      </ScoresContainer>\n      <SongSelectionButton {...register('play-next-song-button', onNextStep, undefined, true)}>\n        Select song\n      </SongSelectionButton>\n    </>\n  );\n}\n\nconst ScoresContainer = styled.div`\n  position: absolute;\n  top: 20rem;\n  width: 100%;\n  text-align: center;\n  padding: 0 16rem;\n  box-sizing: border-box;\n`;\n\nconst ScoreContainer = styled.div<{ isCurrentSing: boolean }>`\n  position: relative;\n  ${typography};\n  font-size: 3.2rem;\n  display: flex;\n  background: ${(props) => (props.isCurrentSing ? 'rgba(0,0,0,.9)' : 'rgba(0,0,0,.5)')};\n  margin-bottom: 2rem;\n  padding: ${(props) => (props.isCurrentSing ? `0 1.5rem` : `1rem 3.2rem`)};\n  align-items: center;\n`;\nconst ScorePosition = styled.div`\n  padding: 0 1.6rem;\n  color: ${styles.colors.text.active};\n`;\nconst ScorePlayerName = styled.div`\n  text-align: left;\n  flex: 1;\n  padding: 1.6rem;\n`;\nconst ScoreScore = styled.div`\n  padding: 0 1rem;\n`;\nconst ScoreDate = styled.div`\n  position: absolute;\n  font-size: 2rem;\n  bottom: -1rem;\n  right: -1.6rem;\n  background: black;\n  padding: 0.5rem;\n`;\n\nconst SongSelectionButton = styled(Button)<{ focused: boolean }>`\n  position: absolute;\n  bottom: 4rem;\n  right: 2rem;\n  width: 40rem;\n  font-size: 1.9vw;\n`;\n\nexport default HighScoresView;\n","import styled from '@emotion/styled';\nimport { GameTip } from 'Elements/GameTip';\nimport { typography } from 'Elements/cssMixins';\nimport ResultsView from 'Scenes/Game/Singing/PostGame/Views/Results';\nimport { ChristmasModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport useBackgroundMusic from 'hooks/useBackgroundMusic';\nimport { DetailedScore, SingSetup, Song } from 'interfaces';\nimport { useState } from 'react';\nimport SongPage from '../../SongPage';\nimport HighScoresView from './Views/HighScores';\n\nexport interface PlayerScore {\n  detailedScore: [DetailedScore, DetailedScore];\n  playerNumber: number;\n  name: string;\n}\n\ninterface HighScoreEntity {\n  singSetupId: string;\n  name: string;\n  score: number;\n  date: string;\n}\n\ninterface Props {\n  width: number;\n  height: number;\n  song: Song;\n  onClickSongSelection: () => void;\n  players: PlayerScore[];\n  singSetup: SingSetup;\n  highScores: HighScoreEntity[];\n}\n\nfunction PostGameView({ song, width, height, onClickSongSelection, players, highScores, singSetup }: Props) {\n  const [isChristmasMode] = useSettingValue(ChristmasModeSetting);\n  useBackgroundMusic(true);\n  const [step, setStep] = useState<'results' | 'highscores'>('results');\n\n  return (\n    <SongPage songData={song} width={width} height={height}>\n      <Container>\n        {step === 'results' && (\n          <ResultsView\n            onNextStep={() => setStep('highscores')}\n            players={players}\n            singSetup={singSetup}\n            highScores={highScores}\n          />\n        )}\n        {step === 'highscores' && (\n          <HighScoresView onNextStep={onClickSongSelection} singSetup={singSetup} highScores={highScores} song={song} />\n        )}\n        <PostGameTip $active />\n      </Container>\n      {isChristmasMode && (\n        <ChristmasMusicCredit>\n          Credit to <a href=\"https://www.FesliyanStudios.com\">https://www.FesliyanStudios.com</a> for the background\n          music.\n        </ChristmasMusicCredit>\n      )}\n    </SongPage>\n  );\n}\n\nconst Container = styled.div`\n  pointer-events: auto;\n`;\n\nexport default PostGameView;\n\nconst PostGameTip = styled(GameTip, {\n  shouldForwardProp: (propName) => !propName.startsWith('$'),\n})<{ $active: boolean }>`\n  transition: 300ms;\n  transform: scale(${({ $active }) => ($active ? 1 : 0)});\n  position: absolute;\n  bottom: 20rem;\n  font-size: 3.2rem;\n  line-height: 1.25;\n  color: white;\n  text-align: center;\n  background: rgba(0, 0, 0, 0.75);\n  width: 100%;\n  box-sizing: border-box;\n\n  padding: 2rem 10rem;\n\n  kbd {\n    padding: 0.12rem 0.9rem;\n    border-radius: 1rem;\n    border: 0.5rem solid rgb(204, 204, 204);\n    border-bottom-color: rgb(150, 150, 150);\n    border-right-color: rgb(150, 150, 150);\n    color: rgb(51, 51, 51);\n    line-height: 1.4;\n    display: inline-block;\n    box-shadow: 0 0.1rem 0 rgba(0, 0, 0, 0.2), inset 0 0 0 0.2rem #ffffff;\n    background-color: rgb(247, 247, 247);\n    text-shadow: 0 0.1rem 0 #fff;\n    font-weight: normal;\n  }\n`;\n\nconst ChristmasMusicCredit = styled.span`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n  font-size: 1.5rem;\n  ${typography};\n`;\n","export default function seededRandom(seed: string) {\n  const [a, b, c, d] = cyrb128(seed);\n  return sfc32(a, b, c, d)();\n}\n\n// https://stackoverflow.com/a/47593316\nfunction cyrb128(str: string) {\n  let h1 = 1779033703,\n    h2 = 3144134277,\n    h3 = 1013904242,\n    h4 = 2773480762;\n  for (let i = 0, k; i < str.length; i++) {\n    k = str.charCodeAt(i);\n    h1 = h2 ^ Math.imul(h1 ^ k, 597399067);\n    h2 = h3 ^ Math.imul(h2 ^ k, 2869860233);\n    h3 = h4 ^ Math.imul(h3 ^ k, 951274213);\n    h4 = h1 ^ Math.imul(h4 ^ k, 2716044179);\n  }\n  h1 = Math.imul(h3 ^ (h1 >>> 18), 597399067);\n  h2 = Math.imul(h4 ^ (h2 >>> 22), 2869860233);\n  h3 = Math.imul(h1 ^ (h3 >>> 17), 951274213);\n  h4 = Math.imul(h2 ^ (h4 >>> 19), 2716044179);\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  (h1 ^= h2 ^ h3 ^ h4), (h2 ^= h1), (h3 ^= h1), (h4 ^= h1);\n  return [h1 >>> 0, h2 >>> 0, h3 >>> 0, h4 >>> 0] as const;\n}\nfunction sfc32(a: number, b: number, c: number, d: number) {\n  return function () {\n    a |= 0;\n    b |= 0;\n    c |= 0;\n    d |= 0;\n    var t = (((a + b) | 0) + d) | 0;\n    d = (d + 1) | 0;\n    a = b ^ (b >>> 9);\n    b = (c + (c << 3)) | 0;\n    c = (c << 21) | (c >>> 11);\n    c = (c + t) | 0;\n    return (t >>> 0) / 4294967296;\n  };\n}\n","import { useSongStats } from 'Songs/stats/hooks';\nimport { HighScoreEntity, SingSetup, Song } from 'interfaces';\nimport { useMemo } from 'react';\nimport isE2E from 'utils/isE2E';\nimport seededRandom from 'utils/seededRandom';\n\nconst fakePlayerNames = [\n  'Lysa Arryn',\n  'Peter Parker',\n  'Zordon',\n  'Chad Khalimov',\n  'Dat Boi',\n  'Good Guy Greg',\n  'Scumbag Steve',\n  'Meme Man',\n  'Pepe',\n  'Wojak',\n  'Ebmarah',\n  'Shrek',\n  'Vad of ICE Beat',\n  'Krasnolud',\n  'Mały Aragorn',\n  'Morning Breeze',\n  'Auytjak Lorav',\n  'Smelly Cat',\n  'Stinky Foot',\n];\nconst fakeDateFrom = new Date('2016-01-01').getTime();\nconst fakeDateTo = new Date('2024-01-07').getTime();\n\nconst MAX_SCORES = 5;\n\nexport default function useHighScores(song: Song, singSetup: SingSetup): HighScoreEntity[] {\n  const stats = useSongStats(song);\n\n  const highScores = useMemo(() => {\n    const fakeNamesPool = [...fakePlayerNames];\n    const fakeScores: HighScoreEntity[] = Array.from({ length: MAX_SCORES }, (_, i) => {\n      const random = seededRandom(song.id + i);\n      const score = 600_000 + (1_400_000 / (MAX_SCORES - 1)) * i;\n      const name = fakeNamesPool.splice(Math.floor(random * fakeNamesPool.length), 1)[0];\n      return {\n        singSetupId: i.toString(),\n        name: name,\n        score: isE2E() ? score / 1000 : score,\n        date: new Date((fakeDateTo - fakeDateFrom) * random + fakeDateFrom).toISOString(),\n      };\n    });\n\n    return [\n      ...fakeScores,\n      ...(stats?.scores\n        .filter(({ setup }) => setup.mode === singSetup.mode && setup.tolerance === singSetup.tolerance)\n        .map((score) =>\n          score.scores.map((singleScore) => ({\n            ...singleScore,\n            date: score.date,\n            singSetupId: score.setup.id,\n          })),\n        )\n        .flat() ?? []),\n    ]\n      .sort((a, b) => b.score - a.score)\n      .slice(0, MAX_SCORES);\n  }, [song.id, stats, singSetup]);\n\n  return highScores ?? [];\n}\n","import PlayersManager from 'Players/PlayersManager';\nimport PostGameView from 'Scenes/Game/Singing/PostGame/PostGameView';\nimport useHighScores from 'Scenes/Game/Singing/PostGame/hooks/useHighScores';\nimport { SingSetup, Song } from 'interfaces';\nimport { useMemo } from 'react';\nimport GameState from '../GameState/GameState';\n\ninterface Props {\n  width: number;\n  height: number;\n  song: Song;\n  onClickSongSelection: () => void;\n  singSetup: SingSetup;\n}\n\nfunction PostGame({ song, width, height, onClickSongSelection, singSetup }: Props) {\n  const highScores = useHighScores(song, singSetup);\n  const playerScores = useMemo(\n    () =>\n      PlayersManager.getPlayers().map((player) => ({\n        name: player.getName(),\n        playerNumber: player.number,\n        detailedScore: GameState.getPlayerDetailedScore(player.number),\n      })),\n    [],\n  );\n\n  return (\n    <PostGameView\n      singSetup={singSetup}\n      song={song}\n      width={width}\n      height={height}\n      onClickSongSelection={onClickSongSelection}\n      players={playerScores}\n      highScores={highScores}\n    />\n  );\n}\n\nexport default PostGame;\n","import styled from '@emotion/styled';\nimport { useBackground } from 'Elements/LayoutWithBackground';\nimport { VideoState } from 'Elements/VideoPlayer';\nimport events from 'GameEvents/GameEvents';\nimport PlayersManager from 'Players/PlayersManager';\nimport GameState from 'Scenes/Game/Singing/GameState/GameState';\nimport WaitForReadiness from 'Scenes/Game/Singing/WaitForReadiness';\nimport {\n  SongListEntryDetailsArtist,\n  SongListEntryDetailsTitle,\n} from 'Scenes/SingASong/SongSelection/Components/SongCard';\nimport useSong from 'Songs/hooks/useSong';\nimport useBlockScroll from 'hooks/useBlockScroll';\nimport useFullscreen from 'hooks/useFullscreen';\nimport { GAME_MODE, SingSetup, SongPreview } from 'interfaces';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport useViewportSize from '../../../hooks/useViewportSize';\nimport generatePlayerChanges from './Helpers/generatePlayerChanges';\nimport Player, { PlayerRef } from './Player';\nimport PostGame from './PostGame/PostGame';\n\ninterface Props {\n  singSetup: SingSetup;\n  songPreview: SongPreview;\n  returnToSongSelection: () => void;\n  restartSong: () => void;\n}\nfunction Singing({ songPreview, singSetup, returnToSongSelection, restartSong }: Props) {\n  useFullscreen();\n  useBlockScroll();\n  const player = useRef<PlayerRef | null>(null);\n  const song = useSong(songPreview.id);\n\n  const { width, height } = useViewportSize();\n  const [isEnded, setIsEnded] = useState(false);\n  const [isOverlayVisible, setIsOverlayVisible] = useState(true);\n  const [playerState, setPlayerState] = useState(VideoState.UNSTARTED);\n\n  const playerChanges = useMemo(() => {\n    if (!song.data) return [];\n    if (singSetup.mode !== GAME_MODE.PASS_THE_MIC) return song.data.tracks.map(() => []);\n\n    return generatePlayerChanges(song.data);\n  }, [song.data, singSetup]);\n\n  const [isTransitionTimeout, setIsTransitionTimeout] = useState(false);\n\n  useBackground(!isTransitionTimeout);\n\n  useEffect(() => {\n    if (isOverlayVisible && song.data && (isTransitionTimeout || playerState !== VideoState.UNSTARTED)) {\n      setIsOverlayVisible(false);\n    }\n  }, [song.data, isTransitionTimeout, playerState, isOverlayVisible]);\n\n  if (isEnded && song.data) {\n    return (\n      <PostGame\n        width={width}\n        height={height}\n        song={song.data}\n        onClickSongSelection={returnToSongSelection}\n        singSetup={singSetup}\n      />\n    );\n  } else {\n    return (\n      <Container>\n        <BackgroundContainer visible={isOverlayVisible}>\n          <Overlay video={songPreview.video} width={width} height={height} />\n          <Artist>{songPreview.artist}</Artist>\n          <Title>{songPreview.title}</Title>\n          <WaitForReadiness\n            onFinish={() => {\n              setIsTransitionTimeout(true);\n              player.current?.play();\n            }}\n          />\n        </BackgroundContainer>\n        {song.data && (\n          <Player\n            ref={player}\n            onStatusChange={setPlayerState}\n            playerChanges={playerChanges}\n            players={singSetup.players}\n            song={song.data}\n            width={width}\n            height={height}\n            autoplay={false}\n            onSongEnd={() => {\n              const scores =\n                GameState.getSingSetup()?.mode === GAME_MODE.CO_OP\n                  ? [\n                      {\n                        name: PlayersManager.getPlayers()\n                          .map((player) => player.getName())\n                          .join(', '),\n                        score: GameState.getPlayerScore(0),\n                      },\n                    ]\n                  : PlayersManager.getPlayers().map((player) => ({\n                      name: player.getName(),\n                      score: GameState.getPlayerScore(player.number),\n                    }));\n              const progress = GameState.getSongCompletionProgress();\n              events.songEnded.dispatch(song.data!, singSetup, scores, progress);\n              setIsEnded(true);\n            }}\n            singSetup={singSetup}\n            restartSong={restartSong}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst BackgroundContainer = styled.div<{ visible: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  pointer-events: none;\n  background-color: black;\n  view-transition-name: song-preview;\n  opacity: ${(props) => (props.visible ? 1 : 0)};\n  transition: 500ms;\n`;\n\nconst BaseOverlay = styled.div`\n  background-size: cover;\n  background-position: center center;\n  filter: blur(10px);\n`;\n\nconst Overlay = (props: { video: string; width: number; height: number }) => (\n  <BaseOverlay\n    style={{\n      backgroundImage: `url('https://i3.ytimg.com/vi/${props.video}/hqdefault.jpg')`,\n      width: `${props.width}px`,\n      height: `${props.height}px`,\n    }}\n  />\n);\n\nconst Artist = styled(SongListEntryDetailsArtist)`\n  view-transition-name: song-preview-artist;\n  position: absolute;\n  top: 10rem;\n  left: 10rem;\n  font-size: 7rem;\n`;\nconst Title = styled(SongListEntryDetailsTitle)`\n  view-transition-name: song-preview-title;\n  position: absolute;\n\n  font-size: 8rem;\n  top: 19rem;\n  left: 10rem;\n`;\n\nexport default Singing;\n","import CameraManager from 'Camera/CameraManager';\nimport SingASong from 'Scenes/SingASong/SingASong';\nimport { woosh } from 'SoundManager';\nimport useFullscreen from 'hooks/useFullscreen';\nimport useQueryParam from 'hooks/useQueryParam';\nimport { SingSetup, SongPreview } from 'interfaces';\nimport { useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport startViewTransition from 'utils/startViewTransition';\nimport Singing from './Singing/Singing';\n\nfunction Game() {\n  const songId = useQueryParam('song');\n\n  const [singSetup, setSingSetup] = useState<(SingSetup & { song: SongPreview }) | null>(null);\n  const [preselectedSong, setPreselectedSong] = useState<string | null>(songId ?? null);\n  const [resetKey, setResetKey] = useState(0);\n  const handleSelect = (setup: SingSetup & { song: SongPreview }) => {\n    // @ts-expect-error\n    document.getElementById('preview-video-container')!.style.viewTransitionName = 'song-preview-video';\n    startViewTransition(() => {\n      // @ts-expect-error\n      document.getElementById('preview-video-container')!.style.viewTransitionName = '';\n      flushSync(() => {\n        setSingSetup(setup);\n      });\n    });\n\n    woosh.play();\n  };\n\n  useFullscreen();\n\n  return (\n    <>\n      {singSetup ? (\n        <Singing\n          restartSong={() => {\n            CameraManager.restartRecord();\n            setResetKey((current) => current + 1);\n          }}\n          key={resetKey}\n          songPreview={singSetup.song}\n          singSetup={singSetup}\n          returnToSongSelection={() => {\n            setPreselectedSong(singSetup.song.id);\n            setSingSetup(null);\n          }}\n        />\n      ) : (\n        <SingASong onSongSelected={handleSelect} preselectedSong={preselectedSong} />\n      )}\n    </>\n  );\n}\nexport default Game;\n"],"names":["toInteger","value","result","toFinite","remainder","nativeCeil","nativeMax","chunk","array","size","guard","isIterateeCall","length","index","resIndex","baseSlice","Casino","createSvgIcon","_jsx","CheckCircleOutline","QuickSearch","setFilters","filters","keyboardControl","visible","setVisible","searchInput","useRef","isFocused","setIsFocused","useState","setSearch","current","search","useHotkeys","onLeave","blur","enabled","enableOnTags","onSearchSong","e","stopPropagation","preventDefault","key","REGULAR_ALPHA_CHARS","onRemoteSearch","useCallback","events","remoteSongSearch","focus","useEffect","Container","FilterItem","jsx","Input","_styled","target","name","styles","props","large","AdditionalListControls","onRandom","searchActive","setSearchActive","clearSearch","jsxs","Fragment","Tooltip","RoundButton","Search","Button","colors","text","active","Tile","videoId","Image","BackgroundThumbnail","previousVideoId","usePreviousDistinct","useLayoutEffect","graphicSettings","useSettingValue","GraphicSetting","TileAnimated","BaseTile","Playlists","closePlaylist","playlists","selectedPlaylist","setSelectedPlaylist","register","focused","focusElement","useKeyboardNav","additionalHelp","vertical","undefined","useKeyboard","left","right","param","URLSearchParams","window","location","get","playlist","find","list","url","URL","href","searchParams","set","history","pushState","toString","map","Playlist","selected","display","typography","process","focusedStatic","_interopRequireDefault","require$$0","PeopleAlt","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","langMap","JSON","parse","SKIPPED_ORIGINS","SongFlag","song","lang","Array","isArray","language","isLangArtistOrigin","useMemo","artistOrigin","toLowerCase","includes","Flag","useSongStats","stats","setStats","storageKey","getSongKey","setSongStats","fetchSongStats","songStatStored","useEditScore","singId","score","oldName","newName","data","newScores","scores","record","setup","id","previousScore","trim","newData","storeSongStats","songScoreUpdated","dispatch","FinalSongCard","video","children","handleClick","background","expanded","restProps","onClickCallback","SongCardContainer","SongCardBackground","backgroundImage","SongInfo","SongCardStatsIndicator","tracksCount","MultiTrackIndicator","PeopleAltIcon","SongListEntryDetailsArtist","artist","SongListEntryDetailsTitle","title","ExpandedData","author","SongAuthor","authorUrl","SongListEntryStats","Language","_ref","inactive","theme","graphicSetting","SongListEntryDetails","lastPlayed","at","date","playedToday","dayjs","isAfter","subtract","plays","SongStatIndicator","SongGroupsNavigation","groupedSongList","containerRef","selectSong","activeGroups","setActiveGroups","observer","IntersectionObserver","entries","forEach","entry","getAttribute","isIntersecting","filter","group","threshold","element","document","querySelector","letter","observe","disconnect","scrollToGroup","songs","setTimeout","offset","parseFloat","getComputedStyle","documentElement","fontSize","topPos","getBoundingClientRect","top","scrollTop","scrollTo","behavior","SongsGroupButton","default","lines","star","stroke","gameModeNames","GAME_MODE","DUEL","PASS_THE_MIC","CO_OP","difficultyNames","useSetGameMode","createPersistedState","useSetTolerance","GameSettings","songPreview","onNextStep","onExitKeyboardControl","rememberedMode","setMode","mode","tolerance","setTolerance","handleNextButton","singSetup","v4","players","changeMode","nextValue","Object","values","changeTolerance","nextIndex","onBackspace","GSSwitcher","ModeDescription","SwapHorizIcon","PlayButton","Switcher","NoiseDetection","isBuiltIn","useEventListenerSelector","playerInputChanged","PlayersManager","getInputs","some","input","source","measures","handleMeasure","push","usePlayerMic","noiseDetected","setNoiseDetected","interval","setInterval","noDetection","freq","detection","avgNoDetectionVolume","reduce","acc","volume","avgDetectionVolume","isNoisy","clearInterval","NoiseWarningContainer","Warning","SinglePlayer","player","status","usePlayerMicStatus","number","Indicator","Ping","PlayerStatus","PlayerMicCheck","PlayerName","getName","MicCheck","useEventListener","playerNameChanged","InputManager","startMonitoring","isSetup","MicChecksContainer","getPlayers","Autocomplete","forwardRef","options","label","onChange","disabled","placeholder","keyboardNavigationChangeFocus","onBlur","className","forwardedRef","inputRef","autocompleteMenu","isInputFocused","setIsInputFocused","focusedOption","setFocusedOption","filteredOptions","option","handleKeyDown","code","newIndex","scrollIntoView","block","handleBlur","AutocompleteMenu","AutocompleteMenuitem","getTrackName","tracks","multipleTracks","playerNames","inputTouched","setInputTouched","nameRef","togglePlayerTrack","track","onNameChange","setName","isDefaultName","currentName","MAX_NAME_LENGTH","Track","PlayerSettings","mobilePhoneMode","MobilePhoneModeSetting","storedPreference","MicSetupPreferenceSetting","initialisePlayerSetup","Math","min","playerSetup","setPlayerSetup","useEventEffect","gameEvents","playerAdded","playerRemoved","playerList","sessionStorage","getItem","PLAYER_NAMES_SESSION_STORAGE_KEY","updatePlayer","playerNumber","newSetup","showModal","setShowModal","startSong","areInputsConfigured","SelectInputModal","PlayerSettingContainer","PlayerSettingTitle","getPlayer","SongSettings","onPlay","setSingSetup","step","setStep","onSongStepFinish","finalSetup","songStarted","viewTransitionName","GameConfiguration","PREVIEW_LENGTH","SongPreviewComponent","width","height","focusEffect","showVideo","setShowVideo","windowWidth","windowHeight","useViewportSize","start","previewStart","videoGap","end","previewEnd","undebounced","useDebounce","loadVideoById","startSeconds","endSeconds","videoWidth","videoHeight","finalHeight","setSize","Backdrop","SongBPMIndicator","SongPreviewContainer","Video","VideoPlayer","state","VideoState","ENDED","seekTo","playVideo","PLAYING","Content","_ref2","BaseSongPreviewContainer","css","realBpm","bpm","animationDuration","show","BaseSongBPMIndicator","usePlaylists","songLanguages","useLanguageList","yearBefore","yearAfter","duet","updatedAfter","toISOString","filteringFunctions","songList","excludeLanguages","languages","appliedFilters","clearString","every","songLang","cleanSearch","Number","year","edition","after","dateAfter","lastUpdate","applyFilters","useSongListFilter","excludedLanguages","ExcludedLanguagesSetting","prefilteredList","deferredFilters","useDeferredValue","playlistFilters","p","filteredList","useSongList","useSongIndex","groups","newSongs","isNew","indexOf","nonAlphaRegex","firstCharacter","isFinite","test","toUpperCase","console","error","captureException","isLoading","MAX_REMEMBERED_SONGS_COUNT","selectRandomSong","songCount","previouslySelectedSongs","maxRememberedCount","possibleOptions","keys","randomInt","shift","useTwoDimensionalNavigation","itemsPerRow","cursorPosition","setCursorPosition","songIndexMatrix","flat","songGroupMatrix","previousMatrix","usePrevious","isAtLastColumn","moveToSong","songIndex","y","findIndex","columns","x","positionToValue","matrix","def","row","positionToSongIndex","positionToGroup","previousFocusedSong","currentFocusedSong","moveCursor","plane","delta","menuNavigate","play","newX","newY","maxXInRow","focusedSong","focusedGroup","tuple","useSongSelectionKeyboardNavigation","groupedSongs","onEnter","songsPerRow","navigate","useSmoothNavigate","showPlaylistsState","setShowPlaylistsState","previousPlaylistsState","arePlaylistsVisible","leavingKey","isAtFirstColumn","handleEnter","menuEnter","blockBack","setBlockBack","previousSearch","timeout","clearTimeout","handleBackspace","menuBack","navigateToGroup","throttle","direction","currentGroup","nextGroupIndex","trailing","navigateVertically","repeat","currentlySelectedGroupIndex","navigateHorizontally","ignoreFilters","randomlySelectedSongs","randomSong","accept","down","up","back","random","help","shiftR","alphanumeric","remote","useKeyboardHelp","previousShowFilters","enteringKey","useSongSelection","preselectedSong","setKeyboardControl","handleKeyboardControl","startViewTransition","flushSync","woosh","showFilters","setShowFilters","preselected","setPreselected","preselectedSongIndex","firstNewSongIndex","replace","mounts","useBlockScroll","body","classList","add","remove","focusMultiplier","MAX_SONGS_PER_ROW","SongSelection","onSongSelected","useBackgroundMusic","useBackground","previewTop","previewLeft","previewWidth","previewHeight","setPositions","handleResize","previouslyFocusedGroup","previouslyFocusedSong","selector","previousSong","offsetTop","inline","offsetLeft","offsetWidth","offsetHeight","expandSong","loading","SongListContainer","SongsGroupContainer","SongsGroupHeader","SongsGroup","fill","_","i","SongListEntrySkeleton","SongImageBackground","NoSongsFound","SongPreview","createElement","SongListEntry","AddSongs","highlight","dim","memo","SingASong","setExcludedLanguages","languageSelection","setLanguageSelection","goBack","ExcludeLanguagesView","useFullscreen","autoEnableFullscreen","AutoEnableFullscreenSetting","requestFullscreen","catch","info","backgroundMusic","sleep","ms","Promise","resolve","AUTOSTART_TIMEOUT_S","WaitForReadiness","onFinish","audio","areAllPlayersReady","setAreAllPlayersReady","confirmedPlayers","setConfirmedPlayers","readinessConfirmed","deviceId","inputListChanged","allInputsReady","inputsReady","requestReadiness","then","minTimeElapsed","maxTimeElapsed","race","all","paused","waitFinished","pause","playerStatuses","confirmed","WaitingForReady","PlayerList","PlayerEntry","ConfirmStatus","Loader","TimeoutMessage","CountUp","currentTarget","MAX_SECTION_PAUSE_MS","getSingableBeats","sections","Infinity","isNotesSection","section","getFirstNoteStartFromSections","getLastNoteEndFromSections","notes","note","segmentSections","beatLength","firstSection","noteSections","segments","lastSegment","lastSectionEnd","sum","elem","calculateAmplitude","sums","max","shiftSolution","cloneDeep","takeFromLeft","pos","pop","takeFromRight","first","rest","ceil","arrSum","arr","generatePlayerChanges","getSongBeatLength","currentBuffer","idealSize","CHANGES_COUNT","segmentSingableBeatsCount","bufferSum","currentAmplitude","candidates","range","candidatesAmplitudes","minimalAmplitude","minimalAmplitudeIndex","QrCode2","GameTip","as","randomValue","Component","CameraRoll","videoSrc","setVideoSrc","CameraManager","getVideo","playbackRate","easeOutCubic","pow","easing","ScoreBar","color","maxScore","SScoreBar","border","backgroundColor","PlayerDetailedScore","segment","detailedScore","ScoreBarContainer","rap","freestyle","normal","perfect","starPerfect","vibrato","ScoreDescription","Typewriter","strings","pauseFor","autoStart","delay","deleteSpeed","cursor","PlayerScoreView","highestScore","highScores","useColors","revealHighScore","playerScore","isHighScore","playerName","singSetupId","ScoreTextPlayer","ScoreTextContainer","ScoreTextScore","formatter","format","HighScoreBadge","ContentElement","win","Badge","highscore","buttonFocused","ResultsView","setSegment","isAnimFinished","nextStep","posthog","capture","isCoop","finalPlayers","join","playerScores","sumDetailedScore","ScoresContainer","SongSelectionButton","getPermissionStatus","StyledPhotoRoll","useRecentPlayerNames","HighScoreRename","onSave","setNewName","HighScoresView","editScore","ScoreContainer","ScorePosition","ScorePlayerName","ScoreScore","ScoreText","ScoreDate","isCurrentSing","PostGameView","onClickSongSelection","isChristmasMode","ChristmasModeSetting","SongPage","PostGameTip","ChristmasMusicCredit","shouldForwardProp","propName","startsWith","$active","seededRandom","seed","a","b","c","d","cyrb128","sfc32","str","h1","h2","h3","h4","k","charCodeAt","imul","t","fakePlayerNames","fakeDateFrom","Date","getTime","fakeDateTo","MAX_SCORES","useHighScores","fakeNamesPool","from","splice","floor","isE2E","singleScore","sort","slice","PostGame","GameState","getPlayerDetailedScore","Singing","returnToSongSelection","restartSong","useSong","isEnded","setIsEnded","isOverlayVisible","setIsOverlayVisible","playerState","setPlayerState","UNSTARTED","playerChanges","isTransitionTimeout","setIsTransitionTimeout","BackgroundContainer","Overlay","Artist","Title","Player","getSingSetup","getPlayerScore","progress","getSongCompletionProgress","songEnded","BaseOverlay","Game","songId","useQueryParam","setPreselectedSong","resetKey","setResetKey","handleSelect","getElementById","style","restartRecord"],"mappings":"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","x_google_ignoreList":[0,1,2,3,8]}