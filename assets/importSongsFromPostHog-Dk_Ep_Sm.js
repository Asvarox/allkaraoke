try{let e=typeof window<`u`?window:typeof global<`u`?global:typeof globalThis<`u`?globalThis:typeof self<`u`?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]=`23ed66cb-e429-4840-a831-5990029a256f`,e._sentryDebugIdIdentifier=`sentry-dbid-23ed66cb-e429-4840-a831-5990029a256f`)}catch{}{let e=typeof window<`u`?window:typeof global<`u`?global:typeof globalThis<`u`?globalThis:typeof self<`u`?self:{};e._sentryModuleMetadata=e._sentryModuleMetadata||{},e._sentryModuleMetadata[new e.Error().stack]=Object.assign({},e._sentryModuleMetadata[new e.Error().stack],{"_sentryBundlerPluginAppKey:allkaraoke-party-sentry-key":!0})}import{bh as e,bi as t,bk as n,by as r}from"./index-DGOvtbcA.js";const i=`https://eu.posthog.com`,a=`281`,o=new Date(Date.now()-1e3*3600*24*28).toISOString(),s=[`(tv)`,`(album version)`,`(movie version)`,`[duet]`],c=e=>(s.forEach(t=>{e.title.toLowerCase().endsWith(t)&&(e.title=e.title.slice(0,-t.length))}),e.title=e.title.trim(),e.language=e.language.map(e=>e.toLowerCase().startsWith(`espa`)?`Spanish`:e.toLowerCase().endsWith(`(romanized)`)?e.slice(0,-11).trim():e.toLowerCase().endsWith(`(brazil)`)?`Portuguese`:e),e.lastUpdate=new Date().toISOString(),e.id=void 0,e.id=n(e),e),l=async(e,n,r,s,l,u)=>{let d=await e(`${i}/api/projects/${a}/query`,{method:`post`,headers:{"Content-Type":`application/json`},body:JSON.stringify({query:{kind:`HogQLQuery`,query:`
            select events.properties.song, events.properties.songId, events.created_at
            from events
            where events.created_at > toDateTime('${u??o}')
              and event IN ('share-song', 'unshare-song') and events.properties.$user_id !='3ab0feed-e1d2-4ff0-8780-5db00698eb60'
            ORDER BY events.created_at ASC
            LIMIT 300
        `}})}),f=[];for(let[e,i,a]of d.results)try{!e&&i&&f.includes(i)&&(await l(i),console.log(`Deleting song ${i}`));let o=t(e.replaceAll(`\\n`,`
`).replaceAll(`\\"`,`"`));if(!o.id){console.log(`Song has no ID`,o);return}c(o),r.includes(o.id)?console.log(`Song ${o.id} already fetched`):(o.tracks[0]?.sections.length??0)<5?console.log(`Song ${o.id} seems to be broken, ${o.tracks[0]?.sections.length} sections found`):n.find(e=>e.id===o.id)?console.log(`Song ${o.id} already exists (by song id)`):n.find(e=>e.video===o.video)?console.log(`Song ${o.id} already exists (by video id)`):(o.lastUpdate=new Date().toISOString(),f.push(o.id),await s(o,a),console.log(`Added song ${o.id}`))}catch(t){console.warn(`Couldn't convert song ${e}`,t)}},u=async()=>{let t=r.session.getItem(`posthog_key`)||prompt(`Enter PostHog PAT`);if(!t)return;r.session.setItem(`posthog_key`,t);let n=new Date;n.setDate(n.getDate()-10);let i=prompt(`Enter from`,r.local.getItem(`posthog_from`)||n.toISOString());if(i===null)return;i=new Date(i).toISOString();let a=async(e,n)=>{let r=await fetch(e,{...n,headers:{...n.headers,Authorization:`Bearer ${t}`}});if(!r.ok)throw Error(`Request failed with status ${r.status}`);return r.json()},o=r.local.getItem(`posthog_from`)?new Date(r.local.getItem(`posthog_from`)).getTime():0;await l(a,(await e.getIndex(!0)).filter(e=>!e.local),[],async(t,n)=>{await e.store(t,!1);let r=new Date(n).getTime();r>o&&(o=r)},async t=>e.deleteSong(t),i),r.local.setItem(`posthog_from`,new Date(o).toISOString())};var d=u;export{d as default};
//# sourceMappingURL=importSongsFromPostHog-Dk_Ep_Sm.js.map