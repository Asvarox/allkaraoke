{"version":3,"file":"Game-MZSZ0Q9r.js","sources":["../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/toInteger.js","../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/chunk.js","../../.yarn/__virtual__/@mui-icons-material-virtual-e00251c167/0/cache/@mui-icons-material-npm-5.15.1-0cdf9f6502-b9d15ec65b.zip/node_modules/@mui/icons-material/esm/Casino.js","../../.yarn/__virtual__/@mui-icons-material-virtual-e00251c167/0/cache/@mui-icons-material-npm-5.15.1-0cdf9f6502-b9d15ec65b.zip/node_modules/@mui/icons-material/esm/CheckCircleOutline.js","../../src/Scenes/SingASong/SongSelection/Components/QuickSearch.tsx","../../src/Scenes/SingASong/SongSelection/Components/AdditionalListControls.tsx","../../src/Scenes/SingASong/SongSelection/Components/BackgroundThumbnail.tsx","../../src/Scenes/SingASong/SongSelection/Components/Playlists.tsx","../../.yarn/__virtual__/@mui-icons-material-virtual-e00251c167/0/cache/@mui-icons-material-npm-5.15.1-0cdf9f6502-b9d15ec65b.zip/node_modules/@mui/icons-material/PeopleAlt.js","../../src/Elements/Flag/mapping.ts","../../src/Scenes/SingASong/SongSelection/Components/SongCard/SongFlag.tsx","../../src/Songs/stats/hooks.ts","../../src/Scenes/SingASong/SongSelection/Components/SongCard.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongGroupsNavigation.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/GameSettings.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/NoiseDetection.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/SinglePlayer.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck.tsx","../../src/Elements/Autocomplete.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/PlayerSettings/SinglePlayer.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/PlayerSettings.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/SongSettings.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongPreview.tsx","../../src/Scenes/SingASong/SongSelection/Hooks/usePlaylists.tsx","../../src/Scenes/SingASong/SongSelection/Hooks/useSongList.ts","../../src/Scenes/SingASong/SongSelection/Hooks/selectRandomSong.ts","../../src/Scenes/SingASong/SongSelection/Hooks/useSongSelectionKeyboardNavigation.ts","../../src/Scenes/SingASong/SongSelection/Hooks/useSongSelection.ts","../../src/hooks/useBlockScroll.ts","../../src/Scenes/SingASong/SongSelection/SongSelection.tsx","../../src/Scenes/SingASong/SingASong.tsx","../../src/hooks/useFullscreen.ts","../../src/assets/459342__papaninkasettratat__cinematic-music-short.mp3","../../src/utils/sleep.ts","../../src/Scenes/Game/Singing/WaitForReadiness.tsx","../../src/Scenes/Game/Singing/Helpers/generatePlayerChanges.ts","../../src/Elements/GameTip.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results/CameraRoll.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results/ScoreBar.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results/PlayerDetailedScore.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results/PlayerScore.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results.tsx","../../src/hooks/players/useRecentPlayerNames.ts","../../src/Scenes/Game/Singing/PostGame/Views/HighScoreRename.tsx","../../src/Scenes/Game/Singing/PostGame/Views/HighScores.tsx","../../src/Scenes/Game/Singing/PostGame/PostGameView.tsx","../../src/Scenes/Game/Singing/PostGame/PostGame.tsx","../../src/Scenes/Game/Singing/Singing.tsx","../../src/Scenes/Game/Game.tsx"],"sourcesContent":["import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import baseSlice from './_baseSlice.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nexport default chunk;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z\"\n}), 'Casino');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');","import styled from '@emotion/styled';\nimport { Input } from 'Elements/Input';\nimport events from 'GameEvents/GameEvents';\nimport { useEventEffect } from 'GameEvents/hooks';\nimport { AppliedFilters } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport { REGULAR_ALPHA_CHARS } from 'hooks/useKeyboard';\nimport { Dispatch, SetStateAction, useCallback, useEffect, useRef, useState } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\ninterface Props {\n  setFilters: Dispatch<SetStateAction<AppliedFilters>>;\n  setVisible: Dispatch<SetStateAction<boolean>>;\n  filters: AppliedFilters;\n  keyboardControl: boolean;\n  visible: boolean;\n}\nexport default function QuickSearch({ setFilters, filters, keyboardControl, visible, setVisible }: Props) {\n  const searchInput = useRef<HTMLInputElement | null>(null);\n  const [isFocused, setIsFocused] = useState(false);\n\n  const setSearch = (value: string) => {\n    setFilters((current) => ({\n      ...current,\n      search: value,\n    }));\n  };\n\n  const onLeave = () => {\n    searchInput.current?.blur();\n  };\n\n  useHotkeys('down', onLeave, { enabled: isFocused, enableOnTags: ['INPUT'] });\n\n  const onSearchSong = (e: KeyboardEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    setSearch(e.key);\n  };\n\n  useHotkeys(\n    REGULAR_ALPHA_CHARS,\n    (e) => {\n      onSearchSong(e);\n      setVisible(true);\n    },\n    {\n      enabled: !filters.search && keyboardControl,\n    },\n  );\n\n  const onRemoteSearch = useCallback(\n    (search: string) => {\n      if (keyboardControl) {\n        setSearch(search);\n      }\n    },\n    [keyboardControl],\n  );\n  useEventEffect(events.remoteSongSearch, onRemoteSearch);\n\n  useHotkeys(\n    REGULAR_ALPHA_CHARS,\n    (e) => {\n      onSearchSong(e);\n      searchInput.current?.focus();\n    },\n    { enabled: !isFocused && keyboardControl },\n    [filters.search],\n  );\n\n  useHotkeys(\n    'Backspace',\n    (e) => {\n      searchInput.current?.focus();\n    },\n    { enabled: !isFocused && keyboardControl },\n    [filters.search],\n  );\n\n  useEffect(() => {\n    // Navigating to another playlist will blur the search input and clear the search - this hides the input\n    if (!isFocused) {\n      setVisible(!!filters.search);\n    }\n  }, [isFocused, filters.search, setVisible]);\n\n  if (!filters.search && !visible) {\n    return null;\n  }\n\n  return (\n    <Container data-test=\"song-list-search\">\n      <FilterItem large>\n        <form\n          data-test=\"filters-search-form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            searchInput.current?.blur();\n          }}>\n          <Input\n            onFocus={() => setIsFocused(true)}\n            onBlur={() => setIsFocused(false)}\n            onKeyDown={(e) => {\n              // Hide the search input when the user presses backspace and the search is empty\n              if (e.key === 'Backspace' && filters.search?.length === 0) {\n                setVisible(false);\n              }\n            }}\n            focused={isFocused}\n            autoFocus\n            label=\"Search\"\n            value={filters.search ?? ''}\n            onChange={setSearch}\n            ref={searchInput}\n            data-test=\"filters-search\"\n          />\n        </form>\n      </FilterItem>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  background: rgba(0, 0, 0, 0.7);\n  padding: 2rem;\n  font-size: 3rem;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  gap: 2rem;\n  position: fixed;\n  z-index: 200;\n  top: 4.5rem;\n  left: 30rem;\n  right: 30rem;\n`;\n\nconst FilterItem = styled.div<{ large?: boolean }>`\n  flex: ${(props) => (props.large ? 1.5 : 1)};\n`;\n","import styled from '@emotion/styled';\nimport { Casino, Search } from '@mui/icons-material';\nimport { Button } from 'Elements/Button';\nimport { Tooltip } from 'Elements/Tooltip';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport QuickSearch from 'Scenes/SingASong/SongSelection/Components/QuickSearch';\nimport { AppliedFilters } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport { Dispatch, SetStateAction, useState } from 'react';\n\ninterface Props {\n  onRandom: () => void;\n  setFilters: Dispatch<SetStateAction<AppliedFilters>>;\n  filters: AppliedFilters;\n  keyboardControl: boolean;\n}\n\nexport default function AdditionalListControls({ onRandom, setFilters, filters, keyboardControl }: Props) {\n  const [searchActive, setSearchActive] = useState(false);\n\n  const clearSearch = () => {\n    setFilters((current) => ({ ...current, search: '' }));\n  };\n\n  return (\n    <>\n      <Container>\n        <Tooltip title=\"Search\" placement=\"left\">\n          <RoundButton\n            onClick={() => (searchActive ? clearSearch() : setSearchActive(true))}\n            data-test=\"search-song-button\">\n            <Search />\n          </RoundButton>\n        </Tooltip>\n        <Tooltip title=\"Pick random\" placement=\"left\">\n          <RoundButton onClick={onRandom} data-test=\"random-song-button\">\n            <Casino />\n          </RoundButton>\n        </Tooltip>\n      </Container>\n\n      <QuickSearch\n        setFilters={setFilters}\n        filters={filters}\n        visible={searchActive}\n        setVisible={setSearchActive}\n        keyboardControl={keyboardControl}\n      />\n    </>\n  );\n}\n\nconst RoundButton = styled(Button)`\n  box-shadow: inset 0 0 2px 2px ${styles.colors.text.active};\n  background: black;\n  width: 7.5rem;\n  height: 7.5rem;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  svg {\n    width: 4.5rem;\n    height: 4.5rem;\n  }\n`;\n\nconst Container = styled.div`\n  pointer-events: none;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  //bottom: 50%;\n  bottom: 2.5rem;\n  right: 2.5rem;\n  z-index: 100;\n  gap: 2rem;\n`;\n","import styled from '@emotion/styled';\nimport { useLayoutEffect, useState } from 'react';\nimport { usePreviousDistinct } from 'react-use';\nimport { GraphicSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\n\nfunction Tile({ videoId, ...props }: Props) {\n  return (\n    <Image\n      src={`https://img.youtube.com/vi/${videoId}/default.jpg`}\n      alt={`Thumbnail image for YouTube video ${videoId}`}\n      {...props}\n    />\n  );\n}\n\ninterface Props {\n  videoId: string;\n}\nfunction BackgroundThumbnail({ videoId, ...props }: Props) {\n  const previousVideoId = usePreviousDistinct(videoId) ?? videoId;\n  const [visible, setVisible] = useState(true);\n  useLayoutEffect(() => {\n    setVisible((current) => !current);\n  }, [videoId]);\n  const [graphicSettings] = useSettingValue(GraphicSetting);\n\n  if (graphicSettings === 'low') {\n    return null;\n  }\n\n  return (\n    <Container {...props}>\n      <TileAnimated videoId={visible ? videoId : previousVideoId} visible={visible} />\n      <TileAnimated videoId={visible ? previousVideoId : videoId} visible={!visible} />\n      <BaseTile videoId={previousVideoId} />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: relative;\n  overflow: hidden;\n  background: black;\n`;\n\nconst BaseTile = styled(Tile)`\n  visibility: hidden;\n`;\nconst TileAnimated = styled(Tile)<{ visible: boolean }>`\n  position: absolute;\n  transition: opacity 300ms;\n  opacity: ${(props) => (props.visible ? 1 : 0)};\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport default BackgroundThumbnail;\n","import styled from '@emotion/styled';\nimport { Button } from 'Elements/Button';\nimport { focusedStatic, typography } from 'Elements/cssMixins';\nimport useKeyboard from 'hooks/useKeyboard';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { Dispatch, SetStateAction, useEffect } from 'react';\nimport { PlaylistEntry } from 'Scenes/SingASong/SongSelection/Hooks/usePlaylists';\n\ninterface Props {\n  selectedPlaylist: string | null;\n  setSelectedPlaylist: Dispatch<SetStateAction<string | null>>;\n  playlists: PlaylistEntry[];\n  closePlaylist: (leavingKey: 'left' | 'right') => void;\n  active: boolean;\n}\n\nexport default function Playlists({ active, closePlaylist, playlists, selectedPlaylist, setSelectedPlaylist }: Props) {\n  const { register, focused, focusElement } = useKeyboardNav({\n    enabled: active,\n    additionalHelp: {\n      // It's possible to leave the playlists with left/right\n      vertical: undefined,\n      'horizontal-vertical': null,\n    },\n  });\n\n  useKeyboard(\n    {\n      left: () => closePlaylist('left'),\n      right: () => closePlaylist('right'),\n    },\n    active,\n  );\n\n  useEffect(() => {\n    const param = new URLSearchParams(window.location.search).get('playlist');\n    if (param) {\n      focusElement(`playlist-${param}`);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (focused) {\n      const playlist = playlists.find((list) => `playlist-${list.name}` === focused);\n      if (playlist) {\n        /// push query param to url containing playlist name\n        const url = new URL(window.location.href);\n        url.searchParams.set('playlist', playlist.name);\n        window.history.pushState(null, '', url.toString());\n        setSelectedPlaylist(playlist.name);\n      }\n    }\n  }, [focused, playlists]);\n\n  return (\n    <Container data-test=\"song-list-playlists\" active={active}>\n      {playlists.map((playlist) => (\n        <Playlist\n          key={playlist.name}\n          data-selected={`playlist-${playlist.name}` === focused}\n          active={active}\n          {...register(\n            `playlist-${playlist.name}`,\n            () => focusElement(`playlist-${playlist.name}`),\n            undefined,\n            playlist.name === selectedPlaylist,\n          )}\n          {...(!active ? { selected: `playlist-${playlist.name}` === focused } : {})}>\n          {playlist.display ?? playlist.name}\n        </Playlist>\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div<{ active: boolean }>`\n  background: rgba(0, 0, 0, ${(props) => (props.active ? 0.75 : 0.5)});\n  width: 100vh;\n  transform-origin: top right;\n  transform: rotate(-90deg);\n  position: absolute;\n  z-index: 200;\n  left: -100vh;\n  top: 0;\n  font-size: 3.6rem;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row-reverse;\n  gap: 0;\n\n  h2 {\n    ${typography};\n    margin: 0;\n  }\n`;\n\nconst Playlist = styled(Button)<{ selected?: boolean; active: boolean }>`\n  font-size: 3rem;\n  justify-self: stretch;\n  flex-grow: 1;\n  ${(props) => !props.focused && props.active && `background-color: transparent;`};\n  padding: 1.5rem;\n  ${(props) => (props.selected ? focusedStatic : !props.active && `opacity: .75;`)}\n`;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M16.67 13.13C18.04 14.06 19 15.32 19 17v3h4v-3c0-2.18-3.57-3.47-6.33-3.87z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"9\",\n  cy: \"8\",\n  r: \"4\",\n  fillRule: \"evenodd\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4c-.47 0-.91.1-1.33.24C14.5 5.27 15 6.58 15 8s-.5 2.73-1.33 3.76c.42.14.86.24 1.33.24zm-6 1c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"\n}, \"2\")], 'PeopleAlt');\nexports.default = _default;","/**\n * https://en.wikipedia.org/wiki/List_of_official_languages_by_country_and_territory\n const data = {};\n\n (() => {\n let countryCodes = (() => {\n const langNames = new Intl.DisplayNames(['en'], { type: 'region' });\n const langMap = {};\n for (let i = 0; i < 26; i++) {\n for (let j = 0; j < 26; j++) {\n let code = String.fromCharCode(97 + i) + String.fromCharCode(97 + j);\n let name = langNames.of(code.toUpperCase());\n if (name !== code && name !== undefined) {\n langMap[name] = code;\n }\n }\n }\n const langMap2 = {\n // Avoid using deprecated codes:\n Akan: 'ak',\n Hebrew: 'he',\n Indonesian: 'id',\n Javanese: 'jv',\n Romanian: 'ro',\n Yiddish: 'yi',\n // Optional extras:\n Tagalog: 'tl',\n English: 'gb',\n Korean: 'kr',\n Swedish: 'se',\n Latin: 'va',\n 'Czech Republic': 'cz',\n 'Antigua and Barbuda': 'ag',\n 'Bosnia and Herzegovina': 'ba',\n 'Trinidad and Tobago': 'tt',\n Transnistria: 'md',\n 'South Ossetia': 'ge',\n Somaliland: 'so',\n 'São Tomé and Príncipe': 'st',\n Turkey: 'tr',\n\n 'Saint Vincent and the Grenadines': 'vc',\n 'Saint Lucia': 'lc',\n 'Saint Kitts and Nevis': 'kn',\n 'Sahrawi Arab Democratic Republic': 'eh',\n 'Northern Cyprus': 'cy',\n 'Myanmar': 'mm',\n 'Federated States of Micronesia': 'fm',\n 'Sovereign Military Order of Malta': 'mt',\n 'Ivory Coast': 'ci',\n 'East Timor': 'tl',\n 'Republic of the Congo': 'cg',\n 'Democratic Republic of the Congo': 'cd',\n\n\n\n };\n return { ...langMap, ...langMap2 };\n })();\n\n document.querySelector('table.wikitable > tbody').querySelectorAll('tr').forEach((tr) => {\n /// get first two td elements from tr\n const [first, second] = tr.querySelectorAll('td');\n\n function getValues(td) {\n let values = td.innerText.split('\\n').map((s) => s.trim());\n /// clean the values from all non alphan characters\n return values.map((s) => s.replace(/[^a-zA-Z ]/g, '')).filter(Boolean);\n }\n\n const country = first.querySelector('a')?.innerText ?? getValues(first)[0];\n const languages = getValues(second);\n /// country is a name of the country - convert it to ISO 3166-1 alpha-2 code\n if (countryCodes[country]) {\n data[countryCodes[country]] = languages;\n } else {\n console.log(`No country code for ${country}`);\n }\n });\n\n console.log(JSON.stringify(data, null, 2));\n })();\n */\n// const langMap = {\nconst langMap: Record<string, string[]> = JSON.parse(`{\n  \"af\": [\n    \"Persian Dari\",\n    \"Pashto\"\n  ],\n  \"al\": [\n    \"Albanian\"\n  ],\n  \"dz\": [\n    \"Arabic\",\n    \"Berber\"\n  ],\n  \"ad\": [\n    \"Catalan\"\n  ],\n  \"ao\": [\n    \"Portuguese\"\n  ],\n  \"ag\": [\n    \"English\"\n  ],\n  \"ar\": [\n    \"Spanish\"\n  ],\n  \"am\": [\n    \"Armenian\"\n  ],\n  \"au\": [\n    \"English\"\n  ],\n  \"at\": [\n    \"German\"\n  ],\n  \"az\": [\n    \"Azerbaijani\"\n  ],\n  \"bs\": [\n    \"English\"\n  ],\n  \"bh\": [\n    \"Arabic\"\n  ],\n  \"bd\": [\n    \"Bengali\"\n  ],\n  \"bb\": [\n    \"English\"\n  ],\n  \"by\": [\n    \"Belarusian\",\n    \"Russian\"\n  ],\n  \"be\": [\n    \"Dutch\",\n    \"French\",\n    \"German\"\n  ],\n  \"bz\": [\n    \"English\"\n  ],\n  \"dy\": [\n    \"French\"\n  ],\n  \"bt\": [\n    \"Dzongkha\"\n  ],\n  \"bo\": [\n    \"Spanish\",\n    \"Aymara\",\n    \"Araona\",\n    \"Baure\",\n    \"Bsiro Chiquitano\",\n    \"Canichana\",\n    \"Cavinea\",\n    \"Cayubaba\",\n    \"Chcobo\",\n    \"Chimn\",\n    \"Ese Ejja\",\n    \"Guaran\",\n    \"Guarasuwe\",\n    \"Guarayu\",\n    \"Itonama\",\n    \"Leco\",\n    \"Machajuyai\",\n    \"Machineri\",\n    \"Maropa\",\n    \"Mojeo\",\n    \"Mojeo\",\n    \"Mor\",\n    \"Mosetn\",\n    \"Movima\",\n    \"Pacawara\",\n    \"Puquina\",\n    \"Quechua\",\n    \"Sirion\",\n    \"Tacana\",\n    \"Tapiet\",\n    \"Toromona\",\n    \"Uru-Chipaya\",\n    \"Weenhayek\",\n    \"Yaminawa\",\n    \"Yuki\",\n    \"Yuracar\",\n    \"Zamuco\"\n  ],\n  \"ba\": [\n    \"Bosnian\",\n      \"Croatian\",\n      \"Serbian\"\n  ],\n  \"bw\": [\n    \"English\"\n  ],\n  \"br\": [\n    \"Portuguese\"\n  ],\n  \"bn\": [\n    \"Malay\"\n  ],\n  \"bg\": [\n    \"Bulgarian\"\n  ],\n  \"hv\": [\n    \"French\"\n  ],\n  \"bi\": [\n    \"French\",\n    \"Kirundi\",\n    \"English\"\n  ],\n  \"kh\": [\n    \"Khmer\"\n  ],\n  \"cm\": [\n    \"English\",\n    \"French\"\n  ],\n  \"ca\": [\n    \"English\",\n    \"French\"\n  ],\n  \"cv\": [\n    \"Portuguese\"\n  ],\n  \"cf\": [\n    \"French\",\n    \"Sango\"\n  ],\n  \"td\": [\n    \"Arabic\",\n    \"French\"\n  ],\n  \"cl\": [\n    \"Spanish\"\n  ],\n  \"cn\": [\n    \"Chinese\"\n  ],\n  \"cx\": [\n    \"English\",\n    \"Chinese\",\n    \"Malay\"\n  ],\n  \"cc\": [\n    \"English\",\n    \"Cocos Malay\"\n  ],\n  \"co\": [\n    \"Spanish\"\n  ],\n  \"km\": [\n    \"Arabic\",\n    \"Comorian\",\n    \"French\"\n  ],\n  \"cd\": [\n    \"French\"\n  ],\n  \"cg\": [\n    \"French\"\n  ],\n  \"ck\": [\n    \"English\",\n    \"Cook Islands Mori\"\n  ],\n  \"cr\": [\n    \"Spanish\"\n  ],\n  \"hr\": [\n    \"Croatian\"\n  ],\n  \"cu\": [\n    \"Spanish\"\n  ],\n  \"cy\": [\n    \"Turkish\"\n  ],\n  \"cz\": [\n    \"Czech\",\n    \"Slovak\"\n  ],\n  \"dk\": [\n    \"Danish\"\n  ],\n  \"dj\": [\n    \"Arabic\",\n    \"French\"\n  ],\n  \"dm\": [\n    \"English\"\n  ],\n  \"do\": [\n    \"Spanish\"\n  ],\n  \"tl\": [\n    \"Portuguese\",\n    \"Tetum\"\n  ],\n  \"ec\": [\n    \"Spanish\",\n    \"Quechua\"\n  ],\n  \"eg\": [\n    \"Arabic\"\n  ],\n  \"sv\": [\n    \"Spanish\"\n  ],\n  \"gq\": [\n    \"French\",\n    \"Portuguese\",\n    \"Spanish\"\n  ],\n  \"er\": [\n    \"Tigrinya\"\n  ],\n  \"ee\": [\n    \"Estonian\"\n  ],\n  \"sz\": [\n    \"English\",\n    \"Swazi\"\n  ],\n  \"et\": [\n    \"Afar\",\n    \"Amharic\",\n    \"Oromo\",\n    \"Somali\",\n    \"Tigrinya\"\n  ],\n  \"fj\": [\n    \"English\",\n    \"Fijian\",\n    \"Fiji Hindi\"\n  ],\n  \"fi\": [\n    \"Finnish\",\n    \"Swedish\"\n  ],\n  \"fx\": [\n    \"French\"\n  ],\n  \"ga\": [\n    \"French\"\n  ],\n  \"gm\": [\n    \"English\"\n  ],\n  \"ge\": [\n    \"Ossetian\",\n    \"Russian\"\n  ],\n  \"de\": [\n    \"German\"\n  ],\n  \"gh\": [\n    \"English\"\n  ],\n  \"gr\": [\n    \"Greek\"\n  ],\n  \"gd\": [\n    \"English\"\n  ],\n  \"gt\": [\n    \"Spanish\"\n  ],\n  \"gn\": [\n    \"French\"\n  ],\n  \"gw\": [\n    \"Portuguese\"\n  ],\n  \"gy\": [\n    \"English\"\n  ],\n  \"ht\": [\n    \"French\",\n    \"Creole\"\n  ],\n  \"hn\": [\n    \"Spanish\"\n  ],\n  \"hu\": [\n    \"Hungarian\"\n  ],\n  \"is\": [\n    \"Icelandic\"\n  ],\n  \"in\": [\n    \"Hindi\",\n    \"English\"\n  ],\n  \"id\": [\n    \"Indonesian\"\n  ],\n  \"ir\": [\n    \"Persian\"\n  ],\n  \"iq\": [\n    \"Arabic\",\n    \"Kurdish\"\n  ],\n  \"ie\": [\n    \"Irish\",\n    \"English\"\n  ],\n  \"il\": [\n    \"Hebrew\"\n  ],\n  \"it\": [\n    \"Italian\"\n  ],\n  \"ci\": [\n    \"French\"\n  ],\n  \"jm\": [\n    \"English\"\n  ],\n  \"jp\": [\n    \"Japanese\"\n  ],\n  \"jo\": [\n    \"Arabic\"\n  ],\n  \"kz\": [\n    \"Kazakh\",\n    \"Russian\"\n  ],\n  \"ke\": [\n    \"English\",\n    \"Swahili\"\n  ],\n  \"ki\": [\n    \"English\",\n    \"Gilbertese\"\n  ],\n  \"kp\": [\n    \"Korean\"\n  ],\n  \"kr\": [\n    \"Korean\"\n  ],\n  \"xk\": [\n    \"Albanian\",\n    \"Serbian\"\n  ],\n  \"kw\": [\n    \"Arabic\"\n  ],\n  \"kg\": [\n    \"Kyrgyz\",\n    \"Russian\"\n  ],\n  \"la\": [\n    \"Lao\"\n  ],\n  \"lv\": [\n    \"Latvian\"\n  ],\n  \"lb\": [\n    \"Arabic\"\n  ],\n  \"ls\": [\n    \"Sotho\",\n    \"English\"\n  ],\n  \"lr\": [\n    \"English\"\n  ],\n  \"ly\": [\n    \"Arabic\"\n  ],\n  \"li\": [\n    \"German\"\n  ],\n  \"lt\": [\n    \"Lithuanian\"\n  ],\n  \"lu\": [\n    \"French\",\n    \"German\",\n    \"Luxembourgish\"\n  ],\n  \"mg\": [\n    \"French\",\n    \"Malagasy\"\n  ],\n  \"mw\": [\n    \"English\",\n    \"Chichewa\"\n  ],\n  \"my\": [\n    \"Malay\"\n  ],\n  \"mv\": [\n    \"Dhivehi\"\n  ],\n  \"ml\": [\n    \"Bambara\",\n    \"Bobo\",\n    \"Bozo\",\n    \"Dogon\",\n    \"Fula\",\n    \"Hassaniya\",\n    \"Kassonke\",\n    \"Maninke\",\n    \"Minyanka\",\n    \"Senufo\",\n    \"Songhay\",\n    \"Soninke\",\n    \"Tamasheq\"\n  ],\n  \"mt\": [\n    \"Italian\"\n  ],\n  \"mh\": [\n    \"English\",\n    \"Marshallese\"\n  ],\n  \"mr\": [\n    \"Arabic\"\n  ],\n  \"mu\": [\n    \"English\",\n    \"Morisien\"\n  ],\n  \"mx\": [\n    \"Spanish\"\n  ],\n  \"fm\": [\n    \"English\"\n  ],\n  \"md\": [\n    \"Moldovan\",\n    \"Russian\",\n    \"Ukrainian\"\n  ],\n  \"mc\": [\n    \"French\"\n  ],\n  \"mn\": [\n    \"Mongolian\"\n  ],\n  \"me\": [\n    \"Montenegrin\"\n  ],\n  \"ma\": [\n    \"Arabic\",\n    \"Berber\"\n  ],\n  \"mz\": [\n    \"Portuguese\"\n  ],\n  \"mm\": [\n    \"Burmese\"\n  ],\n  \"na\": [\n    \"English\"\n  ],\n  \"nr\": [\n    \"English\",\n    \"Nauruan\"\n  ],\n  \"np\": [\n    \"Nepali\"\n  ],\n  \"nl\": [\n    \"Dutch\"\n  ],\n  \"nz\": [\n    \"English\",\n    \"Maori\"\n  ],\n  \"ni\": [\n    \"Spanish\"\n  ],\n  \"ne\": [\n    \"French\"\n  ],\n  \"ng\": [\n    \"English\"\n  ],\n  \"nu\": [\n    \"English\",\n    \"Niuean\"\n  ],\n  \"nf\": [\n    \"English\",\n    \"Norfuk\"\n  ],\n  \"mk\": [\n    \"Macedonian\",\n    \"Albanian\"\n  ],\n  \"no\": [\n    \"Norwegian\",\n    \"Sami\"\n  ],\n  \"om\": [\n    \"Arabic\"\n  ],\n  \"pk\": [\n    \"Urdu\",\n    \"English\"\n  ],\n  \"pw\": [\n    \"English\",\n    \"Palauan\"\n  ],\n  \"ps\": [\n    \"Arabic\"\n  ],\n  \"pa\": [\n    \"Spanish\"\n  ],\n  \"pg\": [\n    \"English\",\n    \"Hiri Motu\",\n    \"Tok Pisin\"\n  ],\n  \"py\": [\n    \"Spanish\",\n    \"Guaran\"\n  ],\n  \"pe\": [\n    \"Spanish\",\n    \"Quechua\",\n    \"Aymara\",\n    \"Ashninka\"\n  ],\n  \"ph\": [\n    \"Filipino\",\n    \"English\"\n  ],\n  \"pl\": [\n    \"Polish\"\n  ],\n  \"pt\": [\n    \"Portuguese\"\n  ],\n  \"qa\": [\n    \"Arabic\"\n  ],\n  \"ro\": [\n    \"Romanian\"\n  ],\n  \"su\": [\n    \"Russian\"\n  ],\n  \"rw\": [\n    \"English\",\n    \"French\",\n    \"Kinyarwanda\",\n    \"Swahili\"\n  ],\n  \"eh\": [\n    \"Arabic\"\n  ],\n  \"kn\": [\n    \"English\"\n  ],\n  \"lc\": [\n    \"English\"\n  ],\n  \"vc\": [\n    \"English\"\n  ],\n  \"ws\": [\n    \"English\",\n    \"Samoan\"\n  ],\n  \"sm\": [\n    \"Italian\"\n  ],\n  \"st\": [\n    \"Portuguese\"\n  ],\n  \"sa\": [\n    \"Arabic\"\n  ],\n  \"sn\": [\n    \"French\"\n  ],\n  \"yu\": [\n    \"Serbian\"\n  ],\n  \"sc\": [\n    \"English\",\n    \"French\",\n    \"Creole\"\n  ],\n  \"sl\": [\n    \"English\"\n  ],\n  \"sg\": [\n    \"English\",\n    \"Malay\",\n    \"Chinese\",\n    \"Tamil\"\n  ],\n  \"sk\": [\n    \"Slovak\"\n  ],\n  \"si\": [\n    \"Slovene\"\n  ],\n  \"sb\": [\n    \"English\"\n  ],\n  \"so\": [\n    \"Arabic\",\n    \"English\",\n    \"Somali\"\n  ],\n  \"za\": [\n    \"Afrikaans\",\n    \"English\",\n    \"Ndebele\",\n    \"Sotho\",\n    \"Swazi\",\n    \"Tsonga\",\n    \"Tswana\",\n    \"Venda\",\n    \"Xhosa\",\n    \"Zulu\"\n  ],\n  \"ss\": [\n    \"English\"\n  ],\n  \"es\": [\n    \"Spanish\"\n  ],\n  \"lk\": [\n    \"Sinhala\",\n    \"Tamil\"\n  ],\n  \"sd\": [\n    \"Arabic\",\n    \"English\"\n  ],\n  \"sr\": [\n    \"Dutch\"\n  ],\n  \"se\": [\n    \"Swedish\"\n  ],\n  \"ch\": [\n    \"French\",\n    \"German\",\n    \"Italian\",\n    \"Romansh\"\n  ],\n  \"sy\": [\n    \"Arabic\"\n  ],\n  \"tw\": [\n    \"Chinese\"\n  ],\n  \"tj\": [\n    \"Tajik\"\n  ],\n  \"tz\": [\n    \"Swahili\",\n    \"English\"\n  ],\n  \"th\": [\n    \"Thai\"\n  ],\n  \"tg\": [\n    \"French\"\n  ],\n  \"tk\": [\n    \"English\",\n    \"Tokelauan\"\n  ],\n  \"to\": [\n    \"English\",\n    \"Tongan\"\n  ],\n  \"tt\": [\n    \"English\"\n  ],\n  \"tn\": [\n    \"Arabic\"\n  ],\n  \"tr\": [\n    \"Turkish\"\n  ],\n  \"tm\": [\n    \"Turkmen\"\n  ],\n  \"tv\": [\n    \"Tuvaluan\",\n    \"English\"\n  ],\n  \"ug\": [\n    \"English\",\n    \"Swahili\"\n  ],\n  \"ua\": [\n    \"Ukrainian\"\n  ],\n  \"ae\": [\n    \"Arabic\"\n  ],\n  \"uk\": [\n    \"English\"\n  ],\n  \"us\": [\n    \"English\"\n  ],\n  \"uy\": [\n    \"Spanish\"\n  ],\n  \"uz\": [\n    \"Uzbek\"\n  ],\n  \"vu\": [\n    \"English\",\n    \"French\",\n    \"Bislama\"\n  ],\n  \"va\": [\n    \"Italian\"\n  ],\n  \"ve\": [\n    \"Spanish\"\n  ],\n  \"vn\": [\n    \"Vietnamese\"\n  ],\n  \"ye\": [\n    \"Arabic\"\n  ],\n  \"zm\": [\n    \"English\"\n  ],\n  \"zw\": [\n    \"Chewa\",\n    \"Chibarwe\",\n    \"English\",\n    \"Kalanga\",\n    \"Khoisan\",\n    \"Nambya\",\n    \"Ndau\",\n    \"Ndebele\",\n    \"Shangani\",\n    \"Shona\",\n    \"Sotho\",\n    \"Tonga\",\n    \"Tswana\",\n    \"Venda\",\n    \"Xhosa\"\n  ]\n}`);\n// };\n\nexport default langMap;\n","import { Flag } from 'Elements/Flag';\nimport langMap from 'Elements/Flag/mapping';\nimport { SongPreview } from 'interfaces';\nimport { useMemo } from 'react';\n\n// skipping US and GB songs as there are a lot of them making the list look messy\nconst SKIPPED_ORIGINS = ['US', 'GB'];\n\ninterface Props {\n  song: Pick<SongPreview, 'language' | 'artistOrigin'>;\n}\nexport default function SongFlag({ song, ...props }: Props) {\n  const lang = Array.isArray(song.language) ? song.language[0] : song.language;\n\n  const isLangArtistOrigin = useMemo(() => {\n    if (!song.artistOrigin) return false;\n    return langMap[song.artistOrigin.toLowerCase()]?.includes(lang) ?? false;\n  }, [song.artistOrigin, lang]);\n\n  return (\n    <>\n      {isLangArtistOrigin && !SKIPPED_ORIGINS.includes(song.artistOrigin!) ? (\n        <Flag isocode={song.artistOrigin!} {...props} />\n      ) : song.language !== 'English' ? (\n        <Flag language={song.language} {...props} />\n      ) : null}\n    </>\n  );\n}\n","import events from 'GameEvents/GameEvents';\nimport { useEventEffect } from 'GameEvents/hooks';\nimport { SongStats, fetchSongStats, getSongKey, storeSongStats } from 'Songs/stats/common';\nimport { SongPreview } from 'interfaces';\nimport { useEffect, useState } from 'react';\n\nexport const useSongStats = (song: Pick<SongPreview, 'artist' | 'title'>) => {\n  const [stats, setStats] = useState<SongStats | null>(null);\n\n  const storageKey = getSongKey(song);\n\n  const setSongStats = async () => {\n    setStats(await fetchSongStats(song));\n  };\n\n  useEffect(() => {\n    setSongStats();\n  }, [storageKey]);\n\n  useEventEffect(events.songStatStored, setSongStats);\n\n  return stats;\n};\n\nexport const useEditScore = (song: Pick<SongPreview, 'artist' | 'title'>) => {\n  return async (singId: string, score: number, oldName: string, newName: string) => {\n    const storageKey = getSongKey(song);\n    const data = await fetchSongStats(song);\n\n    const newScores = data.scores.map((record) => {\n      if (record.setup.id !== singId) return record;\n\n      const newScores = record.scores.map((previousScore) => {\n        if (previousScore.name !== oldName || previousScore.score !== score) return previousScore;\n\n        return { name: newName.trim(), score };\n      });\n\n      return { ...record, scores: newScores };\n    });\n\n    const newData = { ...data, scores: newScores };\n\n    await storeSongStats(song, newData);\n    events.songScoreUpdated.dispatch(storageKey, newData, newName.trim());\n  };\n};\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\nimport { typography } from 'Elements/cssMixins';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport SongFlag from 'Scenes/SingASong/SongSelection/Components/SongCard/SongFlag';\nimport { useSongStats } from 'Songs/stats/hooks';\nimport dayjs from 'dayjs';\nimport { SongPreview } from 'interfaces';\nimport { ComponentProps, ReactNode, useCallback } from 'react';\n\ninterface Props extends ComponentProps<typeof SongCardContainer> {\n  song: SongPreview;\n  focused: boolean;\n  index?: number;\n  expanded?: boolean;\n  background?: boolean;\n  handleClick?: (index: number) => void;\n  video?: ReactNode;\n}\n\nexport const FinalSongCard = ({\n  song,\n  focused,\n  video,\n  children,\n  index,\n  handleClick,\n  background = true,\n  expanded = false,\n  ...restProps\n}: Props) => {\n  const onClickCallback = useCallback(() => (handleClick ? handleClick(index!) : undefined), [handleClick, index]);\n\n  return (\n    <SongCardContainer {...restProps} onClick={handleClick ? onClickCallback : undefined}>\n      {background && (\n        <SongCardBackground\n          style={{\n            backgroundImage: `url('https://i3.ytimg.com/vi/${song.video}/hqdefault.jpg')`,\n          }}\n          focused={focused}\n          expanded={expanded}\n        />\n      )}\n      <SongInfo expanded={expanded}>\n        {!expanded && <SongCardStatsIndicator song={song} />}\n        {song.tracksCount > 1 && !expanded && (\n          <MultiTrackIndicator data-test=\"multitrack-indicator\">\n            <PeopleAltIcon />\n            &nbsp; Duet\n          </MultiTrackIndicator>\n        )}\n        <SongListEntryDetailsArtist expanded={expanded}>{song.artist}</SongListEntryDetailsArtist>\n        <SongListEntryDetailsTitle expanded={expanded}>{song.title}</SongListEntryDetailsTitle>\n        <ExpandedData expanded={expanded}>\n          {expanded && (\n            <>\n              {song.author && (\n                <SongAuthor expanded={expanded}>\n                  by&nbsp;\n                  {song.authorUrl ? (\n                    <a href={song.authorUrl} target=\"_blank\" rel=\"noreferrer\">\n                      {song.author}\n                    </a>\n                  ) : (\n                    song.author\n                  )}\n                </SongAuthor>\n              )}\n              <SongListEntryStats song={song} />\n            </>\n          )}\n          {!expanded && <Language song={song} />}\n        </ExpandedData>\n      </SongInfo>\n      {children}\n      {video}\n    </SongCardContainer>\n  );\n};\n\nexport const Language = styled(SongFlag)`\n  height: 2.75rem;\n  object-fit: cover;\n  border-top-right-radius: 1rem;\n  position: absolute;\n  z-index: -1;\n  left: 0rem;\n  bottom: 0rem;\n  opacity: 0.95;\n`;\n\nexport const ExpandedData = styled.div<{ expanded: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nconst SongInfo = styled.div<{ expanded: boolean }>`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n  z-index: 1;\n  box-sizing: border-box;\n\n  flex-direction: column;\n\n  ${(props) =>\n    props.expanded &&\n    css`\n      align-items: flex-start;\n      justify-content: flex-start;\n    `}\n`;\n\nexport const SongCardContainer = styled.div`\n  font-size: 4.5rem;\n\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n  flex-direction: column;\n  box-sizing: border-box;\n  position: relative;\n  padding: 0.5rem;\n\n  border: 0.1rem black solid;\n  border-radius: 1rem;\n`;\n\nexport const SongCardBackground = styled.div<{\n  focused: boolean;\n  expanded: boolean;\n}>`\n  background-color: ${styles.colors.text.inactive};\n  position: absolute;\n  z-index: -1;\n  inset: 0;\n  ${(props) =>\n    props.theme.graphicSetting === 'high'\n      ? css`\n          background-size: ${props.focused ? 100 : 110}%;\n          ${!props.focused ? 'filter: grayscale(90%);' : ''}\n          ${props.expanded ? 'filter: blur(10px);' : ''}\n                  transition: 300ms;\n          opacity: ${props.focused ? 1 : 0.8};\n        `\n      : css`\n          background-size: 100%;\n          opacity: ${props.focused ? 1 : 0.6};\n        `}\n  background-position: center center;\n`;\n\nexport const SongListEntryDetails = styled.span<{ expanded?: boolean }>`\n  background: rgba(0, 0, 0, 0.7);\n\n  width: auto;\n  display: inline-block;\n  padding: 0.5rem;\n  ${typography};\n\n  text-align: right;\n  font-size: ${({ expanded }) => (expanded ? '6rem' : '2.7rem')};\n`;\n\nexport const SongListEntryDetailsArtist = styled(SongListEntryDetails)`\n  color: ${styles.colors.text.active};\n`;\n\nexport const SongListEntryDetailsTitle = styled(SongListEntryDetails)`\n  margin-top: ${(props) => (props.expanded ? '1.5rem' : '0.5rem')};\n  color: white;\n`;\n\nexport const SongAuthor = styled(SongListEntryDetailsTitle)`\n  font-size: 3rem;\n  margin-top: 3rem;\n`;\n\nexport const SongCardStatsIndicator = ({ song }: { song: SongPreview }) => {\n  const stats = useSongStats(song);\n  const lastPlayed = stats?.scores?.at(-1)?.date ?? false;\n\n  const playedToday = lastPlayed && dayjs(lastPlayed).isAfter(dayjs().subtract(1, 'days'));\n\n  return stats?.plays ? (\n    <SongStatIndicator data-test=\"song-stat-indicator\">{playedToday ? 'Played today' : stats.plays}</SongStatIndicator>\n  ) : null;\n};\n\nconst SongStatIndicator = styled.div`\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  padding: 0 1rem;\n  height: 2.75rem;\n  min-width: 2.75rem;\n  box-sizing: border-box;\n  border-radius: 5rem;\n  color: white;\n  background: rgba(0, 0, 0, 0.75);\n  font-size: 1.4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n`;\nconst MultiTrackIndicator = styled(SongStatIndicator)`\n  left: 0.5rem;\n  right: auto;\n\n  svg {\n    width: 1.75rem;\n    height: 1.75rem;\n  }\n`;\n\nexport const SongListEntryStats = ({ song }: { song: SongPreview }) => {\n  const stats = useSongStats(song);\n\n  return (\n    <SongAuthor>\n      {stats?.plays ? `Played ${stats.plays} time${stats.plays > 1 ? 's' : ''}` : 'Never played yet'}\n    </SongAuthor>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Button } from 'Elements/Button';\nimport { typography } from 'Elements/cssMixins';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { SongGroup } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport { useEffect, useState } from 'react';\n\ninterface Props {\n  containerRef: React.RefObject<HTMLDivElement>;\n  groupedSongList: SongGroup[];\n  selectSong: (songIndex: number) => void;\n}\n\nexport default function SongGroupsNavigation({ groupedSongList, containerRef, selectSong }: Props) {\n  const [activeGroups, setActiveGroups] = useState<string[]>([]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          const id = entry.target.getAttribute('data-group-letter')!;\n\n          if (entry.isIntersecting) {\n            setActiveGroups((current) => [...current, id]);\n          } else {\n            setActiveGroups((current) => current.filter((group) => group !== id));\n          }\n        });\n      },\n      { threshold: 0.05 },\n    );\n    groupedSongList.forEach((group) => {\n      const element = document.querySelector(`[data-group-letter=\"${group.letter}\"]`);\n      if (element) {\n        observer.observe(element);\n      }\n    });\n    return () => {\n      observer.disconnect();\n      setActiveGroups([]);\n    };\n  }, [groupedSongList]);\n\n  const scrollToGroup = (group: SongGroup) => {\n    selectSong(group.songs[0].index);\n\n    // wait for the song to be selected and scrolled into view - then override the scroll and scroll to the group instead\n    setTimeout(() => {\n      const element = document.querySelector(`[data-group-letter=\"${group.letter}\"]`);\n      if (element && containerRef.current) {\n        // calculate 10rem offset from top\n        const offset = 10 * parseFloat(getComputedStyle(document.documentElement).fontSize);\n\n        const topPos = element.getBoundingClientRect().top + containerRef.current.scrollTop - offset;\n        containerRef.current.scrollTo({ top: topPos, behavior: 'smooth' });\n      }\n    }, 20);\n  };\n\n  return (\n    <>\n      <Container>\n        {groupedSongList.map((group) => {\n          const active = activeGroups.includes(group.letter);\n          return (\n            <SongsGroupButton\n              key={group.letter}\n              active={active}\n              onClick={() => scrollToGroup(group)}\n              data-active={active}\n              data-test={`group-navigation-${group.letter}`}>\n              {group.letter}\n            </SongsGroupButton>\n          );\n        })}\n      </Container>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  position: fixed;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  top: 0;\n  left: 6.5rem;\n  padding: 1rem 0 1.5rem 2rem;\n  width: 100%;\n  z-index: 100;\n  gap: 1rem;\n  background: rgba(0, 0, 0, 0.8);\n`;\n\nconst SongsGroupButton = styled(Button)<{ active: boolean }>`\n  border: none;\n  cursor: pointer;\n  ${typography};\n  display: inline-block;\n  padding: 0.5rem 1.25rem;\n  font-size: 3.5rem;\n  z-index: 1;\n  color: ${styles.colors.text.default};\n  background: ${(props) => (props.active ? styles.colors.lines.star.stroke : 'rgba(0, 0, 0, 0.7)')};\n`;\n","import styled from '@emotion/styled';\nimport SwapHorizIcon from '@mui/icons-material/SwapHoriz';\nimport { Button } from 'Elements/Button';\nimport { nextIndex, nextValue, Switcher } from 'Elements/Switcher';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { GAME_MODE, SingSetup, SongPreview } from 'interfaces';\nimport createPersistedState from 'use-persisted-state';\nimport { ValuesType } from 'utility-types';\nimport isDev from 'utils/isDev';\nimport { v4 } from 'uuid';\n\ninterface Props {\n  songPreview: SongPreview;\n  onNextStep: (setup: SingSetup) => void;\n  keyboardControl: boolean;\n  onExitKeyboardControl: () => void;\n}\n\nconst gameModeNames = {\n  [GAME_MODE.DUEL]: 'Duel',\n  [GAME_MODE.PASS_THE_MIC]: 'Pass The Mic',\n  [GAME_MODE.CO_OP]: 'Cooperation',\n};\n\nconst difficultyNames = ['Hard', 'Medium', 'Easy'];\n\nif (isDev()) {\n  difficultyNames.push('Debug 4');\n  difficultyNames.push('Debug 5');\n  difficultyNames.push('Debug 6');\n}\n\n// added -v3 to the key as the value to handle default selection if it wasnt changed\nconst useSetGameMode = createPersistedState<ValuesType<typeof GAME_MODE> | null>('song_settings-game_mode-v3');\nconst useSetTolerance = createPersistedState<number>('song_settings-tolerance-v2');\n\nexport default function GameSettings({ songPreview, onNextStep, keyboardControl, onExitKeyboardControl }: Props) {\n  const [rememberedMode, setMode] = useSetGameMode(null);\n  const mode = rememberedMode ?? (songPreview.tracksCount > 1 ? GAME_MODE.CO_OP : GAME_MODE.DUEL);\n  const [tolerance, setTolerance] = useSetTolerance(1);\n\n  const handleNextButton = () => {\n    const singSetup = {\n      id: v4(),\n      players: [],\n      mode,\n      tolerance: tolerance + 1,\n    };\n    onNextStep(singSetup);\n  };\n\n  const changeMode = () => {\n    setMode(nextValue(Object.values(GAME_MODE), mode));\n  };\n\n  const changeTolerance = () => setTolerance((current) => nextIndex(difficultyNames, current, -1));\n\n  const { register } = useKeyboardNav({ enabled: keyboardControl, onBackspace: onExitKeyboardControl });\n\n  return (\n    <>\n      <GSSwitcher\n        {...register('difficulty-setting', changeTolerance, 'Change difficulty')}\n        label=\"Difficulty\"\n        value={difficultyNames[tolerance]}\n        data-test-value={difficultyNames[tolerance]}\n      />\n      <GSSwitcher\n        {...register('game-mode-setting', changeMode, 'Change mode')}\n        label=\"Mode\"\n        value={gameModeNames[mode]}\n        data-test-value={gameModeNames[mode]}\n      />\n      <ModeDescription>\n        {mode === GAME_MODE.DUEL && 'Face off against each other - person that earns more points wins.'}\n        {mode === GAME_MODE.CO_OP && 'Join forces and sing together - your points will be added up to a single pool.'}\n        {mode === GAME_MODE.PASS_THE_MIC && (\n          <>\n            For more than 2 players - split into groups and pass the microphone within the group when prompted with{' '}\n            <SwapHorizIcon /> symbol.\n          </>\n        )}\n      </ModeDescription>\n      <PlayButton {...register('next-step-button', handleNextButton, undefined, true)}>Next ➤</PlayButton>\n    </>\n  );\n}\n\nconst PlayButton = styled(Button)`\n  padding: 0.5rem 9rem;\n  font-size: 4.3rem;\n  width: 50rem;\n`;\n\nconst ModeDescription = styled.h3`\n  max-width: 50rem;\n  margin: -1rem 0 1rem !important;\n  padding: 1.5rem;\n  background: rgba(0, 0, 0, 0.7);\n  box-sizing: border-box;\n`;\n\nconst GSSwitcher = styled(Switcher)`\n  font-size: 4.3rem;\n  padding: 1rem;\n  min-width: 50rem;\n  box-sizing: border-box;\n`;\n","import styled from '@emotion/styled';\nimport { Warning } from '@mui/icons-material';\nimport events from 'GameEvents/GameEvents';\nimport { useEventListenerSelector } from 'GameEvents/hooks';\nimport PlayersManager from 'Players/PlayersManager';\nimport usePlayerMic from 'hooks/players/usePlayerMic';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nexport default function NoiseDetection() {\n  const inputs = useEventListenerSelector(events.playerInputChanged, () => PlayersManager.getInputs());\n  const isBuiltIn = inputs.some((input) => input.source === 'Microphone');\n\n  const measures = useRef<Array<[number, number]>>([]);\n  const handleMeasure = useCallback((data: [number, number]) => {\n    measures.current.push(data);\n  }, []);\n\n  usePlayerMic(0, 50, handleMeasure);\n\n  const [noiseDetected, setNoiseDetected] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(\n      () => {\n        const noDetection = measures.current.filter(([, freq]) => freq === 0);\n        const detection = measures.current.filter(([, freq]) => freq > 0);\n        const avgNoDetectionVolume = noDetection.reduce((acc, [volume]) => acc + volume, 0) / (noDetection.length + 1);\n        const avgDetectionVolume = detection.reduce((acc, [volume]) => acc + volume, 0) / (detection.length + 1);\n\n        // The logic is that if the singing measures and non-singing measures have similar volume, then there's\n        // something playing in the background that is picked up as singing. If someone is singing into the mic\n        // the non-singing measures are usually quiet compared to singing measures.\n        const isNoisy =\n          detection.length > noDetection.length * 0.1 &&\n          avgDetectionVolume > 0.01 &&\n          avgNoDetectionVolume > 0.01 &&\n          avgDetectionVolume - avgNoDetectionVolume < avgNoDetectionVolume / 2;\n\n        setNoiseDetected(isNoisy);\n        measures.current.length = 0;\n      },\n      noiseDetected ? 5000 : 2500,\n    );\n\n    return () => clearInterval(interval);\n  }, [noiseDetected]);\n\n  return (\n    <NoiseWarningContainer visible={noiseDetected}>\n      <h2>\n        <strong>\n          <Warning />\n        </strong>{' '}\n        Noise detected\n      </h2>\n      <hr />\n      <h4>\n        This might make singing inaccurate. Make sure your microphone doesn't pick up the music.{' '}\n        {isBuiltIn && (\n          <>\n            Alternatively, use your <strong>smartphone as a microphone</strong> instead.\n          </>\n        )}\n      </h4>\n    </NoiseWarningContainer>\n  );\n}\n\nconst NoiseWarningContainer = styled.div<{ visible: boolean }>`\n  opacity: ${(props) => (props.visible ? 1 : 0)};\n  transition: 300ms;\n  background: rgba(0, 0, 0, 0.75);\n  padding: 1rem;\n  max-width: 50rem;\n  position: relative;\n  top: -1rem;\n  left: -0.5rem;\n`;\n","import styled from '@emotion/styled';\nimport { PlayerMicCheck } from 'Elements/VolumeIndicator';\nimport { PlayerEntity } from 'Players/PlayersManager';\nimport Ping from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/Ping';\nimport PlayerStatus from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/Status';\nimport usePlayerMicStatus from 'hooks/players/usePlayerMicStatus';\n\ninterface Props {\n  player: PlayerEntity;\n}\nexport default function SinglePlayer({ player }: Props) {\n  const status = usePlayerMicStatus(player.number);\n\n  return (\n    <Indicator key={player.number} data-test={`indicator-player-${player.number}`}>\n      <Ping playerNumber={player.number} />\n      <PlayerStatus status={status} />\n      {status !== 'unavailable' && <PlayerMicCheck playerNumber={player.number} />}\n      <PlayerName className=\"ph-no-capture\">{player.getName()}</PlayerName>\n    </Indicator>\n  );\n}\n\nconst Indicator = styled.div`\n  position: relative;\n  border: 0.1rem solid white;\n  padding: 1rem 3rem;\n  background: black;\n  width: 80%;\n\n  text-align: center;\n  gap: 1.25rem;\n  font-size: 2.3rem;\n  color: white;\n\n  -webkit-text-stroke: 1px black;\n`;\n\nconst PlayerName = styled.span`\n  position: relative;\n  z-index: 1;\n`;\n","import styled from '@emotion/styled';\nimport { typography } from 'Elements/cssMixins';\nimport events from 'GameEvents/GameEvents';\nimport { useEventListener, useEventListenerSelector } from 'GameEvents/hooks';\nimport PlayersManager from 'Players/PlayersManager';\nimport InputManager from 'Scenes/Game/Singing/Input/InputManager';\nimport NoiseDetection from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/NoiseDetection';\nimport SinglePlayer from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/SinglePlayer';\nimport { ComponentProps, useEffect } from 'react';\n\nexport default function MicCheck(props: ComponentProps<typeof Container>) {\n  // Force update when the name changes\n  useEventListener(events.playerNameChanged);\n\n  useEffect(() => {\n    InputManager.startMonitoring();\n  }, []);\n\n  const inputs = useEventListenerSelector(events.playerInputChanged, () => PlayersManager.getInputs());\n  const isSetup = inputs.some((input) => input.source !== 'Dummy');\n\n  return (\n    <Container {...props}>\n      <MicChecksContainer>\n        Microphone Check\n        {isSetup ? (\n          PlayersManager.getPlayers().map((player) => <SinglePlayer key={player.number} player={player} />)\n        ) : (\n          <>\n            <Indicator>Mic not setup</Indicator>\n            <h4>Singing will be emulated</h4>\n            <h5>You can setup in the Next step</h5>\n          </>\n        )}\n      </MicChecksContainer>\n      <NoiseDetection />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  font-size: 3rem;\n  ${typography};\n  margin-bottom: 8.6rem;\n  gap: 3.5rem;\n`;\n\nconst MicChecksContainer = styled.div`\n  gap: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Indicator = styled.div`\n  position: relative;\n  border: 0.1rem solid white;\n  padding: 1rem 3rem;\n  background: black;\n  width: 80%;\n\n  text-align: center;\n  gap: 1.25rem;\n  font-size: 2.3rem;\n  color: white;\n`;\n","import styled from '@emotion/styled';\nimport { typography } from 'Elements/cssMixins';\nimport { Input } from 'Elements/Input';\nimport { nextIndex } from 'Elements/Switcher';\nimport {\n  ComponentProps,\n  ForwardedRef,\n  forwardRef,\n  KeyboardEventHandler,\n  ReactNode,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\n\ninterface Props extends ComponentProps<typeof Input> {\n  label: ReactNode;\n  value: string;\n  onChange: (value: string) => void;\n  disabled?: boolean;\n  options: string[];\n  placeholder?: string;\n  keyboardNavigationChangeFocus?: (direction: -1 | 1) => void;\n  onBlur?: () => void;\n  className?: string;\n}\n\nexport const Autocomplete = forwardRef(\n  (\n    {\n      options,\n      focused,\n      label,\n      value,\n      onChange,\n      disabled,\n      placeholder,\n      keyboardNavigationChangeFocus,\n      onBlur,\n      className,\n      ...restProps\n    }: Props,\n    forwardedRef: ForwardedRef<HTMLInputElement | null>,\n  ) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    useImperativeHandle(forwardedRef, () => inputRef.current!);\n\n    const autocompleteMenu = useRef<HTMLDivElement>(null);\n\n    const [isInputFocused, setIsInputFocused] = useState(false);\n    const [focusedOption, setFocusedOption] = useState(-1);\n\n    const filteredOptions = useMemo(\n      () =>\n        options.filter(\n          (option) => option.toLowerCase().trim().includes(value.toLowerCase().trim()) && option !== value,\n        ),\n      [options, value],\n    );\n\n    const handleKeyDown: KeyboardEventHandler<HTMLInputElement> = (e) => {\n      if (e.code === 'ArrowUp' || e.code === 'ArrowDown') {\n        if (filteredOptions.length) {\n          e.preventDefault();\n          const newIndex = nextIndex(filteredOptions, focusedOption, e.code === 'ArrowUp' ? -1 : 1);\n          setFocusedOption(newIndex);\n\n          const option = autocompleteMenu.current?.querySelector(`[data-index=\"${newIndex}\"]`) as HTMLDivElement;\n\n          option?.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        } else {\n          inputRef.current?.blur();\n          keyboardNavigationChangeFocus?.(e.code === 'ArrowUp' ? -1 : 1);\n        }\n      } else if (e.code === 'Enter') {\n        const option = filteredOptions[focusedOption];\n        if (option) {\n          setFocusedOption(-1);\n          onChange(option);\n        } else {\n          inputRef.current?.blur();\n        }\n      }\n    };\n\n    const handleBlur = () => {\n      setTimeout(() => {\n        setIsInputFocused(false);\n        onBlur?.();\n      }, 300);\n    };\n\n    return (\n      <Container className={className}>\n        <Input\n          onFocus={() => setIsInputFocused(true)}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          onChange={onChange}\n          value={value}\n          focused={focused}\n          label={label}\n          disabled={disabled}\n          ref={inputRef}\n          placeholder={placeholder}\n          {...restProps}\n        />\n        {isInputFocused && !!filteredOptions.length && (\n          <AutocompleteMenu ref={autocompleteMenu} role=\"listbox\">\n            {filteredOptions.map((option, index) => (\n              <AutocompleteMenuitem\n                role=\"listitem\"\n                data-index={index}\n                data-focused={index === focusedOption}\n                key={option}\n                focused={index === focusedOption}\n                onClick={() => {\n                  onChange(option);\n                  setFocusedOption(-1);\n                  inputRef.current?.blur();\n                }}>\n                {option}\n              </AutocompleteMenuitem>\n            ))}\n          </AutocompleteMenu>\n        )}\n      </Container>\n    );\n  },\n);\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst AutocompleteMenu = styled.div`\n  margin-top: 0.1em;\n  position: absolute;\n  width: 100%;\n  background: black;\n  max-height: ${(1 + 2 * 0.3) * 4}em;\n  overflow-y: auto;\n  z-index: 2;\n`;\n\nconst AutocompleteMenuitem = styled.div<{ focused: boolean }>`\n  ${typography};\n  padding: 0.3em;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: ${(props) => (props.focused ? styles.colors.text.active : 'white')};\n  cursor: pointer;\n`;\n\ninterface TestWrapperProps {\n  label: string;\n  options: string[];\n  focused: boolean;\n}\n\nexport const AutocompleteTestWrapper = ({ label, options, focused }: TestWrapperProps) => {\n  const [value, setValue] = useState('');\n  return <Autocomplete value={value} onChange={setValue} label={label} options={options} focused={focused} />;\n};\n","import styled from '@emotion/styled';\nimport { Autocomplete } from 'Elements/Autocomplete';\nimport { Switcher } from 'Elements/Switcher';\nimport events from 'GameEvents/GameEvents';\nimport { useEventListener } from 'GameEvents/hooks';\nimport { PlayerEntity } from 'Players/PlayersManager';\nimport { MAX_NAME_LENGTH } from 'consts';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { PlayerSetup, SongPreview } from 'interfaces';\nimport { useRef, useState } from 'react';\n\ninterface Props {\n  multipleTracks: boolean;\n  player: PlayerEntity | undefined;\n  songPreview: SongPreview;\n  onChange: (setup: PlayerSetup) => void;\n  setup: PlayerSetup;\n  playerNames: string[];\n  register: ReturnType<typeof useKeyboardNav>['register'];\n}\n\nconst getTrackName = (tracks: SongPreview['tracks'], index: number) => tracks[index]?.name ?? `Track ${index + 1}`;\n\nexport default function SinglePlayer({\n  multipleTracks,\n  player,\n  songPreview,\n  playerNames,\n  register,\n  onChange,\n  setup,\n}: Props) {\n  const [inputTouched, setInputTouched] = useState(false);\n  const nameRef = useRef<HTMLInputElement | null>(null);\n  // Force update when the name changes\n  useEventListener(events.playerNameChanged);\n\n  if (player === undefined) {\n    return null;\n  }\n\n  const togglePlayerTrack = () =>\n    onChange({ number: player.number, track: (setup.track + 1) % songPreview.tracksCount });\n\n  const onNameChange = (newName: string) => {\n    setInputTouched(true);\n    player.setName(newName);\n  };\n\n  const isDefaultName = !inputTouched;\n  const currentName = player.getName();\n\n  return (\n    <>\n      <PlayerName\n        maxLength={MAX_NAME_LENGTH}\n        className=\"ph-no-capture\"\n        value={isDefaultName ? '' : currentName}\n        placeholder={isDefaultName ? currentName : undefined}\n        options={playerNames}\n        onChange={onNameChange}\n        label=\"Name:\"\n        ref={nameRef}\n        {...register(`player-${player.number}-name`, () => nameRef.current?.focus())}\n      />\n      {multipleTracks && (\n        <Track\n          {...register(`player-${player.number}-track-setting`, togglePlayerTrack, 'Change track')}\n          label=\"Track\"\n          value={getTrackName(songPreview.tracks, setup.track)}\n          data-test-value={setup.track + 1}\n        />\n      )}\n    </>\n  );\n}\n\nconst PlayerName = styled(Autocomplete)`\n  input {\n    font-size: 4.5rem;\n  }\n\n  [role='listbox'] {\n    max-height: ${6 * (4.5 + 0.3)}rem;\n  }\n`;\nconst Track = styled(Switcher)`\n  font-size: 4.5rem;\n  padding: 1.1rem;\n`;\n","import styled from '@emotion/styled';\nimport { Button } from 'Elements/Button';\nimport { typography } from 'Elements/cssMixins';\nimport gameEvents from 'GameEvents/GameEvents';\nimport { useEventEffect } from 'GameEvents/hooks';\nimport PlayersManager from 'Players/PlayersManager';\nimport InputManager from 'Scenes/Game/Singing/Input/InputManager';\nimport SelectInputModal from 'Scenes/SelectInput/SelectInputModal';\nimport { MicSetupPreferenceSetting, MobilePhoneModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport SinglePlayer from 'Scenes/SingASong/SongSelection/Components/SongSettings/PlayerSettings/SinglePlayer';\nimport { PLAYER_NAMES_SESSION_STORAGE_KEY } from 'hooks/players/consts';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { PlayerSetup, SongPreview } from 'interfaces';\nimport { useEffect, useMemo, useState } from 'react';\n\ninterface Props {\n  songPreview: SongPreview;\n  onNextStep: (players: PlayerSetup[]) => void;\n  keyboardControl: boolean;\n  onExitKeyboardControl: () => void;\n}\n\nexport default function PlayerSettings({ songPreview, onNextStep, keyboardControl, onExitKeyboardControl }: Props) {\n  const [mobilePhoneMode] = useSettingValue(MobilePhoneModeSetting);\n  const [storedPreference] = useSettingValue(MicSetupPreferenceSetting);\n\n  const players = PlayersManager.getPlayers();\n  const multipleTracks = !mobilePhoneMode && players.length === 2 && songPreview.tracksCount > 1;\n  const initialisePlayerSetup = () =>\n    players.map((player, index) => ({\n      number: player.number,\n      track: multipleTracks ? Math.min(index, songPreview.tracksCount - 1) : 0,\n    }));\n  const [playerSetup, setPlayerSetup] = useState<PlayerSetup[]>(initialisePlayerSetup());\n\n  useEventEffect([gameEvents.playerAdded, gameEvents.playerRemoved], () => setPlayerSetup(initialisePlayerSetup()));\n\n  const playerList = players.map(\n    (player, index) => playerSetup.find((setup) => setup.number === player.number) ?? initialisePlayerSetup()[index],\n  );\n\n  const playerNames = useMemo<string[]>(\n    () => JSON.parse(sessionStorage.getItem(PLAYER_NAMES_SESSION_STORAGE_KEY)!) ?? [],\n    [],\n  );\n\n  const updatePlayer = (playerNumber: number) => (newSetup: PlayerSetup) => {\n    setPlayerSetup((current) => current.map((setup) => (setup.number === playerNumber ? newSetup : setup)));\n  };\n\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!showModal) {\n      InputManager.startMonitoring();\n    }\n  }, [showModal]);\n\n  const { register, focusElement } = useKeyboardNav({\n    enabled: keyboardControl && !showModal,\n    onBackspace: onExitKeyboardControl,\n  });\n\n  const startSong = () => {\n    onNextStep(playerList);\n  };\n\n  const areInputsConfigured = !!storedPreference && storedPreference !== 'skip';\n\n  return (\n    <>\n      {showModal && (\n        <SelectInputModal\n          closeButtonText={areInputsConfigured ? 'Continue to the song' : 'Continue to player setup'}\n          onClose={() => {\n            setShowModal(false);\n\n            if (areInputsConfigured) {\n              focusElement('play');\n            }\n          }}\n        />\n      )}\n      {playerList.map((setup, index) => (\n        <PlayerSettingContainer key={setup.number}>\n          <PlayerSettingTitle>Player {index + 1}</PlayerSettingTitle>\n          <div>\n            <SinglePlayer\n              multipleTracks={multipleTracks}\n              player={PlayersManager.getPlayer(setup.number)}\n              setup={setup}\n              onChange={updatePlayer(setup.number)}\n              playerNames={playerNames}\n              register={register}\n              songPreview={songPreview}\n            />\n          </div>\n        </PlayerSettingContainer>\n      ))}\n      {areInputsConfigured && (\n        <PlayButton {...register('play-song-button', startSong, undefined, true)}>Play</PlayButton>\n      )}\n      <PlayButton {...register('select-inputs-button', () => setShowModal(true), undefined, false)}>\n        Setup mics\n      </PlayButton>\n    </>\n  );\n}\n\nconst PlayerSettingContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst PlayButton = styled(Button)<{ focused: boolean }>`\n  padding: 0.5rem 9rem;\n  font-size: 4.3rem;\n`;\n\nconst PlayerSettingTitle = styled.span`\n  ${typography};\n  padding: 1.3rem;\n  font-size: 4.5rem;\n`;\n","import styled from '@emotion/styled';\nimport events from 'GameEvents/GameEvents';\nimport GameSettings from 'Scenes/SingASong/SongSelection/Components/SongSettings/GameSettings';\nimport MicCheck from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck';\nimport PlayerSettings from 'Scenes/SingASong/SongSelection/Components/SongSettings/PlayerSettings';\nimport { PlayerSetup, SingSetup, SongPreview } from 'interfaces';\nimport { useState } from 'react';\n\ninterface Props {\n  songPreview: SongPreview;\n  onPlay: (setup: SingSetup & { song: SongPreview }) => void;\n  keyboardControl: boolean;\n  onExitKeyboardControl: () => void;\n}\n\nexport default function SongSettings({ songPreview, onPlay, keyboardControl, onExitKeyboardControl }: Props) {\n  const [singSetup, setSingSetup] = useState<SingSetup | null>(null);\n  const [step, setStep] = useState<'song' | 'players'>('song');\n\n  const onSongStepFinish = (setup: SingSetup) => {\n    setSingSetup(setup);\n    setStep('players');\n  };\n  const startSong = (players: PlayerSetup[]) => {\n    if (!singSetup) return;\n    const finalSetup = {\n      ...singSetup,\n      players: players,\n    };\n    events.songStarted.dispatch(songPreview, finalSetup);\n    onPlay({ song: songPreview, ...finalSetup });\n  };\n  return (\n    <Container>\n      <MicCheck style={step === 'players' ? { viewTransitionName: 'player-mic-check-container' } : undefined} />\n      <GameConfiguration>\n        {step === 'song' && (\n          <GameSettings\n            songPreview={songPreview}\n            onNextStep={onSongStepFinish}\n            keyboardControl={keyboardControl}\n            onExitKeyboardControl={onExitKeyboardControl}\n          />\n        )}\n        {step === 'players' && (\n          <PlayerSettings\n            songPreview={songPreview}\n            onNextStep={startSong}\n            keyboardControl={keyboardControl}\n            onExitKeyboardControl={() => setStep('song')}\n          />\n        )}\n      </GameConfiguration>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: space-between;\n  width: 100%;\n\n  hr {\n    margin: 1rem;\n    opacity: 0.25;\n  }\n`;\n\nconst GameConfiguration = styled.div`\n  width: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 1.25rem;\n`;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { useBackground } from 'Elements/LayoutWithBackground';\nimport VideoPlayer, { VideoPlayerRef, VideoState } from 'Elements/VideoPlayer';\nimport { ChristmasModeSetting, GraphicSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport {\n  ExpandedData,\n  FinalSongCard,\n  SongListEntryDetailsArtist,\n  SongListEntryDetailsTitle,\n} from 'Scenes/SingASong/SongSelection/Components/SongCard';\nimport SongSettings from 'Scenes/SingASong/SongSelection/Components/SongSettings';\nimport isChristmasSong from 'Songs/utils/isChristmasSong';\nimport useDebounce from 'hooks/useDebounce';\nimport useViewportSize from 'hooks/useViewportSize';\nimport { SingSetup, SongPreview } from 'interfaces';\nimport { ComponentProps, PropsWithChildren, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\n\ninterface Props {\n  songPreview: SongPreview;\n  onPlay: (setup: SingSetup & { song: SongPreview }) => void;\n  keyboardControl: boolean;\n  onExitKeyboardControl: () => void;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  focusEffect: boolean;\n}\n\nconst PREVIEW_LENGTH = 30;\n\nconst useChristmasSongTheme = (songPreview: SongPreview) => {\n  const [christmasMode, setChristmasMode] = useSettingValue(ChristmasModeSetting);\n  const christmasSong = isChristmasSong(songPreview);\n  useBackground(true, christmasSong);\n\n  useEffect(() => {\n    if (christmasSong) {\n      setChristmasMode(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!christmasMode && christmasSong) {\n      setChristmasMode(true);\n    } else if (christmasMode && !christmasSong) {\n      setChristmasMode(false);\n    }\n  }, [christmasMode, songPreview]);\n};\n\nexport default function SongPreviewComponent({\n  songPreview,\n  top,\n  left,\n  width,\n  height,\n  keyboardControl,\n  onExitKeyboardControl,\n  onPlay,\n  focusEffect,\n}: Props) {\n  const [showVideo, setShowVideo] = useState(false);\n  const player = useRef<VideoPlayerRef | null>(null);\n  const { width: windowWidth, height: windowHeight } = useViewportSize();\n  // useChristmasSongTheme(songPreview);\n\n  const expanded = keyboardControl;\n\n  // need to use layout effect otherwise newly selected song name is displayed briefly before the element is removed\n  useLayoutEffect(() => {\n    setShowVideo(false);\n  }, [songPreview.video]);\n\n  const start = songPreview.previewStart ?? (songPreview.videoGap ?? 0) + 60;\n  const end = songPreview.previewEnd ?? start + PREVIEW_LENGTH;\n  const undebounced = useMemo(\n    () => [songPreview.video, start, end, songPreview.volume] as const,\n    [songPreview.video, start, end, songPreview.volume],\n  );\n  const [videoId, previewStart, previewEnd, volume] = useDebounce(undebounced, 350);\n\n  useEffect(() => {\n    player.current?.loadVideoById({\n      videoId: videoId,\n      startSeconds: previewStart,\n      endSeconds: previewEnd,\n    });\n  }, [videoId, player, previewStart, previewEnd]);\n\n  const videoWidth = expanded ? windowWidth : width;\n  const videoHeight = expanded ? windowHeight : height;\n\n  const finalHeight = expanded ? Math.min((windowWidth! / 20) * 9, windowHeight! * (4 / 5)) : height;\n\n  useEffect(() => {\n    player.current?.setSize(videoWidth, videoHeight);\n  }, [videoWidth, videoHeight, keyboardControl]);\n\n  return (\n    <>\n      {expanded && <Backdrop onClick={onExitKeyboardControl} />}\n      {!expanded && showVideo && (\n        <SongBPMIndicator width={videoWidth} height={videoHeight} left={left} top={top} song={songPreview} />\n      )}\n      <SongPreviewContainer\n        background={expanded || showVideo}\n        video={\n          <Video show={showVideo} expanded={expanded} height={finalHeight} id=\"preview-video-container\">\n            <VideoPlayer\n              width={0}\n              height={0}\n              disablekb\n              ref={player}\n              video={''}\n              volume={volume}\n              onStateChange={(state) => {\n                if (state === VideoState.ENDED) {\n                  player.current?.seekTo(start);\n                  player.current?.playVideo();\n                } else if (state === VideoState.PLAYING) {\n                  setShowVideo(true);\n                }\n              }}\n            />\n          </Video>\n        }\n        focused\n        song={songPreview}\n        top={top}\n        left={left}\n        width={videoWidth}\n        height={finalHeight}\n        showVideo={showVideo}\n        expanded={expanded}\n        data-test=\"song-preview\"\n        data-song={songPreview.id}>\n        <Content expanded={expanded}>\n          {expanded && (\n            <SongSettings\n              songPreview={songPreview}\n              onPlay={onPlay}\n              keyboardControl={keyboardControl}\n              onExitKeyboardControl={onExitKeyboardControl}\n            />\n          )}\n        </Content>\n      </SongPreviewContainer>\n    </>\n  );\n}\n\nconst BaseSongPreviewContainer = styled(FinalSongCard)<{\n  width: number;\n  height: number;\n  expanded: boolean;\n  showVideo: boolean;\n}>`\n  --preview-padding: 5rem;\n  width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n  position: absolute;\n  z-index: ${(props) => (props.expanded ? 201 : 3)};\n  overflow: hidden;\n  visibility: ${(props) => (props.expanded || props.showVideo ? 'visible' : 'hidden')};\n\n  ${(props) =>\n    props.expanded\n      ? css`\n          border: 0;\n          border-radius: 0;\n          position: fixed;\n\n          padding: var(--preview-padding);\n        `\n      : css`\n          pointer-events: none;\n          ${props.showVideo && props.theme.graphicSetting === 'high'\n            ? 'animation: rhythmPulse 1s infinite'\n            : 'scale: 1.2'};\n        `};\n\n  @keyframes rhythmPulse {\n    0% {\n      transform: scale(1.2);\n    }\n    15% {\n      transform: scale(1.25);\n    }\n    100% {\n      transform: scale(1.2);\n    }\n  }\n  view-transition-name: song-preview;\n\n  ${SongListEntryDetailsArtist} {\n    view-transition-name: song-preview-artist;\n  }\n\n  ${SongListEntryDetailsTitle} {\n    view-transition-name: song-preview-title;\n  }\n\n  ${ExpandedData} {\n    view-transition-name: song-preview-expanded-data;\n  }\n`;\n\ninterface SongPreviewContainerProps\n  extends ComponentProps<typeof BaseSongPreviewContainer>,\n    PropsWithChildren<{\n      top: number;\n      left: number;\n      song: SongPreview;\n    }> {}\n\nconst SongPreviewContainer = (props: SongPreviewContainerProps) => {\n  const realBpm = props.song.realBpm ?? (props.song.bpm > 300 ? props.song.bpm / 4 : props.song.bpm / 2);\n\n  return (\n    <BaseSongPreviewContainer\n      style={{\n        top: props.expanded ? `calc(50vh - ${props.height}px / 2)` : props.top,\n        left: props.expanded ? 0 : props.left,\n        animationDuration: `${60 / realBpm}s`,\n      }}\n      {...props}\n    />\n  );\n};\n\nconst Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.8);\n  width: 100vw;\n  height: 100vh;\n  z-index: 201;\n`;\n\nconst Video = styled.div<{ show: boolean; expanded: boolean; height: number }>`\n  ${(props) =>\n    props.expanded\n      ? css`\n          position: fixed;\n          inset: 0;\n          clip-path: inset(calc((100vh - ${props.height}px) / 2) 0);\n        `\n      : css`\n          position: absolute;\n          top: 0;\n          left: 0;\n          background-image: none !important;\n          border-radius: 0.5rem;\n        `}\n\n  div {\n    opacity: ${({ show }) => (show ? 1 : 0)};\n    transition: ${({ show, expanded }) => (show || expanded ? 1000 : 0)}ms;\n  }\n`;\n\nconst Content = styled.div<{ expanded: boolean }>`\n  inset: auto var(--preview-padding);\n  position: fixed; /* makes sure Autocomplete dropdown doesn't get clipped */\n  z-index: 100;\n  ${(props) => !props.expanded && `transform: scale(0.1);`}\n\n  border-radius: 0.5rem;\n\n  view-transition-name: song-preview-content;\n`;\n\nconst BaseSongBPMIndicator = styled.div<{ width: number; height: number }>`\n  background: white;\n  width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n  z-index: 2;\n  top: 0;\n  left: 0;\n  position: absolute;\n  animation: bpm 1s infinite;\n  border-radius: 0.5rem;\n  pointer-events: none;\n\n  @keyframes bpm {\n    0% {\n      transform: scale(1.15);\n      opacity: 1;\n    }\n    100% {\n      transform: scale(1.45);\n      opacity: 0;\n    }\n  }\n`;\n\nconst SongBPMIndicator = (\n  props: {\n    top: number;\n    left: number;\n    song: SongPreview;\n  } & ComponentProps<typeof BaseSongBPMIndicator>,\n) => {\n  const [graphicSetting] = useSettingValue(GraphicSetting);\n\n  if (graphicSetting === 'low') return null;\n\n  const realBpm = props.song.realBpm ?? (props.song.bpm > 300 ? props.song.bpm / 4 : props.song.bpm / 2);\n  return (\n    <BaseSongBPMIndicator\n      width={props.width}\n      height={props.height}\n      style={{\n        left: props.left,\n        top: props.top,\n        animationDuration: `${60 / realBpm}s`,\n      }}\n    />\n  );\n};\n","import { useLanguageList } from 'Scenes/ExcludeLanguages/ExcludeLanguagesView';\nimport { AppliedFilters } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport dayjs from 'dayjs';\nimport { SongPreview } from 'interfaces';\nimport { ReactNode, useMemo } from 'react';\n\nexport interface PlaylistEntry {\n  name: string;\n  display?: ReactNode;\n  filters: AppliedFilters;\n}\n\nexport const usePlaylists = (songs: SongPreview[]): PlaylistEntry[] => {\n  const songLanguages = useLanguageList(songs);\n  return useMemo(\n    () =>\n      [\n        { name: 'All', filters: {} },\n        // {\n        //   name: 'Christmas',\n        //   display: (\n        //     <>\n        //       <span style={{ color: colorSets.christmasRed.text }}>Chris</span>\n        //       <span style={{ color: colorSets.christmasGreen.text }}>tmas</span> 🎄\n        //     </>\n        //   ),\n        //   filters: { edition: 'christmas' },\n        // },\n        songLanguages[0]\n          ? ({\n              name: songLanguages[0].name,\n              filters: { language: songLanguages[0].name },\n            } as PlaylistEntry)\n          : null,\n        songLanguages[1]\n          ? {\n              name: songLanguages[1].name,\n              filters: { language: songLanguages[1].name },\n            }\n          : null,\n        { name: 'Classics', filters: { yearBefore: 1995 } },\n        { name: 'Modern', filters: { yearAfter: 1995 } },\n        { name: 'Duets', filters: { duet: true } },\n        {\n          name: 'New',\n          filters: { updatedAfter: dayjs().subtract(31, 'days').toISOString() },\n        },\n      ].filter((playlist): playlist is PlaylistEntry => playlist !== null),\n    [songLanguages],\n  );\n};\n","import { captureException } from '@sentry/react';\nimport { ExcludedLanguagesSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport { usePlaylists } from 'Scenes/SingASong/SongSelection/Hooks/usePlaylists';\nimport useSongIndex from 'Songs/hooks/useSongIndex';\nimport dayjs from 'dayjs';\nimport { SongPreview } from 'interfaces';\nimport { useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport clearString from 'utils/clearString';\n\nexport interface SongGroup {\n  letter: string;\n  songs: Array<{ index: number; song: SongPreview }>;\n  isNew?: boolean;\n}\n\nexport interface AppliedFilters {\n  yearBefore?: number;\n  yearAfter?: number;\n  language?: string;\n  excludeLanguages?: string[];\n  search?: string;\n  edition?: string;\n  updatedAfter?: string;\n  duet?: boolean | null;\n}\n\ntype FilterFunc = (songList: SongPreview[], ...args: any) => SongPreview[];\n\nconst filteringFunctions: Record<keyof AppliedFilters, FilterFunc> = {\n  language: (songList, language: string) => {\n    if (language === '') return songList;\n\n    return songList.filter((song) => {\n      const songLangs = Array.isArray(song.language) ? song.language : [song.language!];\n\n      return songLangs.includes(language);\n    });\n  },\n  excludeLanguages: (songList, languages: string[] = [], appliedFilters: AppliedFilters) => {\n    if (languages.length === 0 || clearString(appliedFilters?.search ?? '').length > 2) return songList;\n\n    return songList.filter((song) => {\n      const songLangs = Array.isArray(song.language) ? song.language : [song.language!];\n\n      return !songLangs.every((songLang) => languages.includes(songLang!));\n    });\n  },\n  search: (songList, search: string) => {\n    const cleanSearch = clearString(search);\n\n    return cleanSearch.length > 2 ? songList.filter((song) => song.search.includes(cleanSearch)) : songList;\n  },\n  duet: (songList, duet: boolean | null) => {\n    if (duet === null) return songList;\n\n    return songList.filter((song) => (duet ? song.tracksCount > 1 : song.tracksCount === 1));\n  },\n  yearBefore: (songList, yearBefore: number) => {\n    if (!yearBefore) return songList;\n\n    return songList.filter((song) => Number(song.year) < yearBefore);\n  },\n  yearAfter: (songList, yearAfter: number) => {\n    if (!yearAfter) return songList;\n\n    return songList.filter((song) => Number(song.year) >= yearAfter);\n  },\n  edition: (songList, edition: string) => {\n    const cleanEdition = clearString(edition);\n\n    return cleanEdition.length ? songList.filter((song) => clearString(song.edition ?? '') === edition) : songList;\n  },\n  updatedAfter: (songList, after: string) => {\n    if (!after) return songList;\n    const dateAfter = dayjs(after);\n\n    return songList.filter((song) => song.lastUpdate && dayjs(song.lastUpdate).isAfter(dateAfter));\n  },\n};\n\nconst applyFilters = (list: SongPreview[], appliedFilters: AppliedFilters): SongPreview[] => {\n  return Object.entries(appliedFilters)\n    .filter((filters): filters is [keyof AppliedFilters, FilterFunc] => filters[0] in filteringFunctions)\n    .reduce((songList, [name, value]) => filteringFunctions[name](songList, value, appliedFilters), list);\n};\n\nexport const useSongListFilter = (list: SongPreview[]) => {\n  const [excludedLanguages] = useSettingValue(ExcludedLanguagesSetting);\n  const prefilteredList = useMemo(\n    () => applyFilters(list, { excludeLanguages: excludedLanguages ?? [] }),\n    [list, excludedLanguages],\n  );\n\n  const playlists = usePlaylists(prefilteredList);\n  const [selectedPlaylist, setSelectedPlaylist] = useState<string | null>(\n    new URLSearchParams(window.location.search).get('playlist') ?? null,\n  );\n\n  const [filters, setFilters] = useState<AppliedFilters>({});\n\n  useEffect(() => {\n    setFilters({});\n  }, [selectedPlaylist]);\n\n  const deferredFilters = useDeferredValue(filters);\n\n  const playlistFilters = playlists.find((p) => p.name === selectedPlaylist)?.filters ?? null;\n\n  const filteredList = useMemo(\n    () =>\n      applyFilters(list, {\n        ...playlistFilters,\n        ...deferredFilters,\n        excludeLanguages: excludedLanguages ?? [],\n      }),\n    [list, deferredFilters, excludedLanguages, playlistFilters],\n  );\n\n  return { filters, filteredList, setFilters, selectedPlaylist, setSelectedPlaylist, playlists };\n};\n\nexport default function useSongList() {\n  const songList = useSongIndex();\n\n  const { filters, filteredList, setFilters, selectedPlaylist, setSelectedPlaylist, playlists } = useSongListFilter(\n    songList.data,\n  );\n\n  const groupedSongList = useMemo(() => {\n    if (filteredList.length === 0) return [];\n\n    const groups: SongGroup[] = [];\n\n    // a hack for !filters.edition - due to a bug where selecting a song will make it look selected for both\n    // new and regular entry in the list. On Christmas, where most of the songs are new, it looks weird.\n    // When the bug is fixed, this can be removed.\n    if (!filters.search && !filters.edition) {\n      const newSongs = filteredList.filter((song) => song.isNew);\n\n      if (newSongs.length && newSongs.length < 50) {\n        groups.push({\n          letter: 'New',\n          isNew: true,\n          songs: newSongs.map((song) => ({\n            song,\n            index: filteredList.indexOf(song),\n          })),\n        });\n      }\n    }\n\n    const nonAlphaRegex = /[^a-zA-Z]/;\n\n    filteredList.forEach((song, index) => {\n      try {\n        const firstCharacter =\n          isFinite(+song.artist[0]) || nonAlphaRegex.test(song.artist[0]) ? '0-9' : song.artist[0].toUpperCase();\n        let group = groups.find((group) => group.letter === firstCharacter);\n        if (!group) {\n          group = { letter: firstCharacter, songs: [] };\n          groups.push(group);\n        }\n\n        group.songs.push({ index: index, song });\n      } catch (e) {\n        console.error(e);\n        captureException(e);\n      }\n    });\n\n    return groups;\n  }, [filteredList, filters.search]);\n\n  return {\n    groupedSongList,\n    songList: filteredList,\n    filters,\n    setFilters,\n    isLoading: songList.isLoading,\n    selectedPlaylist,\n    setSelectedPlaylist,\n    playlists,\n  };\n}\n","import { randomInt } from 'utils/randomValue';\n\nconst MAX_REMEMBERED_SONGS_COUNT = 30;\nexport default function selectRandomSong(\n  songCount: number,\n  previouslySelectedSongs: number[],\n  maxRememberedCount = MAX_REMEMBERED_SONGS_COUNT,\n) {\n  let newIndex;\n  if (previouslySelectedSongs.length < songCount) {\n    const possibleOptions = [...Array(songCount).keys()].filter((id) => !previouslySelectedSongs.includes(id));\n\n    newIndex = possibleOptions[randomInt(0, possibleOptions.length - 1)];\n  } else {\n    newIndex = randomInt(0, songCount - 1);\n\n    previouslySelectedSongs.length = 0;\n  }\n\n  if (previouslySelectedSongs.length >= maxRememberedCount) {\n    previouslySelectedSongs.shift();\n  }\n  previouslySelectedSongs.push(newIndex);\n\n  return newIndex;\n}\n","import { HelpEntry } from 'Scenes/KeyboardHelp/Context';\nimport selectRandomSong from 'Scenes/SingASong/SongSelection/Hooks/selectRandomSong';\nimport { AppliedFilters, SongGroup } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport { menuBack, menuEnter, menuNavigate } from 'SoundManager';\nimport useKeyboard from 'hooks/useKeyboard';\nimport useKeyboardHelp from 'hooks/useKeyboardHelp';\nimport usePrevious from 'hooks/usePrevious';\nimport useSmoothNavigate from 'hooks/useSmoothNavigate';\nimport { chunk, throttle } from 'lodash-es';\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport tuple from 'utils/tuple';\n\nconst useTwoDimensionalNavigation = (groups: SongGroup[] = [], itemsPerRow: number) => {\n  const [cursorPosition, setCursorPosition] = useState<[number, number]>([0, 0]);\n  // const setCursorPosition = useCallback<Dispatch<SetStateAction<[number, number]>>>(\n  //   (action) => {\n  //     if (action instanceof Function) {\n  //       test((current) => {\n  //         const newPosition = action(current);\n  //         console.log('newPosition fnc', newPosition);\n  //         return newPosition;\n  //       });\n  //     } else {\n  //       console.log('newPosition', action);\n  //       test(action);\n  //     }\n  //   },\n  //   [test],\n  // );\n  const songIndexMatrix = useMemo(\n    () =>\n      groups\n        .map(({ songs }) =>\n          chunk(\n            songs.map((song) => song.index),\n            itemsPerRow,\n          ),\n        )\n        .flat(),\n    [groups],\n  );\n  const songGroupMatrix = useMemo(\n    () =>\n      groups\n        .map(({ songs, letter }) =>\n          chunk(\n            songs.map(() => letter),\n            itemsPerRow,\n          ),\n        )\n        .flat(),\n    [groups],\n  );\n  const previousMatrix = usePrevious(songIndexMatrix ?? []);\n\n  const isAtLastColumn = cursorPosition[0] === songIndexMatrix[cursorPosition[1]]?.length - 1;\n\n  const moveToSong = useCallback(\n    (songIndex: number) => {\n      const y = songIndexMatrix.findIndex((columns) => columns.includes(songIndex));\n      const x = songIndexMatrix[y]?.indexOf(songIndex);\n      if (x >= 0 && y >= 0) {\n        setCursorPosition([x ?? 0, y ?? 0]);\n      } else {\n        setCursorPosition([0, 0]);\n      }\n    },\n    [songIndexMatrix],\n  );\n\n  const positionToValue = <T>([x, y]: [number, number], matrix: T[][], def: T) => {\n    if (groups.length === 0) return def;\n    const row = matrix[y];\n    return row?.[x] ?? row?.at(-1) ?? matrix?.[0]?.[0] ?? def;\n  };\n  const positionToSongIndex = ([x, y]: [number, number], matrix: number[][] = songIndexMatrix) => {\n    return positionToValue([x, y], matrix, 0);\n  };\n  const positionToGroup = ([x, y]: [number, number], matrix: string[][] = songGroupMatrix) => {\n    return positionToValue([x, y], matrix, 'A');\n  };\n\n  useEffect(() => {\n    const previousFocusedSong = positionToSongIndex(cursorPosition, previousMatrix);\n    const currentFocusedSong = positionToSongIndex(cursorPosition, songIndexMatrix);\n    if (previousMatrix.length && previousFocusedSong !== currentFocusedSong) {\n      moveToSong(previousFocusedSong);\n    }\n  }, [cursorPosition, songIndexMatrix, previousMatrix, isAtLastColumn]);\n\n  const moveCursor = (plane: 'x' | 'y', delta: number) => {\n    menuNavigate.play();\n    setCursorPosition(([x, y]) => {\n      let newX = x;\n      let newY = y;\n      if (plane === 'y') {\n        newY = y + delta;\n      } else {\n        if (songIndexMatrix[y] === undefined) {\n          debugger;\n        }\n        const maxXInRow = songIndexMatrix[y].length - 1;\n        newX = Math.min(x, maxXInRow) + delta;\n        if (newX < 0) {\n          newY = (songIndexMatrix.length + y - 1) % songIndexMatrix.length;\n          newX = songIndexMatrix[newY].length - 1;\n        } else if (newX > maxXInRow) {\n          newY = y + 1;\n          newX = 0;\n        }\n      }\n      return [newX % itemsPerRow, (songIndexMatrix.length + newY) % songIndexMatrix.length];\n    });\n  };\n\n  const focusedSong = positionToSongIndex(cursorPosition);\n  const focusedGroup = positionToGroup(cursorPosition);\n\n  return tuple([focusedSong, focusedGroup, cursorPosition, moveCursor, moveToSong, isAtLastColumn]);\n};\n\nexport const useSongSelectionKeyboardNavigation = (\n  enabled: boolean,\n  groupedSongs: SongGroup[] = [],\n  onEnter: () => void,\n  songCount: number,\n  appliedFilters: AppliedFilters,\n  songsPerRow: number,\n) => {\n  const navigate = useSmoothNavigate();\n  // We need to record how user entered (from which \"side\") and how left and based on that update the selection.\n  // Eg if user was at the last column, entered playlists, and returned to the last column (by clicking left)\n  // then effectively the selection shouldn't change\n  const [showPlaylistsState, setShowPlaylistsState] = useState<[boolean, 'left' | 'right' | null]>([false, null]);\n  const previousPlaylistsState = usePrevious(showPlaylistsState);\n  const [arePlaylistsVisible, leavingKey] = showPlaylistsState;\n\n  const [focusedSong, focusedGroup, cursorPosition, moveCursor, moveToSong, isAtLastColumn] =\n    useTwoDimensionalNavigation(groupedSongs, songsPerRow);\n  const isAtFirstColumn = cursorPosition[0] === 0;\n\n  const handleEnter = () => {\n    menuEnter.play();\n    onEnter();\n  };\n\n  const [blockBack, setBlockBack] = useState(false);\n  const previousSearch = usePrevious(appliedFilters.search);\n  useLayoutEffect(() => {\n    if (previousSearch && !appliedFilters.search) {\n      setBlockBack(true);\n      const timeout = setTimeout(() => setBlockBack(false), 2_000);\n\n      return () => {\n        clearTimeout(timeout);\n        setBlockBack(false);\n      };\n    }\n  }, [appliedFilters.search]);\n\n  const handleBackspace = () => {\n    if (!blockBack && !appliedFilters.search) {\n      menuBack.play();\n      navigate('');\n    }\n  };\n\n  const navigateToGroup = useCallback(\n    throttle(\n      (direction: 1 | -1, currentGroup: number) => {\n        const nextGroupIndex = (groupedSongs.length + currentGroup + direction) % groupedSongs.length;\n\n        moveToSong(groupedSongs[nextGroupIndex].songs[0].index);\n        menuNavigate.play();\n      },\n      700,\n      { trailing: false },\n    ),\n    [groupedSongs],\n  );\n\n  const navigateVertically = (e: KeyboardEvent | undefined, direction: 1 | -1) => {\n    if (!e?.repeat) {\n      moveCursor('y', direction);\n    } else {\n      const currentlySelectedGroupIndex = groupedSongs.findIndex(\n        (group) => !!group.songs.find((song) => song.index === focusedSong),\n      );\n      navigateToGroup(direction, currentlySelectedGroupIndex);\n    }\n  };\n\n  const navigateHorizontally = (direction: 1 | -1, ignoreFilters = false) => {\n    // Disable navigation to filters by going right since the filters are on the left\n    // if (!ignoreFilters && direction === 1 && isAtLastColumn && !arePlaylistsVisible) {\n    //   setShowPlaylistsState([true, 'right']);\n    // } else\n    if (!ignoreFilters && direction === -1 && isAtFirstColumn && !arePlaylistsVisible) {\n      setShowPlaylistsState([true, 'left']);\n    } else {\n      moveCursor('x', direction);\n    }\n  };\n\n  const randomlySelectedSongs = useRef<number[]>([]);\n  const randomSong = () => {\n    const newIndex = selectRandomSong(songCount, randomlySelectedSongs.current);\n    moveToSong(newIndex);\n  };\n\n  useKeyboard(\n    {\n      accept: handleEnter,\n      down: (e) => navigateVertically(e, 1),\n      up: (e) => navigateVertically(e, -1),\n      left: () => navigateHorizontally(-1),\n      right: () => navigateHorizontally(1),\n      back: handleBackspace,\n      random: randomSong,\n    },\n    enabled && !arePlaylistsVisible,\n    [groupedSongs, cursorPosition, arePlaylistsVisible, appliedFilters, blockBack],\n  );\n\n  const help = useMemo<HelpEntry>(\n    () => ({\n      'horizontal-vertical': null,\n      accept: null,\n      back: null,\n      shiftR: null,\n      alphanumeric: null,\n      remote: ['search'],\n    }),\n    [],\n  );\n  useKeyboardHelp(help, enabled);\n\n  const closePlaylist = useCallback(\n    (leavingKey: 'left' | 'right') => {\n      setShowPlaylistsState([false, leavingKey]);\n      // if (leavingKey === 'right') navigateHorizontally(1);\n    },\n    [setShowPlaylistsState, navigateHorizontally, groupedSongs, cursorPosition],\n  );\n\n  useLayoutEffect(() => {\n    const [previousShowFilters, enteringKey] = previousPlaylistsState;\n    if (previousShowFilters && !arePlaylistsVisible) {\n      if (enteringKey === leavingKey) navigateHorizontally(leavingKey === 'right' ? 1 : -1, true);\n    }\n  }, [arePlaylistsVisible, leavingKey, isAtFirstColumn, isAtLastColumn, ...cursorPosition]);\n\n  return tuple([focusedSong, focusedGroup, moveToSong, arePlaylistsVisible, closePlaylist, randomSong]);\n};\n","import useSongList from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport { useSongSelectionKeyboardNavigation } from 'Scenes/SingASong/SongSelection/Hooks/useSongSelectionKeyboardNavigation';\nimport { woosh } from 'SoundManager';\nimport useSmoothNavigate from 'hooks/useSmoothNavigate';\nimport { useEffect, useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport { randomInt } from 'utils/randomValue';\nimport startViewTransition from 'utils/startViewTransition';\n\nexport default function useSongSelection(preselectedSong: string | null, songsPerRow: number) {\n  const {\n    songList,\n    groupedSongList,\n    setFilters,\n    filters,\n    isLoading,\n    selectedPlaylist,\n    setSelectedPlaylist,\n    playlists,\n  } = useSongList();\n  const navigate = useSmoothNavigate();\n  const [keyboardControl, setKeyboardControl] = useState(true);\n\n  const handleKeyboardControl = (value: boolean) => {\n    startViewTransition(() => {\n      flushSync(() => {\n        setKeyboardControl(value);\n      });\n    });\n    woosh.play();\n  };\n\n  const [focusedSong, focusedGroup, moveToSong, showFilters, setShowFilters, randomSong] =\n    useSongSelectionKeyboardNavigation(\n      keyboardControl,\n      groupedSongList,\n      () => handleKeyboardControl(false),\n      songList.length,\n      filters,\n      songsPerRow,\n    );\n\n  const [preselected, setPreselected] = useState(false);\n  useEffect(() => {\n    if (!preselected && songList.length) {\n      const preselectedSongIndex = songList.findIndex((song) => song.id === preselectedSong);\n      const firstNewSongIndex = songList.findIndex((song) => song.isNew);\n\n      let songIndex = randomInt(0, songList.length - 1);\n      if (preselectedSongIndex > -1) songIndex = preselectedSongIndex;\n      else if (firstNewSongIndex > -1) songIndex = preselectedSongIndex;\n\n      moveToSong(songIndex);\n      setPreselected(true);\n    }\n  }, [songList, moveToSong, preselectedSong]);\n\n  useEffect(() => {\n    if (preselected && songList.length && songList[focusedSong]) {\n      navigate(`game/${encodeURIComponent(songList[focusedSong].id)}${window.location.search}`, {\n        replace: true,\n        smooth: false,\n      });\n    }\n  }, [preselected, focusedSong, songList]);\n\n  const songPreview = songList?.[focusedSong];\n  return {\n    groupedSongList,\n    focusedSong,\n    focusedGroup,\n    moveToSong,\n    setKeyboardControl: handleKeyboardControl,\n    keyboardControl,\n    songPreview,\n    songList: songList ?? [],\n    filters,\n    setFilters,\n    showFilters,\n    setShowFilters,\n    isLoading,\n    randomSong,\n    selectedPlaylist,\n    setSelectedPlaylist,\n    playlists,\n  };\n}\n","import { useEffect } from 'react';\n\nlet mounts = 0;\n\nexport default function useBlockScroll() {\n  useEffect(() => {\n    document.body.classList.add('blockOverflow');\n    document.documentElement.classList.add('blockOverflow');\n    mounts++;\n\n    return () => {\n      mounts--;\n\n      if (mounts === 0) {\n        document.body.classList.remove('blockOverflow');\n        document.documentElement.classList.remove('blockOverflow');\n      }\n    };\n  }, []);\n}\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { useBackground } from 'Elements/LayoutWithBackground';\nimport Loader from 'Elements/Loader';\nimport { focused, typography } from 'Elements/cssMixins';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { MobilePhoneModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport AdditionalListControls from 'Scenes/SingASong/SongSelection/Components/AdditionalListControls';\nimport BackgroundThumbnail from 'Scenes/SingASong/SongSelection/Components/BackgroundThumbnail';\nimport Playlists from 'Scenes/SingASong/SongSelection/Components/Playlists';\nimport { FinalSongCard } from 'Scenes/SingASong/SongSelection/Components/SongCard';\nimport SongGroupsNavigation from 'Scenes/SingASong/SongSelection/Components/SongGroupsNavigation';\nimport SongPreview from 'Scenes/SingASong/SongSelection/Components/SongPreview';\nimport useSongSelection from 'Scenes/SingASong/SongSelection/Hooks/useSongSelection';\nimport useBackgroundMusic from 'hooks/useBackgroundMusic';\nimport useBlockScroll from 'hooks/useBlockScroll';\nimport usePrevious from 'hooks/usePrevious';\nimport useViewportSize from 'hooks/useViewportSize';\nimport { SingSetup, SongPreview as SongPreviewEntity } from 'interfaces';\nimport { memo, useCallback, useEffect, useRef, useState } from 'react';\n\ninterface Props {\n  onSongSelected: (songSetup: SingSetup & { song: SongPreviewEntity }) => void;\n  preselectedSong: string | null;\n}\n\nconst focusMultiplier = 1.2;\nconst MAX_SONGS_PER_ROW = 4;\n\nexport default function SongSelection({ onSongSelected, preselectedSong }: Props) {\n  const [mobilePhoneMode] = useSettingValue(MobilePhoneModeSetting);\n  const songsPerRow = mobilePhoneMode ? MAX_SONGS_PER_ROW - 1 : MAX_SONGS_PER_ROW;\n\n  useBackgroundMusic(false);\n  useBackground(true);\n  useBlockScroll();\n\n  const [{ previewTop, previewLeft, previewWidth, previewHeight }, setPositions] = useState({\n    previewTop: 0,\n    previewLeft: 0,\n    previewWidth: 0,\n    previewHeight: 0,\n  });\n  const {\n    focusedGroup,\n    focusedSong,\n    moveToSong,\n    groupedSongList,\n    keyboardControl,\n    songPreview,\n    setKeyboardControl,\n    setFilters,\n    filters,\n    setShowFilters,\n    showFilters,\n    isLoading,\n    randomSong,\n    selectedPlaylist,\n    setSelectedPlaylist,\n    playlists,\n  } = useSongSelection(preselectedSong, songsPerRow);\n\n  const list = useRef<HTMLDivElement | null>(null);\n  const { width, handleResize } = useViewportSize();\n  const previouslyFocusedGroup = usePrevious(focusedGroup);\n  const previouslyFocusedSong = usePrevious(focusedSong);\n\n  useEffect(() => {\n    const selector = (group: string, index: number) => `[data-group-letter=\"${group}\"] [data-index=\"${index}\"]`;\n    handleResize(); // Recalculate width/height to account possible scrollbar appearing\n\n    const previousSong = list.current?.querySelector(\n      selector(previouslyFocusedGroup, previouslyFocusedSong),\n    ) as HTMLDivElement;\n    const song = list.current?.querySelector(selector(focusedGroup, focusedSong)) as HTMLDivElement;\n    if (song) {\n      if (!previousSong || previousSong.offsetTop !== song.offsetTop) {\n        song.scrollIntoView?.({\n          behavior: 'smooth',\n          inline: 'center',\n          block: 'center',\n        });\n      }\n      setPositions({\n        previewLeft: song.offsetLeft,\n        previewTop: song.offsetTop,\n        previewWidth: song.offsetWidth,\n        previewHeight: song.offsetHeight,\n      });\n    }\n  }, [width, list, focusedSong, focusedGroup, groupedSongList]);\n\n  const expandSong = useCallback(() => setKeyboardControl(false), [setKeyboardControl]);\n\n  const loading = isLoading || !groupedSongList || !width;\n\n  return (\n    <Container songsPerRow={songsPerRow}>\n      {loading ? (\n        <LoaderContainer>\n          <Loader size=\"15em\" color=\"secondary\" />\n        </LoaderContainer>\n      ) : (\n        <>\n          {songPreview && <SongImageBackground videoId={songPreview.video} />}\n          <AdditionalListControls\n            setFilters={setFilters}\n            filters={filters}\n            onRandom={randomSong}\n            keyboardControl={keyboardControl}\n          />\n          <SongListContainer ref={list} active={keyboardControl} data-test=\"song-list-container\" dim={showFilters}>\n            <SongGroupsNavigation groupedSongList={groupedSongList} containerRef={list} selectSong={moveToSong} />\n            {groupedSongList.length === 0 && <NoSongsFound>No songs found</NoSongsFound>}\n            {songPreview && (\n              <SongPreview\n                songPreview={songPreview}\n                onPlay={onSongSelected}\n                keyboardControl={!keyboardControl}\n                onExitKeyboardControl={() => setKeyboardControl(true)}\n                top={previewTop}\n                left={previewLeft}\n                width={previewWidth}\n                height={previewHeight}\n                focusEffect={!showFilters}\n              />\n            )}\n            {groupedSongList.map((group) => (\n              <SongsGroupContainer\n                {...(showFilters || !keyboardControl ? { 'data-unfocusable': true } : {})}\n                key={group.letter}\n                data-group-letter={group.letter}\n                highlight={group.letter === 'New'}>\n                <SongsGroupHeader>{group.letter}</SongsGroupHeader>\n                <SongsGroup>\n                  {group.songs.map(({ song, index }) => (\n                    <SongListEntry\n                      key={song.id}\n                      song={song}\n                      handleClick={focusedSong === index ? expandSong : moveToSong}\n                      focused={!showFilters && keyboardControl && index === focusedSong}\n                      index={index}\n                      data-index={index}\n                      data-focused={!showFilters && keyboardControl && index === focusedSong}\n                      data-test={`song-${song.id}${group.isNew ? '-new-group' : ''}`}\n                    />\n                  ))}\n                </SongsGroup>\n              </SongsGroupContainer>\n            ))}\n            <AddSongs>\n              Missing a song? Try <a href=\"convert\">adding one</a> yourself!\n            </AddSongs>\n          </SongListContainer>\n        </>\n      )}\n      <Playlists\n        selectedPlaylist={selectedPlaylist}\n        setSelectedPlaylist={setSelectedPlaylist}\n        playlists={playlists}\n        active={showFilters}\n        closePlaylist={setShowFilters}\n      />\n    </Container>\n  );\n}\n\nconst AddSongs = styled.span`\n  ${typography};\n  text-align: center;\n  font-size: 5rem;\n  margin-top: 10rem;\n`;\n\nconst Container = styled.div<{ songsPerRow: number }>`\n  display: flex;\n  flex-direction: row;\n  max-height: 100vh;\n  --song-list-gap: 3.5rem;\n  --song-item-width: ${(props) =>\n    `calc(${100 / props.songsPerRow}% - ((${props.songsPerRow - 1} / ${props.songsPerRow}) * var(--song-list-gap)))`};\n  --song-item-ratio: calc(16 / 9 * (4 / ${(props) => props.songsPerRow}));\n`;\n\nconst SongImageBackground = styled(BackgroundThumbnail)`\n  position: fixed;\n  inset: 0;\n  width: 100%;\n  height: 100%;\n  filter: blur(7px) grayscale(90%);\n  opacity: 0.25;\n  object-fit: cover;\n`;\n\nconst SongsGroupContainer = styled.div<{ highlight: boolean }>`\n  padding: 0 4.5rem 0 11rem;\n  ${(props) =>\n    props.highlight &&\n    css`\n      background: rgba(0, 0, 0, 0.5);\n      padding-bottom: 3rem;\n      border-bottom: 0.2rem solid black;\n\n      ${SongsGroupHeader} {\n        @keyframes new-song-group-header {\n          0%,\n          100% {\n            transform: scale(1);\n          }\n          50% {\n            transform: scale(1.1);\n          }\n        }\n        animation: new-song-group-header 600ms ease-in-out infinite both;\n        background: #ffffff;\n      }\n    `}\n`;\n\nconst NoSongsFound = styled.div`\n  ${typography};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n\n  font-size: 10rem;\n`;\n\nconst SongsGroupHeader = styled.div`\n  ${typography};\n  display: inline-block;\n  padding: 0.5rem 1rem;\n  margin-bottom: 2rem;\n  font-size: 3.5rem;\n  z-index: 1;\n  color: ${styles.colors.text.active};\n  background: rgba(0, 0, 0, 0.7);\n`;\n\nconst SongListContainer = styled.div<{ active: boolean; dim: boolean }>`\n  position: relative;\n  flex: 1 1 auto;\n  display: flex;\n  flex-direction: column;\n  gap: var(--song-list-gap);\n  padding: 10rem 0;\n  overflow-y: auto;\n  overflow-x: clip;\n  box-sizing: border-box;\n  min-height: 100vh;\n  max-height: 100vh;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  transition: opacity 500ms;\n  opacity: ${(props) => (props.dim ? 0.5 : 1)};\n`;\n\nconst SongsGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: var(--song-list-gap);\n`;\n\nconst SongListEntry = memo(styled(FinalSongCard)`\n  cursor: pointer;\n  flex-basis: var(--song-item-width);\n  aspect-ratio: var(--song-item-ratio);\n\n  ${(props) =>\n    props.theme.graphicSetting === 'high' &&\n    css`\n      transition: 300ms;\n    `}\n  transform: scale(${(props) => (props.focused ? focusMultiplier : 1)});\n  ${(props) => props.focused && 'z-index: 2;'}\n  ${(props) => props.focused && focused}\n\n    content-visibility: auto;\n  contain-intrinsic-size: calc(var(--song-item-width) * (1 / var(--song-item-ratio)));\n`);\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n","import ExcludeLanguagesView from 'Scenes/ExcludeLanguages/ExcludeLanguagesView';\nimport { ExcludedLanguagesSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport SongSelection from 'Scenes/SingASong/SongSelection/SongSelection';\nimport { ComponentProps, useState } from 'react';\n\nfunction SingASong(props: ComponentProps<typeof SongSelection>) {\n  const [excludedLanguages, setExcludedLanguages] = useSettingValue(ExcludedLanguagesSetting);\n  const [languageSelection, setLanguageSelection] = useState(excludedLanguages === null);\n  const goBack = () => {\n    setExcludedLanguages(excludedLanguages ?? []);\n    setLanguageSelection(false);\n  };\n\n  return languageSelection ? (\n    <ExcludeLanguagesView onClose={goBack} closeText=\"Continue to Song Selection\" />\n  ) : (\n    <SongSelection {...props} />\n  );\n}\n\nexport default SingASong;\n","import { useEffect } from 'react';\nimport { AutoEnableFullscreenSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\n\nexport default function useFullscreen() {\n  const [autoEnableFullscreen] = useSettingValue(AutoEnableFullscreenSetting);\n\n  useEffect(() => {\n    try {\n      if (autoEnableFullscreen && process.env.NODE_ENV !== 'development') {\n        document.body.requestFullscreen().catch(console.info);\n      }\n    } catch (e) {}\n  }, []);\n}\n","export default \"__VITE_ASSET__$OLYpZAx__\"","const sleep = (ms: number) => new Promise<void>((resolve) => setTimeout(resolve, ms));\n\nexport default sleep;\n","import styled from '@emotion/styled';\nimport { CheckCircleOutline } from '@mui/icons-material';\nimport Loader from 'Elements/Loader';\nimport { typography } from 'Elements/cssMixins';\nimport events from 'GameEvents/GameEvents';\nimport { useEventEffect, useEventListenerSelector } from 'GameEvents/hooks';\nimport PlayersManager from 'Players/PlayersManager';\nimport SinglePlayer from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/SinglePlayer';\nimport { waitFinished } from 'SoundManager';\nimport backgroundMusic from 'assets/459342__papaninkasettratat__cinematic-music-short.mp3';\nimport { SyntheticEvent, useEffect, useRef, useState } from 'react';\nimport CountUp from 'react-countup';\nimport sleep from 'utils/sleep';\n\ninterface Props {\n  onFinish: () => void;\n}\n\nconst AUTOSTART_TIMEOUT_S = 15;\n\nfunction WaitForReadiness({ onFinish }: Props) {\n  const audio = useRef<HTMLAudioElement>(null);\n  const [areAllPlayersReady, setAreAllPlayersReady] = useState(false);\n\n  const [confirmedPlayers, setConfirmedPlayers] = useState<string[]>([]);\n  useEventEffect(events.readinessConfirmed, (deviceId) => {\n    setConfirmedPlayers((current) => [...current, deviceId]);\n  });\n\n  const players = useEventListenerSelector([events.inputListChanged, events.readinessConfirmed], () => {\n    return PlayersManager.getPlayers().map(\n      (player, index) => [player.input.deviceId!, player.getName(), player] as const,\n    );\n  });\n\n  useEffect(() => {\n    (async () => {\n      // can't use `areAllPlayersReady` as it would need to be specified as useEffect dependency\n      let allInputsReady = false;\n      const inputsReady = PlayersManager.requestReadiness().then(() => {\n        allInputsReady = true;\n        setAreAllPlayersReady(true);\n      });\n      const minTimeElapsed = sleep(1_500);\n      const maxTimeElapsed = sleep(AUTOSTART_TIMEOUT_S * 1_000);\n\n      // Only start the music if waiting for readiness takes some time\n      await sleep(250);\n      if (!allInputsReady) {\n        await audio?.current?.play();\n      }\n\n      await Promise.race([Promise.all([inputsReady, minTimeElapsed]), maxTimeElapsed]);\n      if (!audio?.current?.paused) waitFinished.play();\n      await sleep(500);\n      audio?.current?.pause();\n      await sleep(1000);\n      onFinish();\n    })();\n  }, []);\n\n  const playerStatuses = players.map(([deviceId, name, player]) => ({\n    confirmed: confirmedPlayers.includes(deviceId),\n    name,\n    player: player,\n  }));\n\n  return (\n    <>\n      <WaitingForReady>\n        {!areAllPlayersReady && (\n          <span>\n            Waiting for all players to click <strong>\"Ready\"</strong>\n          </span>\n        )}\n        <PlayerList>\n          {playerStatuses.map(({ confirmed, name, player }, index) => (\n            <PlayerEntry\n              className=\"ph-no-capture\"\n              key={index}\n              data-test=\"player-confirm-status\"\n              data-name={name}\n              data-confirmed={confirmed}>\n              {!areAllPlayersReady && (\n                <ConfirmStatus>{confirmed ? <CheckCircleOutline /> : <Loader color=\"info\" size=\"1em\" />}</ConfirmStatus>\n              )}{' '}\n              <SinglePlayer player={player} />\n            </PlayerEntry>\n          ))}\n        </PlayerList>\n        {!areAllPlayersReady && (\n          <TimeoutMessage>\n            The song will start automatically in{' '}\n            <strong>\n              <CountUp end={0} start={AUTOSTART_TIMEOUT_S} duration={AUTOSTART_TIMEOUT_S} useEasing={false} />\n            </strong>\n          </TimeoutMessage>\n        )}\n      </WaitingForReady>\n      <audio\n        src={backgroundMusic}\n        ref={audio}\n        hidden\n        autoPlay={false}\n        onPlay={(e: SyntheticEvent<HTMLAudioElement>) => {\n          e.currentTarget.volume = 0.8;\n        }}\n      />\n    </>\n  );\n}\n\nconst WaitingForReady = styled.div`\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  gap: 5rem;\n\n  font-size: 5rem;\n  ${typography};\n`;\n\nconst TimeoutMessage = styled.span`\n  font-size: 5rem;\n`;\n\nconst PlayerList = styled.div`\n  //margin-top: 5rem;\n  display: flex;\n  flex-direction: column;\n  gap: 5rem;\n  width: 50rem;\n  view-transition-name: player-mic-check-container;\n`;\n\nconst PlayerEntry = styled.div`\n  display: flex;\n  align-items: center;\n  //justify-content: center;\n  gap: 2rem;\n  transform: scale(1.5);\n`;\n\nconst ConfirmStatus = styled.span`\n  svg {\n    width: 5rem;\n    height: 5rem;\n    stroke: black;\n  }\n`;\n\nexport default WaitForReadiness;\n","import { NotesSection, Section, Song } from 'interfaces';\nimport { cloneDeep, range } from 'lodash-es';\nimport getSongBeatLength from 'Songs/utils/getSongBeatLength';\nimport isNotesSection from 'Songs/utils/isNotesSection';\nimport { getFirstNoteStartFromSections, getLastNoteEndFromSections } from 'Songs/utils/notesSelectors';\n\nconst MAX_SECTION_PAUSE_MS = 250;\n\nconst getSingableBeats = (sections: Section[], start: number = 0, end: number = Infinity) =>\n  sections\n    .filter(isNotesSection)\n    .filter((section) => getFirstNoteStartFromSections([section]) >= start)\n    .filter((section) => getLastNoteEndFromSections([section]) <= end)\n    .reduce((current, section) => current + section.notes.reduce((length, note) => length + note.length, 0), 0);\n\n// Join sections into segments - group of sections that have shorter than MAX_SECTION_PAUSE_MS pause between\nexport const segmentSections = (sections: Section[], beatLength: number): NotesSection[][] => {\n  const [firstSection, ...noteSections] = sections.filter(isNotesSection);\n\n  const segments: NotesSection[][] = [[firstSection]];\n\n  noteSections.forEach((section) => {\n    const lastSegment = segments.at(-1)!;\n\n    const lastSectionEnd = getLastNoteEndFromSections(lastSegment);\n    const firstSectionNoteStart = getFirstNoteStartFromSections([section]);\n    const difference = firstSectionNoteStart - lastSectionEnd;\n\n    if (difference * beatLength > MAX_SECTION_PAUSE_MS) {\n      segments.push([section]);\n    } else {\n      lastSegment.push(section);\n    }\n  });\n\n  return segments;\n};\n\nconst sum = (acc: number, elem: number) => acc + elem;\n\nconst calculateAmplitude = (groups: number[][]) => {\n  const sums = groups.map((group) => group.reduce(sum, 0));\n  return Math.max(...sums) - Math.min(...sums);\n};\n\nconst shiftSolution = (groups: number[][], at: number): number[][] => {\n  const result = cloneDeep(groups);\n  const takeFromLeft = (pos: number) => {\n    if (result[pos - 1].length < 2) return;\n    const left = result[pos - 1].pop()!;\n    result[pos].push(left);\n  };\n  const takeFromRight = (pos: number) => {\n    if (result[pos + 1]?.length < 2) return;\n    const [first, ...rest] = result[pos + 1];\n    result[pos].push(first);\n    result[pos + 1] = rest;\n  };\n\n  at % 2 === 1 ? takeFromLeft(Math.ceil(at / 2)) : takeFromRight(Math.ceil(at / 2));\n\n  return result;\n};\n\nconst arrSum = (arr: number[]) => arr.reduce(sum, 0);\n\nexport default function generatePlayerChanges(song: Song): number[][] {\n  const CHANGES_COUNT = 9;\n  const beatLength = getSongBeatLength(song);\n\n  return song.tracks.map((track) => {\n    if (track.sections.length < 3) return [];\n\n    const segments = segmentSections(track.sections, beatLength);\n\n    // array of groups of singable beats count -- each element is the total singable beats in a segment\n    // The goal is to for the groups to have as similar total count of singable beats as possible\n    let result: number[][] = [];\n\n    // todo replace this hacky algorithm with https://en.wikipedia.org/wiki/Multiway_number_partitioning\n    // STEP1:   Build initial groups by calculating \"ideal\" group length (aka amount of singable beats)\n    //          And try to have them as close to the ideal as possible (by either overflowing or \"underflowing\")\n    let currentBuffer = [getSingableBeats(segments[0])]; // A candidate for the next group\n    for (let i = 0; i < segments.length - 2; i++) {\n      // get the last segment already put in the result\n      const lastSegment = segments[result.flat().length - 1] ?? [];\n      // How many beats are left to sing\n      const singableBeats = getSingableBeats(track.sections, getLastNoteEndFromSections(lastSegment) ?? 0);\n      const idealSize = singableBeats / (1 + CHANGES_COUNT - result.length);\n\n      const segmentSingableBeatsCount = getSingableBeats(segments[i + 1]);\n\n      const bufferSum = arrSum(currentBuffer);\n\n      if (bufferSum + segmentSingableBeatsCount < idealSize) {\n        // If adding the current segment to the candidate doesn't move us past the ideal size, just add it\n        currentBuffer = [...currentBuffer, segmentSingableBeatsCount];\n      } else if (idealSize - bufferSum < bufferSum + segmentSingableBeatsCount - idealSize) {\n        // If the candidate is closer to ideal size, add it as a new group\n        result.push(currentBuffer);\n        currentBuffer = [segmentSingableBeatsCount];\n      } else {\n        // If the candidate with currently inspected segment is closer to ideal size, add it as a new group\n        result.push([...currentBuffer, segmentSingableBeatsCount]);\n        currentBuffer = [];\n      }\n    }\n\n    // STEP2:   Try to make groups more even by trying to move segments between groups and checking if it\n    //          resulted in smaller differences between longest and shortest group (aka amplitude)\n    for (let i = 0; i < 100; i++) {\n      const currentAmplitude = calculateAmplitude(result);\n      // Create alternative results (by shifting one segment between groups in either way)\n      // Note this doesn't guarantee creating best results as moving multiple segments at the same time\n      // isn't accounted for\n      const candidates = range((result.length - 2) * 2 + 2).map((at) => shiftSolution(result, at));\n      const candidatesAmplitudes = candidates.map(calculateAmplitude);\n      const minimalAmplitude = Math.min(...candidatesAmplitudes);\n      if (currentAmplitude <= minimalAmplitude) break; // If no results are better, give up\n      const minimalAmplitudeIndex = candidatesAmplitudes.indexOf(minimalAmplitude);\n      result = candidates[minimalAmplitudeIndex];\n    }\n\n    return result\n      .map((group) => group.length)\n      .reduce<number[]>((acc, length) => [...acc, (acc.at(-1) ?? 0) + length], [])\n      .map((index) => getLastNoteEndFromSections(segments[index - 1]));\n  });\n}\n","import { QrCode2 } from '@mui/icons-material';\nimport { useRef } from 'react';\nimport { randomInt } from 'utils/randomValue';\n\nconst data = [\n  <>\n    You can follow the updates and give feedback on the game through the Facebook Page:{' '}\n    <a href=\"https://www.facebook.com/allkaraoke.party\" target=\"_blank\" rel=\"noreferrer\">\n      <strong>fb.com/AllKaraoke.Party</strong>\n    </a>\n  </>,\n  <>\n    Start typing a name of a song in <strong>Song Selection</strong> to active Search feature\n  </>,\n  <>\n    Narrow down songs through <strong>playlists</strong> on the right in Song Selection\n  </>,\n  <>\n    Select <strong>Pass The Mic</strong> Game Mode to share the microphones and sing in a team\n  </>,\n  <>\n    Your scores and <strong>stats are saved</strong> in this browser - they will be available for the next party!\n  </>,\n  <>\n    You can remove irrelevant songs from the Song Selection in <strong>Edit Songs</strong> page\n  </>,\n  <>\n    If the game feels a bit jaggy with low FPS, check out <strong>Settings</strong> page\n  </>,\n  <>\n    Party is only getting started? Play <strong>Jukebox</strong> for the music and to see what songs are available\n  </>,\n  <>\n    Research shows that <strong>duet songs</strong> are that bit more fun than simple one-track ones\n  </>,\n  <>\n    Want to sing a <strong>new song</strong>? Find UltraStar version of it and import it with\n    <br />\n    <strong>Convert Ultrastar .txt</strong>\n  </>,\n  <>\n    The <strong>white pulse</strong> around selected song in Song Selection tries to match song's tempo\n  </>,\n  <>\n    Entire game (besides add/edit song) is navigable with <strong>Keyboard</strong>\n  </>,\n  <>\n    You can hide or show keyboard navigation help with <kbd>H</kbd> key\n  </>,\n  <>\n    In Song Selection, hold <kbd>↑</kbd> or <kbd>↓</kbd> to jump to the next letter\n  </>,\n  <>\n    Add <strong>vibrato</strong> to the notes you sing to get additional <strong>bonus points</strong>\n  </>,\n  <>\n    You can control the game with your phone - click on the{' '}\n    <strong>\n      <QrCode2 />\n      QR Code Icon\n    </strong>{' '}\n    on the top right and follow the instructions\n  </>,\n];\n\ninterface Props {\n  as?: any;\n}\n\nexport const GameTip = ({ as = 'h4', ...restProps }: Props) => {\n  const randomValue = useRef(randomInt(0, data.length - 1));\n  // const randomValue = useRef(randomInt(0, 0));\n\n  const Component = as;\n  return <Component {...restProps}>{data[randomValue.current]}</Component>;\n};\n","import styled from '@emotion/styled';\nimport { captureException } from '@sentry/react';\nimport CameraManager from 'Camera/CameraManager';\nimport { useEffect, useRef, useState } from 'react';\n\ninterface Props {}\n\nfunction CameraRoll({ ...props }: Props) {\n  const [videoSrc, setVideoSrc] = useState('');\n  const video = useRef<HTMLVideoElement | null>(null);\n\n  useEffect(() => {\n    // Seems it needs some time to process the video, otherwise invalid URL is returned\n    const timeout = setTimeout(() => {\n      setVideoSrc(CameraManager.getVideo());\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  useEffect(() => {\n    try {\n      if (video.current) video.current.playbackRate = 16;\n    } catch (e) {\n      captureException(e);\n    }\n  }, [videoSrc]);\n\n  return (\n    <Container {...props}>\n      <Video src={videoSrc} ref={video} loop autoPlay className=\"ph-no-capture\" />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 80rem;\n  height: 60rem;\n`;\n\nconst Video = styled.video`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default CameraRoll;\n","import styled from '@emotion/styled';\n\ninterface Props {\n  score: number;\n  maxScore: number;\n  color: string;\n}\n\nfunction easeOutCubic(x: number): number {\n  return 1 - Math.pow(1 - x, 3);\n}\n\nfunction easing(x: number): number {\n  return easeOutCubic(x);\n}\n\nfunction ScoreBar({ color, maxScore, score }: Props) {\n  return (\n    <SScoreBar\n      style={{\n        border: score === 0 ? 0 : undefined,\n        width: `${easing(score / maxScore) * 24}%`,\n        backgroundColor: color,\n      }}\n    />\n  );\n}\n\nconst SScoreBar = styled.div`\n  background-image: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0.17) 0%,\n    rgba(0, 0, 0, 0.03) 50%,\n    rgba(0, 0, 0, 0.18) 51%,\n    rgba(0, 0, 0, 0.18) 100%\n  );\n  transition: 1s;\n  border-radius: 0.5rem;\n  height: 100%;\n  border: solid 0.1rem black;\n  box-sizing: border-box;\n`;\n\nexport default ScoreBar;\n","import styled from '@emotion/styled';\nimport { typography } from 'Elements/cssMixins';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { PlayerScore } from 'Scenes/Game/Singing/PostGame/PostGameView';\nimport ScoreBar from 'Scenes/Game/Singing/PostGame/Views/Results/ScoreBar';\nimport Typewriter from 'typewriter-effect';\n\ninterface Props {\n  playerNumber: number;\n  player: PlayerScore;\n  segment: number;\n}\nfunction PlayerDetailedScore({ playerNumber, player, segment }: Props) {\n  const [detailedScore, maxScore] = player.detailedScore;\n\n  return (\n    <ScoreBarContainer>\n      <ScoreBar\n        score={segment > -1 ? detailedScore.rap + detailedScore.freestyle + detailedScore.normal : 0}\n        maxScore={maxScore.rap + maxScore.freestyle + maxScore.normal}\n        color={styles.colors.players[playerNumber].perfect.fill}\n      />\n\n      <ScoreBar\n        score={segment > 0 ? detailedScore.perfect : 0}\n        maxScore={maxScore.perfect}\n        color={styles.colors.players[playerNumber].stroke}\n      />\n\n      <ScoreBar\n        score={segment > 1 ? detailedScore.star : 0}\n        maxScore={maxScore.star}\n        color={styles.colors.players[playerNumber].starPerfect.stroke}\n      />\n\n      <ScoreBar\n        score={segment > 2 ? detailedScore.vibrato : 0}\n        maxScore={maxScore.vibrato}\n        color={styles.colors.players[playerNumber].perfect.stroke}\n      />\n      <ScoreDescription>\n        {segment < 5 && (\n          <Typewriter\n            options={{\n              strings: [\n                'Regular notes',\n                'Perfect notes',\n                'Star notes',\n                'Vibrato',\n                // \"\",\n              ],\n              // @ts-expect-error missing in types\n              pauseFor: 1_000,\n              autoStart: true,\n              // loop: true,\n              delay: 15,\n              deleteSpeed: 15,\n              cursor: '',\n            }}\n          />\n        )}\n      </ScoreDescription>\n    </ScoreBarContainer>\n  );\n}\n\nconst ScoreBarContainer = styled.div`\n  position: relative;\n  height: 4rem;\n  width: 100rem;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: row;\n  padding: 0.5rem;\n  border-radius: 1rem;\n  gap: 0.5rem;\n`;\n\nconst ScoreDescription = styled.span`\n  position: absolute;\n  ${typography};\n  font-size: 3rem;\n  text-align: right;\n  white-space: nowrap;\n  top: 5rem;\n  left: 1rem;\n  display: block;\n`;\n\nexport default PlayerDetailedScore;\n","import styled from '@emotion/styled';\nimport { Badge } from 'Elements/Badge';\nimport { buttonFocused } from 'Elements/Button';\nimport { formatter } from 'Scenes/Game/Singing/GameOverlay/Components/ScoreText';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { PlayerScore } from 'Scenes/Game/Singing/PostGame/PostGameView';\nimport PlayerDetailedScore from 'Scenes/Game/Singing/PostGame/Views/Results/PlayerDetailedScore';\nimport { ContentElement } from 'Scenes/Game/SongPage';\nimport { HighScoreEntity, SingSetup } from 'interfaces';\nimport CountUp from 'react-countup';\n\ninterface Props {\n  player: PlayerScore;\n  revealHighScore: boolean;\n  useColors?: boolean;\n  playerNumber: number;\n  segment: number;\n  highestScore: number;\n  highScores: HighScoreEntity[];\n  singSetup: SingSetup;\n}\n\nfunction PlayerScoreView({\n  playerNumber,\n  player,\n  highestScore,\n  highScores,\n  singSetup,\n  useColors = true,\n  revealHighScore,\n  segment,\n}: Props) {\n  const [detailedScore] = player.detailedScore;\n  let playerScore = 0;\n  if (segment > -1) {\n    playerScore = detailedScore.normal + detailedScore.rap + detailedScore.freestyle;\n  }\n  if (segment > 0) {\n    playerScore = playerScore + detailedScore.perfect;\n  }\n  if (segment > 1) {\n    playerScore = playerScore + detailedScore.star;\n  }\n  if (segment > 2) {\n    playerScore = playerScore + detailedScore.vibrato;\n  }\n\n  const isHighScore = (playerName: string) =>\n    highScores.some((score) => score.singSetupId === singSetup.id && score.name === playerName);\n\n  return (\n    <Container>\n      <ScoreTextPlayer\n        color={useColors ? styles.colors.players[playerNumber].text : ``}\n        data-test={`player-${playerNumber}-name`}\n        className=\"ph-no-capture\">\n        {player.name}\n      </ScoreTextPlayer>\n      <ScoreTextContainer>\n        <ScoreTextScore\n          highscore={revealHighScore && isHighScore(player.name)}\n          color={useColors ? styles.colors.players[playerNumber].text : ``}\n          win={revealHighScore && playerScore === highestScore}\n          data-test={`player-${playerNumber}-score`}\n          data-score={playerScore}>\n          <CountUp preserveValue end={playerScore} formattingFn={formatter.format} duration={segment < 5 ? 1 : 0.5} />\n          <HighScoreBadge highscore={revealHighScore && isHighScore(player.name)}>High score!</HighScoreBadge>\n        </ScoreTextScore>\n      </ScoreTextContainer>\n      <PlayerDetailedScore playerNumber={playerNumber} player={player} segment={segment} />\n    </Container>\n  );\n}\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1.5rem;\n`;\n\nconst ScoreTextPlayer = styled(ContentElement)<{ color: string }>`\n  padding-left: 10rem;\n  padding-right: 10rem;\n  font-size: 3.5rem;\n  color: ${(props) => props.color};\n`;\n\nconst ScoreTextScore = styled(ScoreTextPlayer)<{\n  win: boolean;\n  highscore: boolean;\n  color: string;\n}>`\n  font-size: ${(props) => (props.win ? '8.5rem' : '5.5rem')};\n  color: ${(props) => (props.win ? styles.colors.text.active : 'white')};\n  transition: 400ms ease-in-out;\n  position: relative;\n`;\n\nconst ScoreTextContainer = styled.div`\n  height: 8.5rem;\n`;\n\nconst HighScoreBadge = styled(Badge)<{ highscore: boolean }>`\n  top: -1.5rem;\n  right: -10rem;\n  font-size: 3rem;\n  ${(props) => props.highscore && buttonFocused};\n\n  opacity: ${(props) => (props.highscore ? '1' : '0')};\n  transition: 400ms;\n`;\n\nexport default PlayerScoreView;\n","import styled from '@emotion/styled';\nimport CameraManager from 'Camera/CameraManager';\nimport { Button } from 'Elements/Button';\nimport { sumDetailedScore } from 'Scenes/Game/Singing/GameState/Helpers/calculateScore';\nimport { PlayerScore } from 'Scenes/Game/Singing/PostGame/PostGameView';\nimport CameraRoll from 'Scenes/Game/Singing/PostGame/Views/Results/CameraRoll';\nimport PlayerScoreView from 'Scenes/Game/Singing/PostGame/Views/Results/PlayerScore';\nimport useKeyboard from 'hooks/useKeyboard';\nimport useKeyboardHelp from 'hooks/useKeyboardHelp';\nimport { GAME_MODE, HighScoreEntity, SingSetup } from 'interfaces';\nimport posthog from 'posthog-js';\nimport { useEffect, useMemo, useState } from 'react';\n\ninterface Props {\n  onNextStep: () => void;\n  players: PlayerScore[];\n  highScores: HighScoreEntity[];\n  singSetup: SingSetup;\n}\n\nfunction ResultsView({ onNextStep, players, highScores, singSetup }: Props) {\n  // -1 so the animation starts from the first segment\n  const [segment, setSegment] = useState<number>(-1);\n\n  useEffect(() => {\n    if (segment < 0) {\n      setSegment(0);\n    } else if (segment < 4) {\n      const interval = setInterval(() => {\n        setSegment((segment) => segment + 1);\n      }, 1_500);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [segment]);\n  const isAnimFinished = segment > 3;\n\n  const nextStep = () => {\n    if (!isAnimFinished) {\n      posthog.capture('animation_skipped');\n      setSegment(5);\n    } else {\n      onNextStep();\n    }\n  };\n\n  useKeyboard(\n    {\n      accept: nextStep,\n    },\n    true,\n    [segment],\n  );\n  const help = useMemo(\n    () => ({\n      accept: 'Next',\n    }),\n    [],\n  );\n  useKeyboardHelp(help, true);\n\n  const isCoop = singSetup.mode === GAME_MODE.CO_OP;\n  const finalPlayers = isCoop ? [{ ...players[0], name: players.map((player) => player.name).join(', ') }] : players;\n\n  const playerScores = finalPlayers.map((player) => sumDetailedScore(player.detailedScore[0]));\n  const highestScore = Math.max(...playerScores);\n\n  return (\n    <>\n      <ScoresContainer>\n        {finalPlayers.map((player, number) => (\n          <PlayerScoreView\n            playerNumber={player.playerNumber}\n            useColors={!isCoop}\n            revealHighScore={segment > 3}\n            segment={segment}\n            key={number}\n            player={player}\n            highScores={highScores}\n            highestScore={highestScore}\n            singSetup={singSetup}\n          />\n        ))}\n      </ScoresContainer>\n      <SongSelectionButton\n        onClick={nextStep}\n        focused\n        data-test={isAnimFinished ? 'highscores-button' : 'skip-animation-button'}>\n        {isAnimFinished ? 'Next' : 'Skip'}\n      </SongSelectionButton>\n      {CameraManager.getPermissionStatus() && <StyledPhotoRoll />}\n    </>\n  );\n}\n\nconst ScoresContainer = styled.div`\n  position: absolute;\n  top: 20rem;\n  width: 100%;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst SongSelectionButton = styled(Button)<{ focused: boolean }>`\n  position: absolute;\n  bottom: 4rem;\n  right: 2rem;\n  width: 40rem;\n  font-size: 1.9vw;\n`;\n\nconst StyledPhotoRoll = styled(CameraRoll)`\n  position: absolute;\n  top: calc(50% - 30rem);\n  left: 95rem;\n  transform: scale(0.75);\n`;\n\nexport default ResultsView;\n","import { PLAYER_NAMES_SESSION_STORAGE_KEY } from 'hooks/players/consts';\nimport { useMemo } from 'react';\n\nexport default function useRecentPlayerNames() {\n  return useMemo<string[]>(() => JSON.parse(sessionStorage.getItem(PLAYER_NAMES_SESSION_STORAGE_KEY)!) ?? [], []);\n}\n","import { Autocomplete } from 'Elements/Autocomplete';\nimport useRecentPlayerNames from 'hooks/players/useRecentPlayerNames';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { HighScoreEntity } from 'interfaces';\nimport { useRef, useState } from 'react';\n\ninterface Props {\n  index: number;\n  singSetupId: string;\n  score: HighScoreEntity;\n  register: ReturnType<typeof useKeyboardNav>['register'];\n  onSave: (singId: string, score: number, oldName: string, newName: string) => void;\n}\n\nfunction HighScoreRename({ score, register, singSetupId, onSave, index }: Props) {\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const [newName, setNewName] = useState('');\n  const playerNames = useRecentPlayerNames();\n\n  const onBlur = () => {\n    if (newName.trim().length && newName.trim() !== score.name) onSave(singSetupId, score.score, score.name, newName);\n  };\n\n  return (\n    <Autocomplete\n      className=\"ph-no-capture\"\n      options={playerNames}\n      onChange={setNewName}\n      onBlur={onBlur}\n      value={newName}\n      label=\"\"\n      ref={inputRef}\n      {...register(`highscore-rename-${index}`, () => inputRef.current?.focus())}\n      placeholder={score.name}\n      data-test={`input-edit-highscore`}\n      data-original-name={score.name}\n    />\n  );\n}\n\nexport default HighScoreRename;\n","import styled from '@emotion/styled';\nimport { Button } from 'Elements/Button';\nimport { typography } from 'Elements/cssMixins';\nimport ScoreText from 'Scenes/Game/Singing/GameOverlay/Components/ScoreText';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { useEditScore } from 'Songs/stats/hooks';\nimport dayjs from 'dayjs';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { HighScoreEntity, SingSetup, Song } from 'interfaces';\nimport HighScoreRename from './HighScoreRename';\n\ninterface Props {\n  onNextStep: () => void;\n  singSetup: SingSetup;\n  highScores: HighScoreEntity[];\n  song: Song;\n}\n\nfunction HighScoresView({ onNextStep, highScores, singSetup, song }: Props) {\n  const { register } = useKeyboardNav();\n  const editScore = useEditScore(song);\n\n  return (\n    <>\n      <ScoresContainer data-test=\"highscores-container\">\n        {highScores.map((score, index) => (\n          <ScoreContainer isCurrentSing={score.singSetupId === singSetup.id} key={index}>\n            <ScorePosition>{index + 1}</ScorePosition>\n\n            <ScorePlayerName className=\"ph-no-capture\">\n              {score.singSetupId === singSetup.id ? (\n                <HighScoreRename\n                  index={index}\n                  score={score}\n                  register={register}\n                  singSetupId={singSetup.id}\n                  onSave={editScore}\n                />\n              ) : (\n                score.name\n              )}\n            </ScorePlayerName>\n            <ScoreScore>\n              <ScoreText score={score.score} />\n            </ScoreScore>\n            <ScoreDate>{dayjs(score.date).format('MMMM DD, YYYY')}</ScoreDate>\n          </ScoreContainer>\n        ))}\n      </ScoresContainer>\n      <SongSelectionButton {...register('play-next-song-button', onNextStep, undefined, true)}>\n        Select song\n      </SongSelectionButton>\n    </>\n  );\n}\n\nconst ScoresContainer = styled.div`\n  position: absolute;\n  top: 20rem;\n  width: 100%;\n  text-align: center;\n  padding: 0 16rem;\n  box-sizing: border-box;\n`;\n\nconst ScoreContainer = styled.div<{ isCurrentSing: boolean }>`\n  position: relative;\n  ${typography};\n  font-size: 3.2rem;\n  display: flex;\n  background: ${(props) => (props.isCurrentSing ? 'rgba(0,0,0,.9)' : 'rgba(0,0,0,.5)')};\n  margin-bottom: 2rem;\n  padding: ${(props) => (props.isCurrentSing ? `0 1.5rem` : `1rem 3.2rem`)};\n  align-items: center;\n`;\nconst ScorePosition = styled.div`\n  padding: 0 1.6rem;\n  color: ${styles.colors.text.active};\n`;\nconst ScorePlayerName = styled.div`\n  text-align: left;\n  flex: 1;\n  padding: 1.6rem;\n`;\nconst ScoreScore = styled.div`\n  padding: 0 1rem;\n`;\nconst ScoreDate = styled.div`\n  position: absolute;\n  font-size: 2rem;\n  bottom: -1rem;\n  right: -1.6rem;\n  background: black;\n  padding: 0.5rem;\n`;\n\nconst SongSelectionButton = styled(Button)<{ focused: boolean }>`\n  position: absolute;\n  bottom: 4rem;\n  right: 2rem;\n  width: 40rem;\n  font-size: 1.9vw;\n`;\n\nexport default HighScoresView;\n","import styled from '@emotion/styled';\nimport { GameTip } from 'Elements/GameTip';\nimport { typography } from 'Elements/cssMixins';\nimport ResultsView from 'Scenes/Game/Singing/PostGame/Views/Results';\nimport { ChristmasModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport useBackgroundMusic from 'hooks/useBackgroundMusic';\nimport { DetailedScore, SingSetup, Song } from 'interfaces';\nimport { useState } from 'react';\nimport SongPage from '../../SongPage';\nimport HighScoresView from './Views/HighScores';\n\nexport interface PlayerScore {\n  detailedScore: [DetailedScore, DetailedScore];\n  playerNumber: number;\n  name: string;\n}\n\ninterface HighScoreEntity {\n  singSetupId: string;\n  name: string;\n  score: number;\n  date: string;\n}\n\ninterface Props {\n  width: number;\n  height: number;\n  song: Song;\n  onClickSongSelection: () => void;\n  players: PlayerScore[];\n  singSetup: SingSetup;\n  highScores: HighScoreEntity[];\n}\n\nfunction PostGameView({ song, width, height, onClickSongSelection, players, highScores, singSetup }: Props) {\n  const [isChristmasMode] = useSettingValue(ChristmasModeSetting);\n  useBackgroundMusic(true);\n  const [step, setStep] = useState<'results' | 'highscores'>('results');\n\n  return (\n    <SongPage songData={song} width={width} height={height}>\n      <Container>\n        {step === 'results' && (\n          <ResultsView\n            onNextStep={() => setStep('highscores')}\n            players={players}\n            singSetup={singSetup}\n            highScores={highScores}\n          />\n        )}\n        {step === 'highscores' && (\n          <HighScoresView onNextStep={onClickSongSelection} singSetup={singSetup} highScores={highScores} song={song} />\n        )}\n        <PostGameTip $active />\n      </Container>\n      {isChristmasMode && (\n        <ChristmasMusicCredit>\n          Credit to <a href=\"https://www.FesliyanStudios.com\">https://www.FesliyanStudios.com</a> for the background\n          music.\n        </ChristmasMusicCredit>\n      )}\n    </SongPage>\n  );\n}\n\nconst Container = styled.div`\n  pointer-events: auto;\n`;\n\nexport default PostGameView;\n\nconst PostGameTip = styled(GameTip, {\n  shouldForwardProp: (propName) => !propName.startsWith('$'),\n})<{ $active: boolean }>`\n  transition: 300ms;\n  transform: scale(${({ $active }) => ($active ? 1 : 0)});\n  position: absolute;\n  bottom: 20rem;\n  font-size: 3.2rem;\n  line-height: 1.25;\n  color: white;\n  text-align: center;\n  background: rgba(0, 0, 0, 0.75);\n  width: 100%;\n  box-sizing: border-box;\n\n  padding: 2rem 10rem;\n\n  kbd {\n    padding: 0.12rem 0.9rem;\n    border-radius: 1rem;\n    border: 0.5rem solid rgb(204, 204, 204);\n    border-bottom-color: rgb(150, 150, 150);\n    border-right-color: rgb(150, 150, 150);\n    color: rgb(51, 51, 51);\n    line-height: 1.4;\n    display: inline-block;\n    box-shadow: 0 0.1rem 0 rgba(0, 0, 0, 0.2), inset 0 0 0 0.2rem #ffffff;\n    background-color: rgb(247, 247, 247);\n    text-shadow: 0 0.1rem 0 #fff;\n    font-weight: normal;\n  }\n`;\n\nconst ChristmasMusicCredit = styled.span`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n  font-size: 1.5rem;\n  ${typography};\n`;\n","import PlayersManager from 'Players/PlayersManager';\nimport PostGameView from 'Scenes/Game/Singing/PostGame/PostGameView';\nimport { useSongStats } from 'Songs/stats/hooks';\nimport { HighScoreEntity, SingSetup, Song } from 'interfaces';\nimport { useMemo } from 'react';\nimport GameState from '../GameState/GameState';\n\ninterface Props {\n  width: number;\n  height: number;\n  song: Song;\n  onClickSongSelection: () => void;\n  singSetup: SingSetup;\n}\n\nfunction useHighScores(song: Song, singSetup: SingSetup): HighScoreEntity[] {\n  const stats = useSongStats(song);\n\n  const highScores = useMemo(\n    () =>\n      stats?.scores\n        .filter(({ setup }) => setup.mode === singSetup.mode && setup.tolerance === singSetup.tolerance)\n        .map((score) =>\n          score.scores.map((singleScore) => ({\n            ...singleScore,\n            date: score.date,\n            singSetupId: score.setup.id,\n          })),\n        )\n        .flat()\n        .sort((a, b) => b.score - a.score)\n        .slice(0, 5),\n    [stats, singSetup],\n  );\n\n  return highScores ?? [];\n}\n\nfunction PostGame({ song, width, height, onClickSongSelection, singSetup }: Props) {\n  const highScores = useHighScores(song, singSetup);\n  const playerScores = useMemo(\n    () =>\n      PlayersManager.getPlayers().map((player) => ({\n        name: player.getName(),\n        playerNumber: player.number,\n        detailedScore: GameState.getPlayerDetailedScore(player.number),\n      })),\n    [],\n  );\n\n  return (\n    <PostGameView\n      singSetup={singSetup}\n      song={song}\n      width={width}\n      height={height}\n      onClickSongSelection={onClickSongSelection}\n      players={playerScores}\n      highScores={highScores}\n    />\n  );\n}\n\nexport default PostGame;\n","import styled from '@emotion/styled';\nimport { useBackground } from 'Elements/LayoutWithBackground';\nimport { VideoState } from 'Elements/VideoPlayer';\nimport events from 'GameEvents/GameEvents';\nimport PlayersManager from 'Players/PlayersManager';\nimport GameState from 'Scenes/Game/Singing/GameState/GameState';\nimport WaitForReadiness from 'Scenes/Game/Singing/WaitForReadiness';\nimport {\n  SongListEntryDetailsArtist,\n  SongListEntryDetailsTitle,\n} from 'Scenes/SingASong/SongSelection/Components/SongCard';\nimport useSong from 'Songs/hooks/useSong';\nimport useBlockScroll from 'hooks/useBlockScroll';\nimport useFullscreen from 'hooks/useFullscreen';\nimport { GAME_MODE, SingSetup, SongPreview } from 'interfaces';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport useViewportSize from '../../../hooks/useViewportSize';\nimport generatePlayerChanges from './Helpers/generatePlayerChanges';\nimport Player, { PlayerRef } from './Player';\nimport PostGame from './PostGame/PostGame';\n\ninterface Props {\n  singSetup: SingSetup;\n  songPreview: SongPreview;\n  returnToSongSelection: () => void;\n  restartSong: () => void;\n}\nfunction Singing({ songPreview, singSetup, returnToSongSelection, restartSong }: Props) {\n  useFullscreen();\n  useBlockScroll();\n  const player = useRef<PlayerRef | null>(null);\n  const song = useSong(songPreview.id);\n\n  const { width, height } = useViewportSize();\n  const [isEnded, setIsEnded] = useState(false);\n  const [isOverlayVisible, setIsOverlayVisible] = useState(true);\n  const [playerState, setPlayerState] = useState(VideoState.UNSTARTED);\n\n  const playerChanges = useMemo(() => {\n    if (!song.data) return [];\n    if (singSetup.mode !== GAME_MODE.PASS_THE_MIC) return song.data.tracks.map(() => []);\n\n    return generatePlayerChanges(song.data);\n  }, [song.data, singSetup]);\n\n  const [isTransitionTimeout, setIsTransitionTimeout] = useState(false);\n\n  useBackground(!isTransitionTimeout);\n\n  useEffect(() => {\n    if (isOverlayVisible && song.data && (isTransitionTimeout || playerState !== VideoState.UNSTARTED)) {\n      setIsOverlayVisible(false);\n    }\n  }, [song.data, isTransitionTimeout, playerState, isOverlayVisible]);\n\n  if (isEnded && song.data) {\n    return (\n      <PostGame\n        width={width}\n        height={height}\n        song={song.data}\n        onClickSongSelection={returnToSongSelection}\n        singSetup={singSetup}\n      />\n    );\n  } else {\n    return (\n      <Container>\n        <BackgroundContainer visible={isOverlayVisible}>\n          <Overlay video={songPreview.video} width={width} height={height} />\n          <Artist>{songPreview.artist}</Artist>\n          <Title>{songPreview.title}</Title>\n          <WaitForReadiness\n            onFinish={() => {\n              setIsTransitionTimeout(true);\n              player.current?.play();\n            }}\n          />\n        </BackgroundContainer>\n        {song.data && (\n          <Player\n            ref={player}\n            onStatusChange={setPlayerState}\n            playerChanges={playerChanges}\n            players={singSetup.players}\n            song={song.data}\n            width={width}\n            height={height}\n            autoplay={false}\n            onSongEnd={() => {\n              const scores =\n                GameState.getSingSetup()?.mode === GAME_MODE.CO_OP\n                  ? [\n                      {\n                        name: PlayersManager.getPlayers()\n                          .map((player) => player.getName())\n                          .join(', '),\n                        score: GameState.getPlayerScore(0),\n                      },\n                    ]\n                  : PlayersManager.getPlayers().map((player) => ({\n                      name: player.getName(),\n                      score: GameState.getPlayerScore(player.number),\n                    }));\n              events.songEnded.dispatch(song.data!, singSetup, scores);\n              setIsEnded(true);\n            }}\n            singSetup={singSetup}\n            restartSong={restartSong}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst BackgroundContainer = styled.div<{ visible: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  pointer-events: none;\n  background-color: black;\n  view-transition-name: song-preview;\n  opacity: ${(props) => (props.visible ? 1 : 0)};\n  transition: 500ms;\n`;\n\nconst BaseOverlay = styled.div`\n  background-size: cover;\n  background-position: center center;\n  filter: blur(10px);\n`;\n\nconst Overlay = (props: { video: string; width: number; height: number }) => (\n  <BaseOverlay\n    style={{\n      backgroundImage: `url('https://i3.ytimg.com/vi/${props.video}/hqdefault.jpg')`,\n      width: `${props.width}px`,\n      height: `${props.height}px`,\n    }}\n  />\n);\n\nconst Artist = styled(SongListEntryDetailsArtist)`\n  view-transition-name: song-preview-artist;\n  position: absolute;\n  top: 10rem;\n  left: 10rem;\n  font-size: 7rem;\n`;\nconst Title = styled(SongListEntryDetailsTitle)`\n  view-transition-name: song-preview-title;\n  position: absolute;\n\n  font-size: 8rem;\n  top: 19rem;\n  left: 10rem;\n`;\n\nexport default Singing;\n","import CameraManager from 'Camera/CameraManager';\nimport SingASong from 'Scenes/SingASong/SingASong';\nimport { woosh } from 'SoundManager';\nimport useFullscreen from 'hooks/useFullscreen';\nimport { SingSetup, SongPreview } from 'interfaces';\nimport { useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport startViewTransition from 'utils/startViewTransition';\nimport Singing from './Singing/Singing';\n\ninterface Props {\n  songId?: string;\n}\n\nfunction Game(props: Props) {\n  const [singSetup, setSingSetup] = useState<(SingSetup & { song: SongPreview }) | null>(null);\n  const [preselectedSong, setPreselectedSong] = useState<string | null>(props.songId ?? null);\n  const [resetKey, setResetKey] = useState(0);\n\n  const handleSelect = (setup: SingSetup & { song: SongPreview }) => {\n    // @ts-expect-error\n    document.getElementById('preview-video-container')!.style.viewTransitionName = 'song-preview-video';\n    startViewTransition(() => {\n      // @ts-expect-error\n      document.getElementById('preview-video-container')!.style.viewTransitionName = '';\n      flushSync(() => {\n        setSingSetup(setup);\n      });\n    });\n\n    woosh.play();\n  };\n\n  useFullscreen();\n\n  return (\n    <>\n      {singSetup ? (\n        <Singing\n          restartSong={() => {\n            CameraManager.restartRecord();\n            setResetKey((current) => current + 1);\n          }}\n          key={resetKey}\n          songPreview={singSetup.song}\n          singSetup={singSetup}\n          returnToSongSelection={() => {\n            setPreselectedSong(singSetup.song.id);\n            setSingSetup(null);\n          }}\n        />\n      ) : (\n        <SingASong onSongSelected={handleSelect} preselectedSong={preselectedSong} />\n      )}\n    </>\n  );\n}\nexport default Game;\n"],"names":["toInteger","value","result","toFinite","remainder","nativeCeil","nativeMax","chunk","array","size","guard","isIterateeCall","length","index","resIndex","baseSlice","Casino","createSvgIcon","_jsx","CheckCircleOutline","QuickSearch","setFilters","filters","keyboardControl","visible","setVisible","searchInput","useRef","isFocused","setIsFocused","useState","setSearch","current","search","useHotkeys","onLeave","blur","enabled","enableOnTags","onSearchSong","e","stopPropagation","preventDefault","key","REGULAR_ALPHA_CHARS","onRemoteSearch","useCallback","events","remoteSongSearch","focus","useEffect","Container","FilterItem","jsx","Input","_styled","target","name","styles","props","large","AdditionalListControls","onRandom","searchActive","setSearchActive","clearSearch","jsxs","Fragment","Tooltip","RoundButton","Search","Button","colors","text","active","Tile","videoId","Image","BackgroundThumbnail","previousVideoId","usePreviousDistinct","useLayoutEffect","graphicSettings","useSettingValue","GraphicSetting","TileAnimated","BaseTile","Playlists","closePlaylist","playlists","selectedPlaylist","setSelectedPlaylist","register","focused","focusElement","useKeyboardNav","additionalHelp","vertical","undefined","useKeyboard","left","right","param","URLSearchParams","window","location","get","playlist","find","list","url","URL","href","searchParams","set","history","pushState","toString","map","Playlist","selected","display","typography","process","focusedStatic","_interopRequireDefault","require$$0","PeopleAlt","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","langMap","JSON","parse","SKIPPED_ORIGINS","SongFlag","song","lang","Array","isArray","language","isLangArtistOrigin","useMemo","artistOrigin","toLowerCase","includes","Flag","useSongStats","stats","setStats","storageKey","getSongKey","setSongStats","fetchSongStats","songStatStored","useEditScore","singId","score","oldName","newName","data","newScores","scores","record","setup","id","previousScore","trim","newData","storeSongStats","songScoreUpdated","dispatch","FinalSongCard","video","children","handleClick","background","expanded","restProps","onClickCallback","SongCardContainer","SongCardBackground","backgroundImage","SongInfo","SongCardStatsIndicator","tracksCount","MultiTrackIndicator","PeopleAltIcon","SongListEntryDetailsArtist","artist","SongListEntryDetailsTitle","title","ExpandedData","author","SongAuthor","authorUrl","SongListEntryStats","Language","_ref","inactive","theme","graphicSetting","SongListEntryDetails","lastPlayed","at","date","playedToday","dayjs","isAfter","subtract","plays","SongStatIndicator","SongGroupsNavigation","groupedSongList","containerRef","selectSong","activeGroups","setActiveGroups","observer","IntersectionObserver","entries","forEach","entry","getAttribute","isIntersecting","filter","group","threshold","element","document","querySelector","letter","observe","disconnect","scrollToGroup","songs","setTimeout","offset","parseFloat","getComputedStyle","documentElement","fontSize","topPos","getBoundingClientRect","top","scrollTop","scrollTo","behavior","SongsGroupButton","default","lines","star","stroke","gameModeNames","GAME_MODE","DUEL","PASS_THE_MIC","CO_OP","difficultyNames","useSetGameMode","createPersistedState","useSetTolerance","GameSettings","songPreview","onNextStep","onExitKeyboardControl","rememberedMode","setMode","mode","tolerance","setTolerance","handleNextButton","singSetup","v4","players","changeMode","nextValue","Object","values","changeTolerance","nextIndex","onBackspace","GSSwitcher","ModeDescription","SwapHorizIcon","PlayButton","Switcher","NoiseDetection","isBuiltIn","useEventListenerSelector","playerInputChanged","PlayersManager","getInputs","some","input","source","measures","handleMeasure","push","usePlayerMic","noiseDetected","setNoiseDetected","interval","setInterval","noDetection","freq","detection","avgNoDetectionVolume","reduce","acc","volume","avgDetectionVolume","isNoisy","clearInterval","NoiseWarningContainer","Warning","SinglePlayer","player","status","usePlayerMicStatus","number","Indicator","Ping","PlayerStatus","PlayerMicCheck","PlayerName","getName","MicCheck","useEventListener","playerNameChanged","InputManager","startMonitoring","isSetup","MicChecksContainer","getPlayers","Autocomplete","forwardRef","options","label","onChange","disabled","placeholder","keyboardNavigationChangeFocus","onBlur","className","forwardedRef","inputRef","autocompleteMenu","isInputFocused","setIsInputFocused","focusedOption","setFocusedOption","filteredOptions","option","handleKeyDown","code","newIndex","scrollIntoView","block","handleBlur","AutocompleteMenu","AutocompleteMenuitem","getTrackName","tracks","multipleTracks","playerNames","inputTouched","setInputTouched","nameRef","togglePlayerTrack","track","onNameChange","setName","isDefaultName","currentName","MAX_NAME_LENGTH","Track","PlayerSettings","mobilePhoneMode","MobilePhoneModeSetting","storedPreference","MicSetupPreferenceSetting","initialisePlayerSetup","Math","min","playerSetup","setPlayerSetup","useEventEffect","gameEvents","playerAdded","playerRemoved","playerList","sessionStorage","getItem","PLAYER_NAMES_SESSION_STORAGE_KEY","updatePlayer","playerNumber","newSetup","showModal","setShowModal","startSong","areInputsConfigured","SelectInputModal","PlayerSettingContainer","PlayerSettingTitle","getPlayer","SongSettings","onPlay","setSingSetup","step","setStep","onSongStepFinish","finalSetup","songStarted","viewTransitionName","GameConfiguration","PREVIEW_LENGTH","SongPreviewComponent","width","height","focusEffect","showVideo","setShowVideo","windowWidth","windowHeight","useViewportSize","start","previewStart","videoGap","end","previewEnd","undebounced","useDebounce","loadVideoById","startSeconds","endSeconds","videoWidth","videoHeight","finalHeight","setSize","Backdrop","SongBPMIndicator","SongPreviewContainer","Video","VideoPlayer","state","VideoState","ENDED","seekTo","playVideo","PLAYING","Content","_ref2","BaseSongPreviewContainer","css","realBpm","bpm","animationDuration","show","BaseSongBPMIndicator","usePlaylists","songLanguages","useLanguageList","yearBefore","yearAfter","duet","updatedAfter","toISOString","filteringFunctions","songList","excludeLanguages","languages","appliedFilters","clearString","every","songLang","cleanSearch","Number","year","edition","after","dateAfter","lastUpdate","applyFilters","useSongListFilter","excludedLanguages","ExcludedLanguagesSetting","prefilteredList","deferredFilters","useDeferredValue","playlistFilters","p","filteredList","useSongList","useSongIndex","groups","newSongs","isNew","indexOf","nonAlphaRegex","firstCharacter","isFinite","test","toUpperCase","console","error","captureException","isLoading","MAX_REMEMBERED_SONGS_COUNT","selectRandomSong","songCount","previouslySelectedSongs","maxRememberedCount","possibleOptions","keys","randomInt","shift","useTwoDimensionalNavigation","itemsPerRow","cursorPosition","setCursorPosition","songIndexMatrix","flat","songGroupMatrix","previousMatrix","usePrevious","isAtLastColumn","moveToSong","songIndex","y","findIndex","columns","x","positionToValue","matrix","def","row","positionToSongIndex","positionToGroup","previousFocusedSong","currentFocusedSong","moveCursor","plane","delta","menuNavigate","play","newX","newY","maxXInRow","focusedSong","focusedGroup","tuple","useSongSelectionKeyboardNavigation","groupedSongs","onEnter","songsPerRow","navigate","useSmoothNavigate","showPlaylistsState","setShowPlaylistsState","previousPlaylistsState","arePlaylistsVisible","leavingKey","isAtFirstColumn","handleEnter","menuEnter","blockBack","setBlockBack","previousSearch","timeout","clearTimeout","handleBackspace","menuBack","navigateToGroup","throttle","direction","currentGroup","nextGroupIndex","trailing","navigateVertically","repeat","currentlySelectedGroupIndex","navigateHorizontally","ignoreFilters","randomlySelectedSongs","randomSong","accept","down","up","back","random","help","shiftR","alphanumeric","remote","useKeyboardHelp","previousShowFilters","enteringKey","useSongSelection","preselectedSong","setKeyboardControl","handleKeyboardControl","startViewTransition","flushSync","woosh","showFilters","setShowFilters","preselected","setPreselected","preselectedSongIndex","firstNewSongIndex","encodeURIComponent","replace","smooth","mounts","useBlockScroll","body","classList","add","remove","focusMultiplier","MAX_SONGS_PER_ROW","SongSelection","onSongSelected","useBackgroundMusic","useBackground","previewTop","previewLeft","previewWidth","previewHeight","setPositions","handleResize","previouslyFocusedGroup","previouslyFocusedSong","selector","previousSong","offsetTop","inline","offsetLeft","offsetWidth","offsetHeight","expandSong","loading","LoaderContainer","Loader","SongImageBackground","SongListContainer","NoSongsFound","SongPreview","createElement","SongsGroupContainer","SongsGroupHeader","SongsGroup","SongListEntry","AddSongs","highlight","dim","memo","SingASong","setExcludedLanguages","languageSelection","setLanguageSelection","goBack","ExcludeLanguagesView","useFullscreen","autoEnableFullscreen","AutoEnableFullscreenSetting","requestFullscreen","catch","info","backgroundMusic","sleep","ms","Promise","resolve","AUTOSTART_TIMEOUT_S","WaitForReadiness","onFinish","audio","areAllPlayersReady","setAreAllPlayersReady","confirmedPlayers","setConfirmedPlayers","readinessConfirmed","deviceId","inputListChanged","allInputsReady","inputsReady","requestReadiness","then","minTimeElapsed","maxTimeElapsed","race","all","paused","waitFinished","pause","playerStatuses","confirmed","WaitingForReady","PlayerList","PlayerEntry","ConfirmStatus","TimeoutMessage","CountUp","currentTarget","MAX_SECTION_PAUSE_MS","getSingableBeats","sections","Infinity","isNotesSection","section","getFirstNoteStartFromSections","getLastNoteEndFromSections","notes","note","segmentSections","beatLength","firstSection","noteSections","segments","lastSegment","lastSectionEnd","sum","elem","calculateAmplitude","sums","max","shiftSolution","cloneDeep","takeFromLeft","pos","pop","takeFromRight","first","rest","ceil","arrSum","arr","generatePlayerChanges","getSongBeatLength","currentBuffer","i","idealSize","CHANGES_COUNT","segmentSingableBeatsCount","bufferSum","currentAmplitude","candidates","range","candidatesAmplitudes","minimalAmplitude","minimalAmplitudeIndex","QrCode2","GameTip","as","randomValue","Component","CameraRoll","videoSrc","setVideoSrc","CameraManager","getVideo","playbackRate","easeOutCubic","pow","easing","ScoreBar","color","maxScore","SScoreBar","border","backgroundColor","PlayerDetailedScore","segment","detailedScore","ScoreBarContainer","rap","freestyle","normal","perfect","fill","starPerfect","vibrato","ScoreDescription","Typewriter","strings","pauseFor","autoStart","delay","deleteSpeed","cursor","PlayerScoreView","highestScore","highScores","useColors","revealHighScore","playerScore","isHighScore","playerName","singSetupId","ScoreTextPlayer","ScoreTextContainer","ScoreTextScore","formatter","format","HighScoreBadge","ContentElement","win","Badge","highscore","buttonFocused","ResultsView","setSegment","isAnimFinished","nextStep","posthog","capture","isCoop","finalPlayers","join","playerScores","sumDetailedScore","ScoresContainer","SongSelectionButton","getPermissionStatus","StyledPhotoRoll","useRecentPlayerNames","HighScoreRename","onSave","setNewName","HighScoresView","editScore","ScoreContainer","ScorePosition","ScorePlayerName","ScoreScore","ScoreText","ScoreDate","isCurrentSing","PostGameView","onClickSongSelection","isChristmasMode","ChristmasModeSetting","SongPage","PostGameTip","ChristmasMusicCredit","shouldForwardProp","propName","startsWith","$active","useHighScores","singleScore","sort","a","b","slice","PostGame","GameState","getPlayerDetailedScore","Singing","returnToSongSelection","restartSong","useSong","isEnded","setIsEnded","isOverlayVisible","setIsOverlayVisible","playerState","setPlayerState","UNSTARTED","playerChanges","isTransitionTimeout","setIsTransitionTimeout","BackgroundContainer","Overlay","Artist","Title","Player","getSingSetup","getPlayerScore","songEnded","BaseOverlay","Game","setPreselectedSong","songId","resetKey","setResetKey","handleSelect","getElementById","style","restartRecord"],"mappings":"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","x_google_ignoreList":[0,1,2,3,8]}