{"version":3,"file":"Game-eac6acee.js","sources":["../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/toInteger.js","../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/chunk.js","../../.yarn/__virtual__/@mui-icons-material-virtual-3a04ed151a/0/cache/@mui-icons-material-npm-5.14.16-b4b4877e88-e4dc4071eb.zip/node_modules/@mui/icons-material/esm/CheckCircleOutline.js","../../src/Scenes/SingASong/SongSelection/Hooks/useSongList.ts","../../src/Scenes/SingASong/SongSelection/Hooks/selectRandomSong.ts","../../src/Scenes/SingASong/SongSelection/Hooks/useSongSelectionKeyboardNavigation.ts","../../src/Scenes/SingASong/SongSelection/Hooks/useSongSelection.ts","../../src/Scenes/SingASong/SongSelection/Playlists.tsx","../../src/Scenes/SingASong/SongSelection/QuickSearch.tsx","../../src/Scenes/SingASong/SongSelection/SelectRandomTip.tsx","../../.yarn/__virtual__/@mui-icons-material-virtual-3a04ed151a/0/cache/@mui-icons-material-npm-5.14.16-b4b4877e88-e4dc4071eb.zip/node_modules/@mui/icons-material/PeopleAlt.js","../../src/Elements/Flag/mapping.ts","../../src/Scenes/SingASong/SongSelection/SongCard/SongFlag.tsx","../../src/Songs/stats/hooks.ts","../../src/Scenes/SingASong/SongSelection/SongCard.tsx","../../src/Scenes/SingASong/SongSelection/SongSettings/GameSettings.tsx","../../src/Scenes/SingASong/SongSelection/SongSettings/MicCheck/NoiseDetection.tsx","../../src/Scenes/SingASong/SongSelection/SongSettings/MicCheck/SinglePlayer.tsx","../../src/Scenes/SingASong/SongSelection/SongSettings/MicCheck.tsx","../../src/Elements/Autocomplete.tsx","../../src/Scenes/SingASong/SongSelection/SongSettings/PlayerSettings/SinglePlayer.tsx","../../src/Scenes/SingASong/SongSelection/SongSettings/PlayerSettings.tsx","../../src/Scenes/SingASong/SongSelection/SongSettings/SongSettings.tsx","../../src/Scenes/SingASong/SongSelection/SongPreview.tsx","../../src/hooks/useBlockScroll.ts","../../src/Scenes/SingASong/SongSelection/SongSelection.tsx","../../src/Scenes/SingASong/SingASong.tsx","../../src/hooks/useFullscreen.ts","../../src/assets/459342__papaninkasettratat__cinematic-music-short.mp3","../../src/utils/sleep.ts","../../src/Scenes/Game/Singing/WaitForReadiness.tsx","../../src/Scenes/Game/Singing/Helpers/generatePlayerChanges.ts","../../src/Elements/GameTip.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results/CameraRoll.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results/PlayerScore.tsx","../../src/Scenes/Game/Singing/PostGame/Views/Results.tsx","../../src/hooks/players/useRecentPlayerNames.ts","../../src/Scenes/Game/Singing/PostGame/Views/HighScoreRename.tsx","../../src/Scenes/Game/Singing/PostGame/Views/HighScores.tsx","../../src/Scenes/Game/Singing/PostGame/PostGameView.tsx","../../src/Scenes/Game/Singing/PostGame/PostGame.tsx","../../src/Scenes/Game/Singing/Singing.tsx","../../src/Scenes/Game/Game.tsx"],"sourcesContent":["import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import baseSlice from './_baseSlice.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nexport default chunk;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');","import { captureException } from '@sentry/react';\nimport { ExcludedLanguagesSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport useSongIndex from 'Songs/hooks/useSongIndex';\nimport dayjs from 'dayjs';\nimport { SongPreview } from 'interfaces';\nimport { uniq } from 'lodash-es';\nimport { useDeferredValue, useMemo, useState } from 'react';\nimport clearString from 'utils/clearString';\n\nexport interface SongGroup {\n  letter: string;\n  songs: Array<{ index: number; song: SongPreview }>;\n  isNew?: boolean;\n}\n\nexport interface AppliedFilters {\n  yearBefore?: number;\n  yearAfter?: number;\n  language?: string;\n  excludeLanguages?: string[];\n  search?: string;\n  updatedAfter?: string;\n  duet?: boolean | null;\n}\n\nexport function isEmptyFilters(filters: AppliedFilters) {\n  return (\n    (!filters.language || filters.language === '') &&\n    (!filters.search || filters.search === '') &&\n    (filters.duet === undefined || filters.duet === null) &&\n    !filters.yearBefore &&\n    !filters.yearAfter\n  );\n}\n\nexport interface FiltersData {\n  language: {\n    current: string;\n    available: string[];\n  };\n  status: {\n    allSongs: number;\n    visible: number;\n  };\n}\n\ntype FilterFunc = (songList: SongPreview[], ...args: any) => SongPreview[];\n\nconst filteringFunctions: Record<keyof AppliedFilters, FilterFunc> = {\n  language: (songList, language: string) => {\n    if (language === '') return songList;\n\n    return songList.filter((song) => {\n      const songLangs = Array.isArray(song.language) ? song.language : [song.language!];\n\n      return songLangs.includes(language);\n    });\n  },\n  excludeLanguages: (songList, languages: string[] = []) => {\n    if (languages.length === 0) return songList;\n\n    return songList.filter((song) => {\n      const songLangs = Array.isArray(song.language) ? song.language : [song.language!];\n\n      return !songLangs.every((songLang) => languages.includes(songLang!));\n    });\n  },\n  search: (songList, search: string) => {\n    const cleanSearch = clearString(search);\n\n    return cleanSearch.length ? songList.filter((song) => song.search.includes(cleanSearch)) : songList;\n  },\n  duet: (songList, duet: boolean | null) => {\n    if (duet === null) return songList;\n\n    return songList.filter((song) => (duet ? song.tracksCount > 1 : song.tracksCount === 1));\n  },\n  yearBefore: (songList, yearBefore: number) => {\n    if (!yearBefore) return songList;\n\n    return songList.filter((song) => Number(song.year) < yearBefore);\n  },\n  yearAfter: (songList, yearAfter: number) => {\n    if (!yearAfter) return songList;\n\n    return songList.filter((song) => Number(song.year) >= yearAfter);\n  },\n  updatedAfter: (songList, after: string) => {\n    if (!after) return songList;\n    const dateAfter = dayjs(after);\n\n    return songList.filter((song) => song.lastUpdate && dayjs(song.lastUpdate).isAfter(dateAfter));\n  },\n};\n\nconst applyFilters = (list: SongPreview[], appliedFilters: AppliedFilters): SongPreview[] => {\n  if (clearString(appliedFilters?.search ?? '').length) {\n    return filteringFunctions.search(list, appliedFilters.search);\n  }\n  return Object.entries(appliedFilters)\n    .filter((filters): filters is [keyof AppliedFilters, FilterFunc] => filters[0] in filteringFunctions)\n    .reduce((songList, [name, value]) => filteringFunctions[name](songList, value), list);\n};\n\nexport const useLanguageFilter = (list: SongPreview[]) => {\n  return useMemo(() => uniq(['', ...list.map((song) => song.language ?? 'Unknown')].flat()), [list]);\n};\n\nexport const useSongListFilter = (list: SongPreview[]) => {\n  const availableLanguages = useLanguageFilter(list);\n  const [excludedLanguages] = useSettingValue(ExcludedLanguagesSetting);\n\n  const [filters, setFilters] = useState<AppliedFilters>({ excludeLanguages: excludedLanguages ?? [] });\n  const deferredFilters = useDeferredValue(filters);\n\n  const prefilteredList = useMemo(\n    () => applyFilters(list, { excludeLanguages: excludedLanguages ?? [] }),\n    [list, excludedLanguages],\n  );\n  const filteredList = useMemo(\n    () =>\n      applyFilters(list, {\n        ...deferredFilters,\n        excludeLanguages: excludedLanguages ?? [],\n      }),\n    [list, deferredFilters, excludedLanguages],\n  );\n\n  const filtersData: FiltersData = {\n    language: {\n      current: filters.language ?? '',\n      available: availableLanguages,\n    },\n    status: {\n      allSongs: list.length,\n      visible: filteredList.length,\n    },\n  };\n\n  return { filters, filteredList, filtersData, prefilteredList, setFilters };\n};\n\nexport default function useSongList() {\n  const songList = useSongIndex();\n\n  const { filters, filtersData, filteredList, prefilteredList, setFilters } = useSongListFilter(songList.data);\n\n  const groupedSongList = useMemo(() => {\n    if (filteredList.length === 0) return [];\n\n    const groups: SongGroup[] = [];\n\n    if (!filters.search) {\n      const newSongs = filteredList.filter((song) => song.isNew);\n\n      if (newSongs.length) {\n        groups.push({\n          letter: 'New',\n          isNew: true,\n          songs: newSongs.map((song) => ({ song, index: filteredList.indexOf(song) })),\n        });\n      }\n    }\n\n    filteredList.forEach((song, index) => {\n      try {\n        const firstCharacter = isFinite(+song.artist[0]) ? '0-9' : song.artist[0].toUpperCase();\n        let group = groups.find((group) => group.letter === firstCharacter);\n        if (!group) {\n          group = { letter: firstCharacter, songs: [] };\n          groups.push(group);\n        }\n\n        group.songs.push({ index: index, song });\n      } catch (e) {\n        console.error(e);\n        captureException(e);\n      }\n    });\n\n    return groups;\n  }, [filteredList, filters.search]);\n\n  return {\n    prefilteredList,\n    groupedSongList,\n    songList: filteredList,\n    filtersData,\n    filters,\n    setFilters,\n    isLoading: songList.isLoading,\n  };\n}\n","import { randomInt } from 'utils/randomValue';\n\nconst MAX_REMEMBERED_SONGS_COUNT = 30;\nexport default function selectRandomSong(\n  songCount: number,\n  previouslySelectedSongs: number[],\n  maxRememberedCount = MAX_REMEMBERED_SONGS_COUNT,\n) {\n  let newIndex;\n  if (previouslySelectedSongs.length < songCount) {\n    const possibleOptions = [...Array(songCount).keys()].filter((id) => !previouslySelectedSongs.includes(id));\n\n    newIndex = possibleOptions[randomInt(0, possibleOptions.length - 1)];\n  } else {\n    newIndex = randomInt(0, songCount - 1);\n\n    previouslySelectedSongs.length = 0;\n  }\n\n  if (previouslySelectedSongs.length >= maxRememberedCount) {\n    previouslySelectedSongs.shift();\n  }\n  previouslySelectedSongs.push(newIndex);\n\n  return newIndex;\n}\n","import { HelpEntry } from 'Scenes/KeyboardHelp/Context';\nimport selectRandomSong from 'Scenes/SingASong/SongSelection/Hooks/selectRandomSong';\nimport { AppliedFilters, SongGroup } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport { menuBack, menuEnter, menuNavigate } from 'SoundManager';\nimport useKeyboard from 'hooks/useKeyboard';\nimport useKeyboardHelp from 'hooks/useKeyboardHelp';\nimport usePrevious from 'hooks/usePrevious';\nimport useSmoothNavigate from 'hooks/useSmoothNavigate';\nimport { chunk, throttle } from 'lodash-es';\nimport posthog from 'posthog-js';\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport tuple from 'utils/tuple';\n\nconst useTwoDimensionalNavigation = (groups: SongGroup[] = [], itemsPerRow: number) => {\n  const [cursorPosition, setCursorPosition] = useState<[number, number]>([0, 0]);\n  const songIndexMatrix = useMemo(\n    () =>\n      groups\n        .map(({ songs }) =>\n          chunk(\n            songs.map((song) => song.index),\n            itemsPerRow,\n          ),\n        )\n        .flat(),\n    [groups],\n  );\n  const songGroupMatrix = useMemo(\n    () =>\n      groups\n        .map(({ songs, letter }) =>\n          chunk(\n            songs.map(() => letter),\n            itemsPerRow,\n          ),\n        )\n        .flat(),\n    [groups],\n  );\n  const previousMatrix = usePrevious(songIndexMatrix ?? []);\n\n  const isAtLastColumn = cursorPosition[0] === songIndexMatrix[cursorPosition[1]]?.length - 1;\n\n  const moveToSong = useCallback(\n    (songIndex: number) => {\n      const y = songIndexMatrix.findIndex((columns) => columns.includes(songIndex));\n      const x = songIndexMatrix[y]?.indexOf(songIndex);\n      if (x >= 0 && y >= 0) {\n        setCursorPosition([x ?? 0, y ?? 0]);\n      } else {\n        setCursorPosition([0, 0]);\n      }\n    },\n    [songIndexMatrix],\n  );\n\n  const positionToValue = <T>([x, y]: [number, number], matrix: T[][], def: T) => {\n    if (groups.length === 0) return def;\n    const row = matrix[y];\n    return row?.[x] ?? row?.at(-1) ?? matrix?.[0]?.[0] ?? def;\n  };\n  const positionToSongIndex = ([x, y]: [number, number], matrix: number[][] = songIndexMatrix) => {\n    return positionToValue([x, y], matrix, 0);\n  };\n  const positionToGroup = ([x, y]: [number, number], matrix: string[][] = songGroupMatrix) => {\n    return positionToValue([x, y], matrix, 'A');\n  };\n\n  useEffect(() => {\n    const previousFocusedSong = positionToSongIndex(cursorPosition, previousMatrix);\n    const currentFocusedSong = positionToSongIndex(cursorPosition, songIndexMatrix);\n    if (previousMatrix.length && previousFocusedSong !== currentFocusedSong) {\n      moveToSong(previousFocusedSong);\n    }\n  }, [cursorPosition, songIndexMatrix, previousMatrix, isAtLastColumn]);\n\n  const moveCursor = (plane: 'x' | 'y', delta: number) => {\n    menuNavigate.play();\n    setCursorPosition(([x, y]) => {\n      let newX = x;\n      let newY = y;\n      if (plane === 'y') {\n        newY = y + delta;\n      } else {\n        if (songIndexMatrix[y] === undefined) {\n          debugger;\n        }\n        const maxXInRow = songIndexMatrix[y].length - 1;\n        newX = Math.min(x, maxXInRow) + delta;\n        if (newX < 0) {\n          newY = (songIndexMatrix.length + y - 1) % songIndexMatrix.length;\n          newX = songIndexMatrix[newY].length - 1;\n        } else if (newX > maxXInRow) {\n          newY = y + 1;\n          newX = 0;\n        }\n      }\n      return [newX % itemsPerRow, (songIndexMatrix.length + newY) % songIndexMatrix.length];\n    });\n  };\n\n  const focusedSong = positionToSongIndex(cursorPosition);\n  const focusedGroup = positionToGroup(cursorPosition);\n\n  return tuple([focusedSong, focusedGroup, cursorPosition, moveCursor, moveToSong, isAtLastColumn]);\n};\n\nexport const useSongSelectionKeyboardNavigation = (\n  enabled: boolean,\n  groupedSongs: SongGroup[] = [],\n  onEnter: () => void,\n  songCount: number,\n  appliedFilters: AppliedFilters,\n  songsPerRow: number,\n) => {\n  const navigate = useSmoothNavigate();\n  // We need to record how user entered (from which \"side\") and how left and based on that update the selection.\n  // Eg if user was at the last column, entered playlists, and returned to the last column (by clicking left)\n  // then effectively the selection shouldn't change\n  const [showPlaylistsState, setShowPlaylistsState] = useState<[boolean, 'left' | 'right' | null]>([false, null]);\n  const previousPlaylistsState = usePrevious(showPlaylistsState);\n  const [arePlaylistsVisible, leavingKey] = showPlaylistsState;\n\n  const [focusedSong, focusedGroup, cursorPosition, moveCursor, moveToSong, isAtLastColumn] =\n    useTwoDimensionalNavigation(groupedSongs, songsPerRow);\n  const isAtFirstColumn = cursorPosition[0] === 0;\n\n  const handleEnter = () => {\n    menuEnter.play();\n    onEnter();\n  };\n\n  const [blockBack, setBlockBack] = useState(false);\n  const previousSearch = usePrevious(appliedFilters.search);\n  useLayoutEffect(() => {\n    if (previousSearch && !appliedFilters.search) {\n      setBlockBack(true);\n      const timeout = setTimeout(() => setBlockBack(false), 2_000);\n\n      return () => {\n        clearTimeout(timeout);\n        setBlockBack(false);\n      };\n    }\n  }, [appliedFilters.search]);\n\n  const handleBackspace = () => {\n    if (!blockBack && !appliedFilters.search) {\n      menuBack.play();\n      navigate('/');\n    }\n  };\n\n  const navigateToGroup = useCallback(\n    throttle(\n      (direction: 1 | -1, currentGroup: number) => {\n        const nextGroupIndex = (groupedSongs.length + currentGroup + direction) % groupedSongs.length;\n\n        moveToSong(groupedSongs[nextGroupIndex].songs[0].index);\n        menuNavigate.play();\n      },\n      700,\n      { trailing: false },\n    ),\n    [groupedSongs],\n  );\n\n  const navigateVertically = (e: KeyboardEvent | undefined, direction: 1 | -1) => {\n    if (!e?.repeat) {\n      moveCursor('y', direction);\n    } else {\n      const currentlySelectedGroupIndex = groupedSongs.findIndex(\n        (group) => !!group.songs.find((song) => song.index === focusedSong),\n      );\n      navigateToGroup(direction, currentlySelectedGroupIndex);\n    }\n  };\n\n  const navigateHorizontally = (direction: 1 | -1, ignoreFilters = false) => {\n    // Disable navigation to filters by going right since the filters are on the left\n    // if (!ignoreFilters && direction === 1 && isAtLastColumn && !arePlaylistsVisible) {\n    //   setShowPlaylistsState([true, 'right']);\n    // } else\n    if (!ignoreFilters && direction === -1 && isAtFirstColumn && !arePlaylistsVisible) {\n      setShowPlaylistsState([true, 'left']);\n    } else {\n      moveCursor('x', direction);\n    }\n  };\n\n  const randomlySelectedSongs = useRef<number[]>([]);\n  const randomSong = () => {\n    const newIndex = selectRandomSong(songCount, randomlySelectedSongs.current);\n    moveToSong(newIndex);\n  };\n\n  useKeyboard(\n    {\n      accept: handleEnter,\n      down: (e) => navigateVertically(e, 1),\n      up: (e) => navigateVertically(e, -1),\n      left: () => navigateHorizontally(-1),\n      right: () => navigateHorizontally(1),\n      back: handleBackspace,\n      random: () => {\n        randomSong();\n        posthog.capture('selectRandom');\n      },\n    },\n    enabled && !arePlaylistsVisible,\n    [groupedSongs, cursorPosition, arePlaylistsVisible, appliedFilters, blockBack],\n  );\n\n  const help = useMemo<HelpEntry>(\n    () => ({\n      'horizontal-vertical': null,\n      accept: null,\n      back: null,\n      shiftR: null,\n      remote: ['search'],\n    }),\n    [],\n  );\n  useKeyboardHelp(help, enabled);\n\n  const closePlaylist = useCallback(\n    (leavingKey: 'left' | 'right') => {\n      setShowPlaylistsState([false, leavingKey]);\n      // if (leavingKey === 'right') navigateHorizontally(1);\n    },\n    [setShowPlaylistsState, navigateHorizontally, groupedSongs, cursorPosition],\n  );\n\n  useLayoutEffect(() => {\n    const [previousShowFilters, enteringKey] = previousPlaylistsState;\n    if (previousShowFilters && !arePlaylistsVisible) {\n      if (enteringKey === leavingKey) navigateHorizontally(leavingKey === 'right' ? 1 : -1, true);\n    }\n  }, [arePlaylistsVisible, leavingKey, isAtFirstColumn, isAtLastColumn, ...cursorPosition]);\n\n  return tuple([focusedSong, focusedGroup, moveToSong, arePlaylistsVisible, closePlaylist]);\n};\n","import useSongList from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport { useSongSelectionKeyboardNavigation } from 'Scenes/SingASong/SongSelection/Hooks/useSongSelectionKeyboardNavigation';\nimport { woosh } from 'SoundManager';\nimport useSmoothNavigate from 'hooks/useSmoothNavigate';\nimport { useEffect, useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport { randomInt } from 'utils/randomValue';\nimport startViewTransition from 'utils/startViewTransition';\n\nexport default function useSongSelection(preselectedSong: string | null, songsPerRow: number) {\n  const { songList, prefilteredList, groupedSongList, filtersData, setFilters, filters, isLoading } = useSongList();\n  const navigate = useSmoothNavigate();\n  const [keyboardControl, setKeyboardControl] = useState(true);\n\n  const handleKeyboardControl = (value: boolean) => {\n    startViewTransition(() => {\n      flushSync(() => {\n        setKeyboardControl(value);\n      });\n    });\n    woosh.play();\n  };\n\n  const [focusedSong, focusedGroup, moveToSong, showFilters, setShowFilters] = useSongSelectionKeyboardNavigation(\n    keyboardControl,\n    groupedSongList,\n    () => handleKeyboardControl(false),\n    songList.length,\n    filters,\n    songsPerRow,\n  );\n\n  const [preselected, setPreselected] = useState(false);\n  useEffect(() => {\n    if (!preselected && songList.length) {\n      const preselectedSongIndex = songList.findIndex((song) => song.id === preselectedSong);\n      const firstNewSongIndex = songList.findIndex((song) => song.isNew);\n\n      let songIndex = randomInt(0, songList.length - 1);\n      if (preselectedSongIndex > -1) songIndex = preselectedSongIndex;\n      else if (firstNewSongIndex > -1) songIndex = preselectedSongIndex;\n\n      moveToSong(songIndex);\n      setPreselected(true);\n    }\n  }, [songList, moveToSong, preselectedSong]);\n\n  useEffect(() => {\n    if (preselected && songList.length && songList[focusedSong]) {\n      navigate(`/game/${encodeURIComponent(songList[focusedSong].id)}`, { replace: true, smooth: false });\n    }\n  }, [preselected, focusedSong, songList]);\n\n  const songPreview = songList?.[focusedSong];\n  return {\n    prefilteredList,\n    groupedSongList,\n    focusedSong,\n    focusedGroup,\n    moveToSong,\n    setKeyboardControl: handleKeyboardControl,\n    keyboardControl,\n    songPreview,\n    songList: songList ?? [],\n    filtersData,\n    filters,\n    setFilters,\n    showFilters,\n    setShowFilters,\n    isLoading,\n  };\n}\n","import styled from '@emotion/styled';\nimport { Button } from 'Elements/Button';\nimport { typography } from 'Elements/cssMixins';\nimport { useLanguageList } from 'Scenes/ExcludeLanguages/ExcludeLanguagesView';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { AppliedFilters } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\nimport dayjs from 'dayjs';\nimport useKeyboard from 'hooks/useKeyboard';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { SongPreview } from 'interfaces';\nimport { useEffect, useMemo } from 'react';\n\ninterface PlaylistEntry {\n  name: string;\n  filters: AppliedFilters;\n}\n\nconst usePlaylists = (songs: SongPreview[]): PlaylistEntry[] => {\n  const songLanguages = useLanguageList(songs);\n  return useMemo(\n    () =>\n      [\n        { name: 'All', filters: {} },\n        { name: songLanguages[0].name, filters: { language: songLanguages[0].name } } as PlaylistEntry,\n        songLanguages[1] ? { name: songLanguages[1].name, filters: { language: songLanguages[1].name } } : null,\n        { name: 'Classics', filters: { yearBefore: 1995 } },\n        { name: 'Modern', filters: { yearAfter: 1995 } },\n        { name: 'Duets', filters: { duet: true } },\n        { name: 'New', filters: { updatedAfter: dayjs().subtract(31, 'days').toISOString() } },\n      ].filter((playlist): playlist is PlaylistEntry => playlist !== null),\n    [songLanguages],\n  );\n};\n\ninterface Props {\n  prefilteredList: SongPreview[];\n  setFilters: (filters: AppliedFilters) => void;\n  closePlaylist: (leavingKey: 'left' | 'right') => void;\n  active: boolean;\n}\n\nexport default function Playlists({ setFilters, active, closePlaylist, prefilteredList }: Props) {\n  const playlists = usePlaylists(prefilteredList);\n\n  const { register, focused, focusElement } = useKeyboardNav({\n    enabled: active,\n    additionalHelp: {\n      // It's possible to leave the playlists with left/right\n      vertical: undefined,\n      'horizontal-vertical': null,\n    },\n  });\n\n  useEffect(() => {\n    if (focused) {\n      const playlist = playlists.find((list) => `playlist-${list.name}` === focused);\n      playlist && setFilters(playlist.filters);\n    }\n  }, [focused, playlists]);\n\n  useKeyboard(\n    {\n      left: () => closePlaylist('left'),\n      right: () => closePlaylist('right'),\n    },\n    active,\n  );\n\n  return (\n    <Container data-test=\"song-list-playlists\" active={active}>\n      {playlists.map((playlist) => (\n        <Playlist\n          key={playlist.name}\n          active={active}\n          {...register(`playlist-${playlist.name}`, () => focusElement(`playlist-${playlist.name}`))}\n          {...(!active ? { selected: `playlist-${playlist.name}` === focused } : {})}>\n          {playlist.name}\n        </Playlist>\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div<{ active: boolean }>`\n  background: rgba(0, 0, 0, ${(props) => (props.active ? 0.75 : 0.5)});\n  width: 100vh;\n  transform-origin: top right;\n  transform: rotate(-90deg);\n  position: absolute;\n  left: -100vh;\n  top: 0;\n  font-size: 3.6rem;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row-reverse;\n\n  h2 {\n    ${typography};\n    margin: 0;\n  }\n`;\n\nconst Playlist = styled(Button)<{ selected?: boolean; active: boolean }>`\n  font-size: 3rem;\n  flex: 1;\n  ${(props) => !props.focused && props.active && `background-color: transparent;`};\n  padding: 1.5rem;\n  ${(props) =>\n    props.selected\n      ? `box-shadow: inset 0px 0px 0px 4px ${styles.colors.text.active};`\n      : !props.active && `opacity: .5;`}\n`;\n","import styled from '@emotion/styled';\nimport { Input } from 'Elements/Input';\nimport { REGULAR_ALPHA_CHARS } from 'hooks/useKeyboard';\nimport { useEffect, useRef, useState } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { AppliedFilters } from 'Scenes/SingASong/SongSelection/Hooks/useSongList';\n\ninterface Props {\n  onSongFiltered: (filters: AppliedFilters) => void;\n  filters: AppliedFilters;\n  showFilters: boolean;\n}\nexport default function QuickSearch({ onSongFiltered, filters }: Props) {\n  const searchInput = useRef<HTMLInputElement | null>(null);\n  const [isFocused, setIsFocused] = useState(false);\n\n  const onLeave = () => {\n    searchInput.current?.blur();\n  };\n\n  useHotkeys('down', onLeave, { enabled: isFocused, enableOnTags: ['INPUT'] });\n\n  const focusSearch = (key?: string) => {\n    const searchLength = filters.search?.length ?? 0;\n    if (searchLength > 1) {\n      onSongFiltered({\n        ...filters,\n        search: ' ',\n      });\n    } else if (searchLength === 0 && key) {\n      onSongFiltered({\n        ...filters,\n        search: key,\n      });\n    }\n\n    searchInput.current?.focus();\n  };\n\n  useHotkeys(\n    REGULAR_ALPHA_CHARS,\n    (e) => {\n      focusSearch(e.key);\n    },\n    { enabled: !isFocused },\n  );\n\n  useHotkeys(\n    'Backspace',\n    (e) => {\n      focusSearch();\n    },\n    { enabled: !isFocused },\n  );\n  const setSearch = (value: string) => {\n    onSongFiltered({\n      ...filters,\n      search: value.trim(),\n    });\n  };\n\n  useEffect(() => {\n    searchInput.current?.focus();\n  }, [searchInput]);\n\n  return (\n    <Container data-test=\"song-list-search\">\n      <FilterItem large>\n        <form\n          data-test=\"filters-search-form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            searchInput.current?.blur();\n          }}>\n          <Input\n            onFocus={() => setIsFocused(true)}\n            onBlur={() => setIsFocused(false)}\n            focused={isFocused}\n            label=\"Search\"\n            value={filters.search ?? ''}\n            onChange={setSearch}\n            ref={searchInput}\n            data-test=\"filters-search\"\n          />\n        </form>\n      </FilterItem>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  background: rgba(0, 0, 0, 0.7);\n  padding: 2rem;\n  font-size: 3rem;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  gap: 2rem;\n  position: fixed;\n  z-index: 200;\n  top: 4.5rem;\n  left: 30rem;\n  right: 30rem;\n`;\n\nconst FilterItem = styled.div<{ large?: boolean }>`\n  flex: ${(props) => (props.large ? 1.5 : 1)};\n`;\n","import styled from '@emotion/styled';\nimport { typography } from 'Elements/cssMixins';\nimport { useEffect, useState } from 'react';\nimport { MobilePhoneModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\n\ninterface Props {\n  keyboardControl: boolean;\n}\n\nconst SHOW_TIP_TIMEOUT_MS = 10_000;\n\nexport default function SelectRandomTip({ keyboardControl }: Props) {\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    if (!keyboardControl) {\n      setIsVisible(false);\n    } else {\n      const timeout = setTimeout(() => setIsVisible(true), SHOW_TIP_TIMEOUT_MS);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [keyboardControl]);\n\n  const [mobilePhoneMode] = useSettingValue(MobilePhoneModeSetting);\n\n  if (mobilePhoneMode) {\n    return null;\n  }\n\n  return (\n    <Container visible={isVisible}>\n      Can't decide? Click <Kbd>Shift</Kbd> + <Kbd>R</Kbd> to pick random song\n    </Container>\n  );\n}\n\nconst Container = styled.div<{ visible: boolean }>`\n  @keyframes shake {\n    2.5%,\n    22.5% {\n      transform: translate3d(-0.1rem, 0, 0);\n    }\n\n    5%,\n    20% {\n      transform: translate3d(0.2rem, 0, 0);\n    }\n\n    7.5%,\n    12.5%,\n    17.5% {\n      transform: translate3d(-0.4rem, 0, 0);\n    }\n\n    10%,\n    15% {\n      transform: translate3d(0.4rem, 0, 0);\n    }\n  }\n  animation: shake 5s both infinite;\n  ${typography};\n  pointer-events: none;\n  position: fixed;\n  transform: scale(${(props) => (props.visible ? 1 : 0)});\n  opacity: ${(props) => (props.visible ? 1 : 0)};\n  text-align: center;\n  font-size: 4.8rem;\n  text-shadow: 0 0 3.5rem black, 0 0 3.5rem black, 0 0 3.5rem black, 0 0 3.5rem black, 0 0 3.5rem black,\n    0 0 3.5rem black, 0 0 3.5rem black;\n  width: 100%;\n  z-index: 4;\n  padding: 2.5rem;\n  transition: ease 500ms;\n`;\n\nconst Kbd = styled.kbd<{ disabled?: boolean }>`\n  margin: 0.1rem;\n  padding: 0.2rem 2rem;\n  border-radius: 1.5rem;\n  border: 0.6rem solid rgb(204, 204, 204);\n  border-bottom-color: rgb(150, 150, 150);\n  border-right-color: rgb(150, 150, 150);\n  line-height: 1.4;\n  display: inline-block;\n  background-color: rgb(247, 247, 247);\n  text-shadow: 0 0.5rem 0 #fff;\n\n  opacity: ${(props) => (props.disabled ? 0.25 : 1)};\n`;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M16.67 13.13C18.04 14.06 19 15.32 19 17v3h4v-3c0-2.18-3.57-3.47-6.33-3.87z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"9\",\n  cy: \"8\",\n  r: \"4\",\n  fillRule: \"evenodd\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4c-.47 0-.91.1-1.33.24C14.5 5.27 15 6.58 15 8s-.5 2.73-1.33 3.76c.42.14.86.24 1.33.24zm-6 1c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"\n}, \"2\")], 'PeopleAlt');\nexports.default = _default;","/**\n * https://en.wikipedia.org/wiki/List_of_official_languages_by_country_and_territory\n const data = {};\n\n (() => {\n let countryCodes = (() => {\n const langNames = new Intl.DisplayNames(['en'], { type: 'region' });\n const langMap = {};\n for (let i = 0; i < 26; i++) {\n for (let j = 0; j < 26; j++) {\n let code = String.fromCharCode(97 + i) + String.fromCharCode(97 + j);\n let name = langNames.of(code.toUpperCase());\n if (name !== code && name !== undefined) {\n langMap[name] = code;\n }\n }\n }\n const langMap2 = {\n // Avoid using deprecated codes:\n Akan: 'ak',\n Hebrew: 'he',\n Indonesian: 'id',\n Javanese: 'jv',\n Romanian: 'ro',\n Yiddish: 'yi',\n // Optional extras:\n Tagalog: 'tl',\n English: 'gb',\n Korean: 'kr',\n Swedish: 'se',\n Latin: 'va',\n 'Czech Republic': 'cz',\n 'Antigua and Barbuda': 'ag',\n 'Bosnia and Herzegovina': 'ba',\n 'Trinidad and Tobago': 'tt',\n Transnistria: 'md',\n 'South Ossetia': 'ge',\n Somaliland: 'so',\n 'São Tomé and Príncipe': 'st',\n Turkey: 'tr',\n\n 'Saint Vincent and the Grenadines': 'vc',\n 'Saint Lucia': 'lc',\n 'Saint Kitts and Nevis': 'kn',\n 'Sahrawi Arab Democratic Republic': 'eh',\n 'Northern Cyprus': 'cy',\n 'Myanmar': 'mm',\n 'Federated States of Micronesia': 'fm',\n 'Sovereign Military Order of Malta': 'mt',\n 'Ivory Coast': 'ci',\n 'East Timor': 'tl',\n 'Republic of the Congo': 'cg',\n 'Democratic Republic of the Congo': 'cd',\n\n\n\n };\n return { ...langMap, ...langMap2 };\n })();\n\n document.querySelector('table.wikitable > tbody').querySelectorAll('tr').forEach((tr) => {\n /// get first two td elements from tr\n const [first, second] = tr.querySelectorAll('td');\n\n function getValues(td) {\n let values = td.innerText.split('\\n').map((s) => s.trim());\n /// clean the values from all non alphan characters\n return values.map((s) => s.replace(/[^a-zA-Z ]/g, '')).filter(Boolean);\n }\n\n const country = first.querySelector('a')?.innerText ?? getValues(first)[0];\n const languages = getValues(second);\n /// country is a name of the country - convert it to ISO 3166-1 alpha-2 code\n if (countryCodes[country]) {\n data[countryCodes[country]] = languages;\n } else {\n console.log(`No country code for ${country}`);\n }\n });\n\n console.log(JSON.stringify(data, null, 2));\n })();\n */\n// const langMap = {\nconst langMap: Record<string, string[]> = JSON.parse(`{\n  \"af\": [\n    \"Persian Dari\",\n    \"Pashto\"\n  ],\n  \"al\": [\n    \"Albanian\"\n  ],\n  \"dz\": [\n    \"Arabic\",\n    \"Berber\"\n  ],\n  \"ad\": [\n    \"Catalan\"\n  ],\n  \"ao\": [\n    \"Portuguese\"\n  ],\n  \"ag\": [\n    \"English\"\n  ],\n  \"ar\": [\n    \"Spanish\"\n  ],\n  \"am\": [\n    \"Armenian\"\n  ],\n  \"au\": [\n    \"English\"\n  ],\n  \"at\": [\n    \"German\"\n  ],\n  \"az\": [\n    \"Azerbaijani\"\n  ],\n  \"bs\": [\n    \"English\"\n  ],\n  \"bh\": [\n    \"Arabic\"\n  ],\n  \"bd\": [\n    \"Bengali\"\n  ],\n  \"bb\": [\n    \"English\"\n  ],\n  \"by\": [\n    \"Belarusian\",\n    \"Russian\"\n  ],\n  \"be\": [\n    \"Dutch\",\n    \"French\",\n    \"German\"\n  ],\n  \"bz\": [\n    \"English\"\n  ],\n  \"dy\": [\n    \"French\"\n  ],\n  \"bt\": [\n    \"Dzongkha\"\n  ],\n  \"bo\": [\n    \"Spanish\",\n    \"Aymara\",\n    \"Araona\",\n    \"Baure\",\n    \"Bsiro Chiquitano\",\n    \"Canichana\",\n    \"Cavinea\",\n    \"Cayubaba\",\n    \"Chcobo\",\n    \"Chimn\",\n    \"Ese Ejja\",\n    \"Guaran\",\n    \"Guarasuwe\",\n    \"Guarayu\",\n    \"Itonama\",\n    \"Leco\",\n    \"Machajuyai\",\n    \"Machineri\",\n    \"Maropa\",\n    \"Mojeo\",\n    \"Mojeo\",\n    \"Mor\",\n    \"Mosetn\",\n    \"Movima\",\n    \"Pacawara\",\n    \"Puquina\",\n    \"Quechua\",\n    \"Sirion\",\n    \"Tacana\",\n    \"Tapiet\",\n    \"Toromona\",\n    \"Uru-Chipaya\",\n    \"Weenhayek\",\n    \"Yaminawa\",\n    \"Yuki\",\n    \"Yuracar\",\n    \"Zamuco\"\n  ],\n  \"ba\": [\n    \"Bosnian\",\n      \"Croatian\",\n      \"Serbian\"\n  ],\n  \"bw\": [\n    \"English\"\n  ],\n  \"br\": [\n    \"Portuguese\"\n  ],\n  \"bn\": [\n    \"Malay\"\n  ],\n  \"bg\": [\n    \"Bulgarian\"\n  ],\n  \"hv\": [\n    \"French\"\n  ],\n  \"bi\": [\n    \"French\",\n    \"Kirundi\",\n    \"English\"\n  ],\n  \"kh\": [\n    \"Khmer\"\n  ],\n  \"cm\": [\n    \"English\",\n    \"French\"\n  ],\n  \"ca\": [\n    \"English\",\n    \"French\"\n  ],\n  \"cv\": [\n    \"Portuguese\"\n  ],\n  \"cf\": [\n    \"French\",\n    \"Sango\"\n  ],\n  \"td\": [\n    \"Arabic\",\n    \"French\"\n  ],\n  \"cl\": [\n    \"Spanish\"\n  ],\n  \"cn\": [\n    \"Chinese\"\n  ],\n  \"cx\": [\n    \"English\",\n    \"Chinese\",\n    \"Malay\"\n  ],\n  \"cc\": [\n    \"English\",\n    \"Cocos Malay\"\n  ],\n  \"co\": [\n    \"Spanish\"\n  ],\n  \"km\": [\n    \"Arabic\",\n    \"Comorian\",\n    \"French\"\n  ],\n  \"cd\": [\n    \"French\"\n  ],\n  \"cg\": [\n    \"French\"\n  ],\n  \"ck\": [\n    \"English\",\n    \"Cook Islands Mori\"\n  ],\n  \"cr\": [\n    \"Spanish\"\n  ],\n  \"hr\": [\n    \"Croatian\"\n  ],\n  \"cu\": [\n    \"Spanish\"\n  ],\n  \"cy\": [\n    \"Turkish\"\n  ],\n  \"cz\": [\n    \"Czech\",\n    \"Slovak\"\n  ],\n  \"dk\": [\n    \"Danish\"\n  ],\n  \"dj\": [\n    \"Arabic\",\n    \"French\"\n  ],\n  \"dm\": [\n    \"English\"\n  ],\n  \"do\": [\n    \"Spanish\"\n  ],\n  \"tl\": [\n    \"Portuguese\",\n    \"Tetum\"\n  ],\n  \"ec\": [\n    \"Spanish\",\n    \"Quechua\"\n  ],\n  \"eg\": [\n    \"Arabic\"\n  ],\n  \"sv\": [\n    \"Spanish\"\n  ],\n  \"gq\": [\n    \"French\",\n    \"Portuguese\",\n    \"Spanish\"\n  ],\n  \"er\": [\n    \"Tigrinya\"\n  ],\n  \"ee\": [\n    \"Estonian\"\n  ],\n  \"sz\": [\n    \"English\",\n    \"Swazi\"\n  ],\n  \"et\": [\n    \"Afar\",\n    \"Amharic\",\n    \"Oromo\",\n    \"Somali\",\n    \"Tigrinya\"\n  ],\n  \"fj\": [\n    \"English\",\n    \"Fijian\",\n    \"Fiji Hindi\"\n  ],\n  \"fi\": [\n    \"Finnish\",\n    \"Swedish\"\n  ],\n  \"fx\": [\n    \"French\"\n  ],\n  \"ga\": [\n    \"French\"\n  ],\n  \"gm\": [\n    \"English\"\n  ],\n  \"ge\": [\n    \"Ossetian\",\n    \"Russian\"\n  ],\n  \"de\": [\n    \"German\"\n  ],\n  \"gh\": [\n    \"English\"\n  ],\n  \"gr\": [\n    \"Greek\"\n  ],\n  \"gd\": [\n    \"English\"\n  ],\n  \"gt\": [\n    \"Spanish\"\n  ],\n  \"gn\": [\n    \"French\"\n  ],\n  \"gw\": [\n    \"Portuguese\"\n  ],\n  \"gy\": [\n    \"English\"\n  ],\n  \"ht\": [\n    \"French\",\n    \"Creole\"\n  ],\n  \"hn\": [\n    \"Spanish\"\n  ],\n  \"hu\": [\n    \"Hungarian\"\n  ],\n  \"is\": [\n    \"Icelandic\"\n  ],\n  \"in\": [\n    \"Hindi\",\n    \"English\"\n  ],\n  \"id\": [\n    \"Indonesian\"\n  ],\n  \"ir\": [\n    \"Persian\"\n  ],\n  \"iq\": [\n    \"Arabic\",\n    \"Kurdish\"\n  ],\n  \"ie\": [\n    \"Irish\",\n    \"English\"\n  ],\n  \"il\": [\n    \"Hebrew\"\n  ],\n  \"it\": [\n    \"Italian\"\n  ],\n  \"ci\": [\n    \"French\"\n  ],\n  \"jm\": [\n    \"English\"\n  ],\n  \"jp\": [\n    \"Japanese\"\n  ],\n  \"jo\": [\n    \"Arabic\"\n  ],\n  \"kz\": [\n    \"Kazakh\",\n    \"Russian\"\n  ],\n  \"ke\": [\n    \"English\",\n    \"Swahili\"\n  ],\n  \"ki\": [\n    \"English\",\n    \"Gilbertese\"\n  ],\n  \"kp\": [\n    \"Korean\"\n  ],\n  \"kr\": [\n    \"Korean\"\n  ],\n  \"xk\": [\n    \"Albanian\",\n    \"Serbian\"\n  ],\n  \"kw\": [\n    \"Arabic\"\n  ],\n  \"kg\": [\n    \"Kyrgyz\",\n    \"Russian\"\n  ],\n  \"la\": [\n    \"Lao\"\n  ],\n  \"lv\": [\n    \"Latvian\"\n  ],\n  \"lb\": [\n    \"Arabic\"\n  ],\n  \"ls\": [\n    \"Sotho\",\n    \"English\"\n  ],\n  \"lr\": [\n    \"English\"\n  ],\n  \"ly\": [\n    \"Arabic\"\n  ],\n  \"li\": [\n    \"German\"\n  ],\n  \"lt\": [\n    \"Lithuanian\"\n  ],\n  \"lu\": [\n    \"French\",\n    \"German\",\n    \"Luxembourgish\"\n  ],\n  \"mg\": [\n    \"French\",\n    \"Malagasy\"\n  ],\n  \"mw\": [\n    \"English\",\n    \"Chichewa\"\n  ],\n  \"my\": [\n    \"Malay\"\n  ],\n  \"mv\": [\n    \"Dhivehi\"\n  ],\n  \"ml\": [\n    \"Bambara\",\n    \"Bobo\",\n    \"Bozo\",\n    \"Dogon\",\n    \"Fula\",\n    \"Hassaniya\",\n    \"Kassonke\",\n    \"Maninke\",\n    \"Minyanka\",\n    \"Senufo\",\n    \"Songhay\",\n    \"Soninke\",\n    \"Tamasheq\"\n  ],\n  \"mt\": [\n    \"Italian\"\n  ],\n  \"mh\": [\n    \"English\",\n    \"Marshallese\"\n  ],\n  \"mr\": [\n    \"Arabic\"\n  ],\n  \"mu\": [\n    \"English\",\n    \"Morisien\"\n  ],\n  \"mx\": [\n    \"Spanish\"\n  ],\n  \"fm\": [\n    \"English\"\n  ],\n  \"md\": [\n    \"Moldovan\",\n    \"Russian\",\n    \"Ukrainian\"\n  ],\n  \"mc\": [\n    \"French\"\n  ],\n  \"mn\": [\n    \"Mongolian\"\n  ],\n  \"me\": [\n    \"Montenegrin\"\n  ],\n  \"ma\": [\n    \"Arabic\",\n    \"Berber\"\n  ],\n  \"mz\": [\n    \"Portuguese\"\n  ],\n  \"mm\": [\n    \"Burmese\"\n  ],\n  \"na\": [\n    \"English\"\n  ],\n  \"nr\": [\n    \"English\",\n    \"Nauruan\"\n  ],\n  \"np\": [\n    \"Nepali\"\n  ],\n  \"nl\": [\n    \"Dutch\"\n  ],\n  \"nz\": [\n    \"English\",\n    \"Maori\"\n  ],\n  \"ni\": [\n    \"Spanish\"\n  ],\n  \"ne\": [\n    \"French\"\n  ],\n  \"ng\": [\n    \"English\"\n  ],\n  \"nu\": [\n    \"English\",\n    \"Niuean\"\n  ],\n  \"nf\": [\n    \"English\",\n    \"Norfuk\"\n  ],\n  \"mk\": [\n    \"Macedonian\",\n    \"Albanian\"\n  ],\n  \"no\": [\n    \"Norwegian\",\n    \"Sami\"\n  ],\n  \"om\": [\n    \"Arabic\"\n  ],\n  \"pk\": [\n    \"Urdu\",\n    \"English\"\n  ],\n  \"pw\": [\n    \"English\",\n    \"Palauan\"\n  ],\n  \"ps\": [\n    \"Arabic\"\n  ],\n  \"pa\": [\n    \"Spanish\"\n  ],\n  \"pg\": [\n    \"English\",\n    \"Hiri Motu\",\n    \"Tok Pisin\"\n  ],\n  \"py\": [\n    \"Spanish\",\n    \"Guaran\"\n  ],\n  \"pe\": [\n    \"Spanish\",\n    \"Quechua\",\n    \"Aymara\",\n    \"Ashninka\"\n  ],\n  \"ph\": [\n    \"Filipino\",\n    \"English\"\n  ],\n  \"pl\": [\n    \"Polish\"\n  ],\n  \"pt\": [\n    \"Portuguese\"\n  ],\n  \"qa\": [\n    \"Arabic\"\n  ],\n  \"ro\": [\n    \"Romanian\"\n  ],\n  \"su\": [\n    \"Russian\"\n  ],\n  \"rw\": [\n    \"English\",\n    \"French\",\n    \"Kinyarwanda\",\n    \"Swahili\"\n  ],\n  \"eh\": [\n    \"Arabic\"\n  ],\n  \"kn\": [\n    \"English\"\n  ],\n  \"lc\": [\n    \"English\"\n  ],\n  \"vc\": [\n    \"English\"\n  ],\n  \"ws\": [\n    \"English\",\n    \"Samoan\"\n  ],\n  \"sm\": [\n    \"Italian\"\n  ],\n  \"st\": [\n    \"Portuguese\"\n  ],\n  \"sa\": [\n    \"Arabic\"\n  ],\n  \"sn\": [\n    \"French\"\n  ],\n  \"yu\": [\n    \"Serbian\"\n  ],\n  \"sc\": [\n    \"English\",\n    \"French\",\n    \"Creole\"\n  ],\n  \"sl\": [\n    \"English\"\n  ],\n  \"sg\": [\n    \"English\",\n    \"Malay\",\n    \"Chinese\",\n    \"Tamil\"\n  ],\n  \"sk\": [\n    \"Slovak\"\n  ],\n  \"si\": [\n    \"Slovene\"\n  ],\n  \"sb\": [\n    \"English\"\n  ],\n  \"so\": [\n    \"Arabic\",\n    \"English\",\n    \"Somali\"\n  ],\n  \"za\": [\n    \"Afrikaans\",\n    \"English\",\n    \"Ndebele\",\n    \"Sotho\",\n    \"Swazi\",\n    \"Tsonga\",\n    \"Tswana\",\n    \"Venda\",\n    \"Xhosa\",\n    \"Zulu\"\n  ],\n  \"ss\": [\n    \"English\"\n  ],\n  \"es\": [\n    \"Spanish\"\n  ],\n  \"lk\": [\n    \"Sinhala\",\n    \"Tamil\"\n  ],\n  \"sd\": [\n    \"Arabic\",\n    \"English\"\n  ],\n  \"sr\": [\n    \"Dutch\"\n  ],\n  \"se\": [\n    \"Swedish\"\n  ],\n  \"ch\": [\n    \"French\",\n    \"German\",\n    \"Italian\",\n    \"Romansh\"\n  ],\n  \"sy\": [\n    \"Arabic\"\n  ],\n  \"tw\": [\n    \"Chinese\"\n  ],\n  \"tj\": [\n    \"Tajik\"\n  ],\n  \"tz\": [\n    \"Swahili\",\n    \"English\"\n  ],\n  \"th\": [\n    \"Thai\"\n  ],\n  \"tg\": [\n    \"French\"\n  ],\n  \"tk\": [\n    \"English\",\n    \"Tokelauan\"\n  ],\n  \"to\": [\n    \"English\",\n    \"Tongan\"\n  ],\n  \"tt\": [\n    \"English\"\n  ],\n  \"tn\": [\n    \"Arabic\"\n  ],\n  \"tr\": [\n    \"Turkish\"\n  ],\n  \"tm\": [\n    \"Turkmen\"\n  ],\n  \"tv\": [\n    \"Tuvaluan\",\n    \"English\"\n  ],\n  \"ug\": [\n    \"English\",\n    \"Swahili\"\n  ],\n  \"ua\": [\n    \"Ukrainian\"\n  ],\n  \"ae\": [\n    \"Arabic\"\n  ],\n  \"uk\": [\n    \"English\"\n  ],\n  \"us\": [\n    \"English\"\n  ],\n  \"uy\": [\n    \"Spanish\"\n  ],\n  \"uz\": [\n    \"Uzbek\"\n  ],\n  \"vu\": [\n    \"English\",\n    \"French\",\n    \"Bislama\"\n  ],\n  \"va\": [\n    \"Italian\"\n  ],\n  \"ve\": [\n    \"Spanish\"\n  ],\n  \"vn\": [\n    \"Vietnamese\"\n  ],\n  \"ye\": [\n    \"Arabic\"\n  ],\n  \"zm\": [\n    \"English\"\n  ],\n  \"zw\": [\n    \"Chewa\",\n    \"Chibarwe\",\n    \"English\",\n    \"Kalanga\",\n    \"Khoisan\",\n    \"Nambya\",\n    \"Ndau\",\n    \"Ndebele\",\n    \"Shangani\",\n    \"Shona\",\n    \"Sotho\",\n    \"Tonga\",\n    \"Tswana\",\n    \"Venda\",\n    \"Xhosa\"\n  ]\n}`);\n// };\n\nexport default langMap;\n","import { Flag } from 'Elements/Flag';\nimport langMap from 'Elements/Flag/mapping';\nimport { SongPreview } from 'interfaces';\nimport { useMemo } from 'react';\n\n// skipping US and GB songs as there are a lot of them making the list look messy\nconst SKIPPED_ORIGINS = ['US', 'GB'];\n\ninterface Props {\n  song: Pick<SongPreview, 'language' | 'artistOrigin'>;\n}\nexport default function SongFlag({ song, ...props }: Props) {\n  const lang = Array.isArray(song.language) ? song.language[0] : song.language;\n\n  const isLangArtistOrigin = useMemo(() => {\n    if (!song.artistOrigin) return false;\n    return langMap[song.artistOrigin.toLowerCase()]?.includes(lang) ?? false;\n  }, [song.artistOrigin, lang]);\n\n  return (\n    <>\n      {isLangArtistOrigin && !SKIPPED_ORIGINS.includes(song.artistOrigin!) ? (\n        <Flag isocode={song.artistOrigin!} {...props} />\n      ) : song.language !== 'English' ? (\n        <Flag language={song.language} {...props} />\n      ) : null}\n    </>\n  );\n}\n","import events from 'GameEvents/GameEvents';\nimport { useEventEffect } from 'GameEvents/hooks';\nimport { SongStats, fetchSongStats, getSongKey, storeSongStats } from 'Songs/stats/common';\nimport { SongPreview } from 'interfaces';\nimport { useEffect, useState } from 'react';\n\nexport const useSongStats = (song: Pick<SongPreview, 'artist' | 'title'>) => {\n  const [stats, setStats] = useState<SongStats | null>(null);\n\n  const storageKey = getSongKey(song);\n\n  const setSongStats = async () => {\n    setStats(await fetchSongStats(song));\n  };\n\n  useEffect(() => {\n    setSongStats();\n  }, [storageKey]);\n\n  useEventEffect(events.songStatStored, setSongStats);\n\n  return stats;\n};\n\nexport const useEditScore = (song: Pick<SongPreview, 'artist' | 'title'>) => {\n  return async (singId: string, score: number, oldName: string, newName: string) => {\n    const storageKey = getSongKey(song);\n    const data = await fetchSongStats(song);\n\n    const newScores = data.scores.map((record) => {\n      if (record.setup.id !== singId) return record;\n\n      const newScores = record.scores.map((previousScore) => {\n        if (previousScore.name !== oldName || previousScore.score !== score) return previousScore;\n\n        return { name: newName.trim(), score };\n      });\n\n      return { ...record, scores: newScores };\n    });\n\n    const newData = { ...data, scores: newScores };\n\n    await storeSongStats(song, newData);\n    events.songScoreUpdated.dispatch(storageKey, newData, newName.trim());\n  };\n};\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\nimport { typography } from 'Elements/cssMixins';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport SongFlag from 'Scenes/SingASong/SongSelection/SongCard/SongFlag';\nimport { useSongStats } from 'Songs/stats/hooks';\nimport dayjs from 'dayjs';\nimport { SongPreview } from 'interfaces';\nimport { ComponentProps, ReactNode, useCallback } from 'react';\n\ninterface Props extends ComponentProps<typeof SongCardContainer> {\n  song: SongPreview;\n  focused: boolean;\n  index?: number;\n  expanded?: boolean;\n  background?: boolean;\n  handleClick?: (index: number) => void;\n  video?: ReactNode;\n}\n\nexport const FinalSongCard = ({\n  song,\n  focused,\n  video,\n  children,\n  index,\n  handleClick,\n  background = true,\n  expanded = false,\n  ...restProps\n}: Props) => {\n  const onClickCallback = useCallback(() => (handleClick ? handleClick(index!) : undefined), [handleClick, index]);\n\n  return (\n    <SongCardContainer {...restProps} onClick={handleClick ? onClickCallback : undefined}>\n      {background && (\n        <SongCardBackground\n          style={{\n            backgroundImage: `url('https://i3.ytimg.com/vi/${song.video}/hqdefault.jpg')`,\n          }}\n          focused={focused}\n          expanded={expanded}\n        />\n      )}\n      <SongInfo expanded={expanded}>\n        {!expanded && <SongCardStatsIndicator song={song} />}\n        {song.tracksCount > 1 && !expanded && (\n          <MultiTrackIndicator data-test=\"multitrack-indicator\">\n            <PeopleAltIcon />\n            &nbsp; Duet\n          </MultiTrackIndicator>\n        )}\n        <SongListEntryDetailsArtist expanded={expanded}>{song.artist}</SongListEntryDetailsArtist>\n        <SongListEntryDetailsTitle expanded={expanded}>{song.title}</SongListEntryDetailsTitle>\n        <ExpandedData expanded={expanded}>\n          {expanded && (\n            <>\n              {song.author && (\n                <SongAuthor expanded={expanded}>\n                  by&nbsp;\n                  {song.authorUrl ? (\n                    <a href={song.authorUrl} target=\"_blank\" rel=\"noreferrer\">\n                      {song.author}\n                    </a>\n                  ) : (\n                    song.author\n                  )}\n                </SongAuthor>\n              )}\n              <SongListEntryStats song={song} />\n            </>\n          )}\n          {!expanded && <Language song={song} />}\n        </ExpandedData>\n      </SongInfo>\n      {children}\n      {video}\n    </SongCardContainer>\n  );\n};\n\nexport const Language = styled(SongFlag)`\n  height: 2.75rem;\n  object-fit: cover;\n  border-top-right-radius: 1rem;\n  position: absolute;\n  z-index: -1;\n  left: 0rem;\n  bottom: 0rem;\n  opacity: 0.95;\n`;\n\nexport const ExpandedData = styled.div<{ expanded: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nconst SongInfo = styled.div<{ expanded: boolean }>`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n  z-index: 1;\n  box-sizing: border-box;\n\n  flex-direction: column;\n\n  ${(props) =>\n    props.expanded &&\n    css`\n      align-items: flex-start;\n      justify-content: flex-start;\n    `}\n`;\n\nexport const SongCardContainer = styled.div`\n  font-size: 4.5rem;\n\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n  flex-direction: column;\n  box-sizing: border-box;\n  position: relative;\n  padding: 0.5rem;\n\n  border: 0.1rem black solid;\n  border-radius: 1rem;\n`;\n\nexport const SongCardBackground = styled.div<{ focused: boolean; expanded: boolean }>`\n  position: absolute;\n  z-index: -1;\n  inset: 0;\n  ${(props) =>\n    props.theme.graphicSetting === 'high'\n      ? css`\n          background-size: ${props.focused ? 100 : 110}%;\n          ${!props.focused ? 'filter: grayscale(90%);' : ''}\n          ${props.expanded ? 'filter: blur(10px);' : ''}\n                  transition: 300ms;\n          opacity: ${props.focused ? 1 : 0.8};\n        `\n      : css`\n          background-size: 100%;\n          opacity: ${props.focused ? 1 : 0.6};\n        `}\n  background-position: center center;\n`;\n\nexport const SongListEntryDetails = styled.span<{ expanded?: boolean }>`\n  background: rgba(0, 0, 0, 0.7);\n\n  width: auto;\n  display: inline-block;\n  padding: 0.5rem;\n  ${typography};\n\n  text-align: right;\n  font-size: ${({ expanded }) => (expanded ? '6rem' : '2.7rem')};\n`;\n\nexport const SongListEntryDetailsArtist = styled(SongListEntryDetails)`\n  color: ${styles.colors.text.active};\n`;\n\nexport const SongListEntryDetailsTitle = styled(SongListEntryDetails)`\n  margin-top: ${(props) => (props.expanded ? '1.5rem' : '0.5rem')};\n  color: white;\n`;\n\nexport const SongAuthor = styled(SongListEntryDetailsTitle)`\n  font-size: 3rem;\n  margin-top: 3rem;\n`;\n\nexport const SongCardStatsIndicator = ({ song }: { song: SongPreview }) => {\n  const stats = useSongStats(song);\n  const lastPlayed = stats?.scores?.at(-1)?.date ?? false;\n\n  const playedToday = lastPlayed && dayjs(lastPlayed).isAfter(dayjs().subtract(1, 'days'));\n\n  return stats?.plays ? (\n    <SongStatIndicator data-test=\"song-stat-indicator\">{playedToday ? 'Played today' : stats.plays}</SongStatIndicator>\n  ) : null;\n};\n\nconst SongStatIndicator = styled.div`\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  padding: 0 1rem;\n  height: 2.75rem;\n  min-width: 2.75rem;\n  box-sizing: border-box;\n  border-radius: 5rem;\n  color: white;\n  background: rgba(0, 0, 0, 0.75);\n  font-size: 1.4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n`;\nconst MultiTrackIndicator = styled(SongStatIndicator)`\n  left: 0.5rem;\n  right: auto;\n\n  svg {\n    width: 1.75rem;\n    height: 1.75rem;\n  }\n`;\n\nexport const SongListEntryStats = ({ song }: { song: SongPreview }) => {\n  const stats = useSongStats(song);\n\n  return (\n    <SongAuthor>\n      {stats?.plays ? `Played ${stats.plays} time${stats.plays > 1 ? 's' : ''}` : 'Never played yet'}\n    </SongAuthor>\n  );\n};\n","import styled from '@emotion/styled';\nimport SwapHorizIcon from '@mui/icons-material/SwapHoriz';\nimport { Button } from 'Elements/Button';\nimport { nextIndex, nextValue, Switcher } from 'Elements/Switcher';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { GAME_MODE, SingSetup, SongPreview } from 'interfaces';\nimport createPersistedState from 'use-persisted-state';\nimport { ValuesType } from 'utility-types';\nimport isDev from 'utils/isDev';\nimport { v4 } from 'uuid';\n\ninterface Props {\n  songPreview: SongPreview;\n  onNextStep: (setup: SingSetup) => void;\n  keyboardControl: boolean;\n  onExitKeyboardControl: () => void;\n}\n\nconst gameModeNames = {\n  [GAME_MODE.DUEL]: 'Duel',\n  [GAME_MODE.PASS_THE_MIC]: 'Pass The Mic',\n  [GAME_MODE.CO_OP]: 'Cooperation',\n};\n\nconst difficultyNames = ['Hard', 'Medium', 'Easy'];\n\nif (isDev()) {\n  difficultyNames.push('Debug 4');\n  difficultyNames.push('Debug 5');\n  difficultyNames.push('Debug 6');\n}\n\n// added -v3 to the key as the value to handle default selection if it wasnt changed\nconst useSetGameMode = createPersistedState<ValuesType<typeof GAME_MODE> | null>('song_settings-game_mode-v3');\nconst useSetTolerance = createPersistedState<number>('song_settings-tolerance-v2');\n\nexport default function GameSettings({ songPreview, onNextStep, keyboardControl, onExitKeyboardControl }: Props) {\n  const [rememberedMode, setMode] = useSetGameMode(null);\n  const mode = rememberedMode ?? (songPreview.tracksCount > 1 ? GAME_MODE.CO_OP : GAME_MODE.DUEL);\n  const [tolerance, setTolerance] = useSetTolerance(1);\n\n  const handleNextButton = () => {\n    const singSetup = {\n      id: v4(),\n      players: [],\n      mode,\n      tolerance: tolerance + 1,\n    };\n    onNextStep(singSetup);\n  };\n\n  const changeMode = () => {\n    setMode(nextValue(Object.values(GAME_MODE), mode));\n  };\n\n  const changeTolerance = () => setTolerance((current) => nextIndex(difficultyNames, current, -1));\n\n  const { register } = useKeyboardNav({ enabled: keyboardControl, onBackspace: onExitKeyboardControl });\n\n  return (\n    <>\n      <GSSwitcher\n        {...register('difficulty-setting', changeTolerance, 'Change difficulty')}\n        label=\"Difficulty\"\n        value={difficultyNames[tolerance]}\n        data-test-value={difficultyNames[tolerance]}\n      />\n      <GSSwitcher\n        {...register('game-mode-setting', changeMode, 'Change mode')}\n        label=\"Mode\"\n        value={gameModeNames[mode]}\n        data-test-value={gameModeNames[mode]}\n      />\n      <ModeDescription>\n        {mode === GAME_MODE.DUEL && 'Face off against each other - person that earns more points wins.'}\n        {mode === GAME_MODE.CO_OP && 'Join forces and sing together - your points will be added up to a single pool.'}\n        {mode === GAME_MODE.PASS_THE_MIC && (\n          <>\n            For more than 2 players - split into groups and pass the microphone within the group when prompted with{' '}\n            <SwapHorizIcon /> symbol.\n          </>\n        )}\n      </ModeDescription>\n      <PlayButton {...register('next-step-button', handleNextButton, undefined, true)}>Next ➤</PlayButton>\n    </>\n  );\n}\n\nconst PlayButton = styled(Button)`\n  padding: 0.5rem 9rem;\n  font-size: 4.3rem;\n  width: 50rem;\n`;\n\nconst ModeDescription = styled.h3`\n  max-width: 50rem;\n  margin: -1rem 0 1rem !important;\n  padding: 1.5rem;\n  background: rgba(0, 0, 0, 0.7);\n  box-sizing: border-box;\n`;\n\nconst GSSwitcher = styled(Switcher)`\n  font-size: 4.3rem;\n  padding: 1rem;\n  min-width: 50rem;\n  box-sizing: border-box;\n`;\n","import styled from '@emotion/styled';\nimport { Warning } from '@mui/icons-material';\nimport events from 'GameEvents/GameEvents';\nimport { useEventListenerSelector } from 'GameEvents/hooks';\nimport PlayersManager from 'Players/PlayersManager';\nimport usePlayerMic from 'hooks/players/usePlayerMic';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nexport default function NoiseDetection() {\n  const inputs = useEventListenerSelector(events.playerInputChanged, () => PlayersManager.getInputs());\n  const isBuiltIn = inputs.some((input) => input.source === 'Microphone');\n\n  const measures = useRef<Array<[number, number]>>([]);\n  const handleMeasure = useCallback((data: [number, number]) => {\n    measures.current.push(data);\n  }, []);\n\n  usePlayerMic(0, 50, handleMeasure);\n\n  const [noiseDetected, setNoiseDetected] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(\n      () => {\n        const noDetection = measures.current.filter(([, freq]) => freq === 0);\n        const detection = measures.current.filter(([, freq]) => freq > 0);\n        const avgNoDetectionVolume = noDetection.reduce((acc, [volume]) => acc + volume, 0) / (noDetection.length + 1);\n        const avgDetectionVolume = detection.reduce((acc, [volume]) => acc + volume, 0) / (detection.length + 1);\n\n        // The logic is that if the singing measures and non-singing measures have similar volume, then there's\n        // something playing in the background that is picked up as singing. If someone is singing into the mic\n        // the non-singing measures are usually quiet compared to singing measures.\n        const isNoisy =\n          detection.length > noDetection.length * 0.1 &&\n          avgDetectionVolume > 0.01 &&\n          avgNoDetectionVolume > 0.01 &&\n          avgDetectionVolume - avgNoDetectionVolume < avgNoDetectionVolume / 2;\n\n        setNoiseDetected(isNoisy);\n        measures.current.length = 0;\n      },\n      noiseDetected ? 5000 : 2500,\n    );\n\n    return () => clearInterval(interval);\n  }, [noiseDetected]);\n\n  return (\n    <NoiseWarningContainer visible={noiseDetected}>\n      <h2>\n        <strong>\n          <Warning />\n        </strong>{' '}\n        Noise detected\n      </h2>\n      <hr />\n      <h4>\n        This might make singing inaccurate. Make sure your microphone doesn't pick up the music.{' '}\n        {isBuiltIn && (\n          <>\n            Alternatively, use your <strong>smartphone as a microphone</strong> instead.\n          </>\n        )}\n      </h4>\n    </NoiseWarningContainer>\n  );\n}\n\nconst NoiseWarningContainer = styled.div<{ visible: boolean }>`\n  opacity: ${(props) => (props.visible ? 1 : 0)};\n  transition: 300ms;\n  background: rgba(0, 0, 0, 0.75);\n  padding: 1rem;\n  max-width: 50rem;\n  position: relative;\n  top: -1rem;\n  left: -0.5rem;\n`;\n","import styled from '@emotion/styled';\nimport { PlayerMicCheck } from 'Elements/VolumeIndicator';\nimport { PlayerEntity } from 'Players/PlayersManager';\nimport Ping from 'Scenes/SingASong/SongSelection/SongSettings/MicCheck/Ping';\nimport PlayerStatus from 'Scenes/SingASong/SongSelection/SongSettings/MicCheck/Status';\nimport usePlayerMicStatus from 'hooks/players/usePlayerMicStatus';\n\ninterface Props {\n  player: PlayerEntity;\n}\nexport default function SinglePlayer({ player }: Props) {\n  const status = usePlayerMicStatus(player.number);\n\n  return (\n    <Indicator key={player.number} data-test={`indicator-player-${player.number}`}>\n      <Ping playerNumber={player.number} />\n      <PlayerStatus status={status} />\n      {status !== 'unavailable' && <PlayerMicCheck playerNumber={player.number} />}\n      <PlayerName className=\"ph-no-capture\">{player.getName()}</PlayerName>\n    </Indicator>\n  );\n}\n\nconst Indicator = styled.div`\n  position: relative;\n  border: 0.1rem solid white;\n  padding: 1rem 3rem;\n  background: black;\n  width: 80%;\n\n  text-align: center;\n  gap: 1.25rem;\n  font-size: 2.3rem;\n  color: white;\n\n  -webkit-text-stroke: 1px black;\n`;\n\nconst PlayerName = styled.span`\n  position: relative;\n  z-index: 1;\n`;\n","import styled from '@emotion/styled';\nimport { typography } from 'Elements/cssMixins';\nimport events from 'GameEvents/GameEvents';\nimport { useEventListener, useEventListenerSelector } from 'GameEvents/hooks';\nimport PlayersManager from 'Players/PlayersManager';\nimport InputManager from 'Scenes/Game/Singing/Input/InputManager';\nimport NoiseDetection from 'Scenes/SingASong/SongSelection/SongSettings/MicCheck/NoiseDetection';\nimport SinglePlayer from 'Scenes/SingASong/SongSelection/SongSettings/MicCheck/SinglePlayer';\nimport { ComponentProps, useEffect } from 'react';\n\nexport default function MicCheck(props: ComponentProps<typeof Container>) {\n  // Force update when the name changes\n  useEventListener(events.playerNameChanged);\n\n  useEffect(() => {\n    InputManager.startMonitoring();\n  }, []);\n\n  const inputs = useEventListenerSelector(events.playerInputChanged, () => PlayersManager.getInputs());\n  const isSetup = inputs.some((input) => input.source !== 'Dummy');\n\n  return (\n    <Container {...props}>\n      <MicChecksContainer>\n        Microphone Check\n        {isSetup ? (\n          PlayersManager.getPlayers().map((player) => <SinglePlayer key={player.number} player={player} />)\n        ) : (\n          <>\n            <Indicator>Mic not setup</Indicator>\n            <h4>Singing will be emulated</h4>\n            <h5>You can setup in the Next step</h5>\n          </>\n        )}\n      </MicChecksContainer>\n      <NoiseDetection />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  font-size: 3rem;\n  ${typography};\n  margin-bottom: 8.6rem;\n  gap: 3.5rem;\n`;\n\nconst MicChecksContainer = styled.div`\n  gap: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Indicator = styled.div`\n  position: relative;\n  border: 0.1rem solid white;\n  padding: 1rem 3rem;\n  background: black;\n  width: 80%;\n\n  text-align: center;\n  gap: 1.25rem;\n  font-size: 2.3rem;\n  color: white;\n`;\n","import styled from '@emotion/styled';\nimport { typography } from 'Elements/cssMixins';\nimport { Input } from 'Elements/Input';\nimport { nextIndex } from 'Elements/Switcher';\nimport {\n  ComponentProps,\n  ForwardedRef,\n  forwardRef,\n  KeyboardEventHandler,\n  ReactNode,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\n\ninterface Props extends ComponentProps<typeof Input> {\n  label: ReactNode;\n  value: string;\n  onChange: (value: string) => void;\n  disabled?: boolean;\n  options: string[];\n  placeholder?: string;\n  keyboardNavigationChangeFocus?: (direction: -1 | 1) => void;\n  onBlur?: () => void;\n  className?: string;\n}\n\nexport const Autocomplete = forwardRef(\n  (\n    {\n      options,\n      focused,\n      label,\n      value,\n      onChange,\n      disabled,\n      placeholder,\n      keyboardNavigationChangeFocus,\n      onBlur,\n      className,\n      ...restProps\n    }: Props,\n    forwardedRef: ForwardedRef<HTMLInputElement | null>,\n  ) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    useImperativeHandle(forwardedRef, () => inputRef.current!);\n\n    const autocompleteMenu = useRef<HTMLDivElement>(null);\n\n    const [isInputFocused, setIsInputFocused] = useState(false);\n    const [focusedOption, setFocusedOption] = useState(-1);\n\n    const filteredOptions = useMemo(\n      () =>\n        options.filter(\n          (option) => option.toLowerCase().trim().includes(value.toLowerCase().trim()) && option !== value,\n        ),\n      [options, value],\n    );\n\n    const handleKeyDown: KeyboardEventHandler<HTMLInputElement> = (e) => {\n      if (e.code === 'ArrowUp' || e.code === 'ArrowDown') {\n        if (filteredOptions.length) {\n          e.preventDefault();\n          const newIndex = nextIndex(filteredOptions, focusedOption, e.code === 'ArrowUp' ? -1 : 1);\n          setFocusedOption(newIndex);\n\n          const option = autocompleteMenu.current?.querySelector(`[data-index=\"${newIndex}\"]`) as HTMLDivElement;\n\n          option?.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        } else {\n          inputRef.current?.blur();\n          keyboardNavigationChangeFocus?.(e.code === 'ArrowUp' ? -1 : 1);\n        }\n      } else if (e.code === 'Enter') {\n        const option = filteredOptions[focusedOption];\n        if (option) {\n          setFocusedOption(-1);\n          onChange(option);\n        } else {\n          inputRef.current?.blur();\n        }\n      }\n    };\n\n    const handleBlur = () => {\n      setTimeout(() => {\n        setIsInputFocused(false);\n        onBlur?.();\n      }, 300);\n    };\n\n    return (\n      <Container className={className}>\n        <Input\n          onFocus={() => setIsInputFocused(true)}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          onChange={onChange}\n          value={value}\n          focused={focused}\n          label={label}\n          disabled={disabled}\n          ref={inputRef}\n          placeholder={placeholder}\n          {...restProps}\n        />\n        {isInputFocused && !!filteredOptions.length && (\n          <AutocompleteMenu ref={autocompleteMenu} role=\"listbox\">\n            {filteredOptions.map((option, index) => (\n              <AutocompleteMenuitem\n                role=\"listitem\"\n                data-index={index}\n                data-focused={index === focusedOption}\n                key={option}\n                focused={index === focusedOption}\n                onClick={() => {\n                  onChange(option);\n                  setFocusedOption(-1);\n                  inputRef.current?.blur();\n                }}>\n                {option}\n              </AutocompleteMenuitem>\n            ))}\n          </AutocompleteMenu>\n        )}\n      </Container>\n    );\n  },\n);\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst AutocompleteMenu = styled.div`\n  margin-top: 0.1em;\n  position: absolute;\n  width: 100%;\n  background: black;\n  max-height: ${(1 + 2 * 0.3) * 4}em;\n  overflow-y: auto;\n  z-index: 2;\n`;\n\nconst AutocompleteMenuitem = styled.div<{ focused: boolean }>`\n  ${typography};\n  padding: 0.3em;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: ${(props) => (props.focused ? styles.colors.text.active : 'white')};\n  cursor: pointer;\n`;\n\ninterface TestWrapperProps {\n  label: string;\n  options: string[];\n  focused: boolean;\n}\n\nexport const AutocompleteTestWrapper = ({ label, options, focused }: TestWrapperProps) => {\n  const [value, setValue] = useState('');\n  return <Autocomplete value={value} onChange={setValue} label={label} options={options} focused={focused} />;\n};\n","import styled from '@emotion/styled';\nimport { Autocomplete } from 'Elements/Autocomplete';\nimport { Switcher } from 'Elements/Switcher';\nimport events from 'GameEvents/GameEvents';\nimport { useEventListener } from 'GameEvents/hooks';\nimport { PlayerEntity } from 'Players/PlayersManager';\nimport { MAX_NAME_LENGTH } from 'consts';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { PlayerSetup, SongPreview } from 'interfaces';\nimport { useRef, useState } from 'react';\n\ninterface Props {\n  multipleTracks: boolean;\n  player: PlayerEntity | undefined;\n  songPreview: SongPreview;\n  onChange: (setup: PlayerSetup) => void;\n  setup: PlayerSetup;\n  playerNames: string[];\n  register: ReturnType<typeof useKeyboardNav>['register'];\n}\n\nconst getTrackName = (tracks: SongPreview['tracks'], index: number) => tracks[index]?.name ?? `Track ${index + 1}`;\n\nexport default function SinglePlayer({\n  multipleTracks,\n  player,\n  songPreview,\n  playerNames,\n  register,\n  onChange,\n  setup,\n}: Props) {\n  const [inputTouched, setInputTouched] = useState(false);\n  const nameRef = useRef<HTMLInputElement | null>(null);\n  // Force update when the name changes\n  useEventListener(events.playerNameChanged);\n\n  if (player === undefined) {\n    return null;\n  }\n\n  const togglePlayerTrack = () =>\n    onChange({ number: player.number, track: (setup.track + 1) % songPreview.tracksCount });\n\n  const onNameChange = (newName: string) => {\n    setInputTouched(true);\n    player.setName(newName);\n  };\n\n  const isDefaultName = !inputTouched;\n  const currentName = player.getName();\n\n  return (\n    <>\n      <PlayerName\n        maxLength={MAX_NAME_LENGTH}\n        className=\"ph-no-capture\"\n        value={isDefaultName ? '' : currentName}\n        placeholder={isDefaultName ? currentName : undefined}\n        options={playerNames}\n        onChange={onNameChange}\n        label=\"Name:\"\n        ref={nameRef}\n        {...register(`player-${player.number}-name`, () => nameRef.current?.focus())}\n      />\n      {multipleTracks && (\n        <Track\n          {...register(`player-${player.number}-track-setting`, togglePlayerTrack, 'Change track')}\n          label=\"Track\"\n          value={getTrackName(songPreview.tracks, setup.track)}\n          data-test-value={setup.track + 1}\n        />\n      )}\n    </>\n  );\n}\n\nconst PlayerName = styled(Autocomplete)`\n  input {\n    font-size: 4.5rem;\n  }\n\n  [role='listbox'] {\n    max-height: ${6 * (4.5 + 0.3)}rem;\n  }\n`;\nconst Track = styled(Switcher)`\n  font-size: 4.5rem;\n  padding: 1.1rem;\n`;\n","import styled from '@emotion/styled';\nimport { Button } from 'Elements/Button';\nimport { typography } from 'Elements/cssMixins';\nimport gameEvents from 'GameEvents/GameEvents';\nimport { useEventEffect } from 'GameEvents/hooks';\nimport PlayersManager from 'Players/PlayersManager';\nimport InputManager from 'Scenes/Game/Singing/Input/InputManager';\nimport SelectInputModal from 'Scenes/SelectInput/SelectInputModal';\nimport { MicSetupPreferenceSetting, MobilePhoneModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport SinglePlayer from 'Scenes/SingASong/SongSelection/SongSettings/PlayerSettings/SinglePlayer';\nimport { PLAYER_NAMES_SESSION_STORAGE_KEY } from 'hooks/players/consts';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { PlayerSetup, SongPreview } from 'interfaces';\nimport { useEffect, useMemo, useState } from 'react';\n\ninterface Props {\n  songPreview: SongPreview;\n  onNextStep: (players: PlayerSetup[]) => void;\n  keyboardControl: boolean;\n  onExitKeyboardControl: () => void;\n}\n\nexport default function PlayerSettings({ songPreview, onNextStep, keyboardControl, onExitKeyboardControl }: Props) {\n  const [mobilePhoneMode] = useSettingValue(MobilePhoneModeSetting);\n  const [storedPreference] = useSettingValue(MicSetupPreferenceSetting);\n\n  const players = PlayersManager.getPlayers();\n  const multipleTracks = !mobilePhoneMode && players.length === 2 && songPreview.tracksCount > 1;\n  const initialisePlayerSetup = () =>\n    players.map((player, index) => ({\n      number: player.number,\n      track: multipleTracks ? Math.min(index, songPreview.tracksCount - 1) : 0,\n    }));\n  const [playerSetup, setPlayerSetup] = useState<PlayerSetup[]>(initialisePlayerSetup());\n\n  useEventEffect([gameEvents.playerAdded, gameEvents.playerRemoved], () => setPlayerSetup(initialisePlayerSetup()));\n\n  const playerList = players.map(\n    (player, index) => playerSetup.find((setup) => setup.number === player.number) ?? initialisePlayerSetup()[index],\n  );\n\n  const playerNames = useMemo<string[]>(\n    () => JSON.parse(sessionStorage.getItem(PLAYER_NAMES_SESSION_STORAGE_KEY)!) ?? [],\n    [],\n  );\n\n  const updatePlayer = (playerNumber: number) => (newSetup: PlayerSetup) => {\n    setPlayerSetup((current) => current.map((setup) => (setup.number === playerNumber ? newSetup : setup)));\n  };\n\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!showModal) {\n      InputManager.startMonitoring();\n    }\n  }, [showModal]);\n\n  const { register, focusElement } = useKeyboardNav({\n    enabled: keyboardControl && !showModal,\n    onBackspace: onExitKeyboardControl,\n  });\n\n  const startSong = () => {\n    onNextStep(playerList);\n  };\n\n  const areInputsConfigured = !!storedPreference && storedPreference !== 'skip';\n\n  return (\n    <>\n      {showModal && (\n        <SelectInputModal\n          closeButtonText={areInputsConfigured ? 'Continue to the song' : 'Continue to player setup'}\n          onClose={() => {\n            setShowModal(false);\n\n            if (areInputsConfigured) {\n              focusElement('play');\n            }\n          }}\n        />\n      )}\n      {playerList.map((setup, index) => (\n        <PlayerSettingContainer key={setup.number}>\n          <PlayerSettingTitle>Player {index + 1}</PlayerSettingTitle>\n          <div>\n            <SinglePlayer\n              multipleTracks={multipleTracks}\n              player={PlayersManager.getPlayer(setup.number)}\n              setup={setup}\n              onChange={updatePlayer(setup.number)}\n              playerNames={playerNames}\n              register={register}\n              songPreview={songPreview}\n            />\n          </div>\n        </PlayerSettingContainer>\n      ))}\n      {areInputsConfigured && (\n        <PlayButton {...register('play-song-button', startSong, undefined, true)}>Play</PlayButton>\n      )}\n      <PlayButton {...register('select-inputs-button', () => setShowModal(true), undefined, false)}>\n        Setup mics\n      </PlayButton>\n    </>\n  );\n}\n\nconst PlayerSettingContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst PlayButton = styled(Button)<{ focused: boolean }>`\n  padding: 0.5rem 9rem;\n  font-size: 4.3rem;\n`;\n\nconst PlayerSettingTitle = styled.span`\n  ${typography};\n  padding: 1.3rem;\n  font-size: 4.5rem;\n`;\n","import styled from '@emotion/styled';\nimport events from 'GameEvents/GameEvents';\nimport GameSettings from 'Scenes/SingASong/SongSelection/SongSettings/GameSettings';\nimport MicCheck from 'Scenes/SingASong/SongSelection/SongSettings/MicCheck';\nimport PlayerSettings from 'Scenes/SingASong/SongSelection/SongSettings/PlayerSettings';\nimport { PlayerSetup, SingSetup, SongPreview } from 'interfaces';\nimport { useState } from 'react';\n\ninterface Props {\n  songPreview: SongPreview;\n  onPlay: (setup: SingSetup & { song: SongPreview }) => void;\n  keyboardControl: boolean;\n  onExitKeyboardControl: () => void;\n}\n\nexport default function SongSettings({ songPreview, onPlay, keyboardControl, onExitKeyboardControl }: Props) {\n  const [singSetup, setSingSetup] = useState<SingSetup | null>(null);\n  const [step, setStep] = useState<'song' | 'players'>('song');\n\n  const onSongStepFinish = (setup: SingSetup) => {\n    setSingSetup(setup);\n    setStep('players');\n  };\n  const startSong = (players: PlayerSetup[]) => {\n    if (!singSetup) return;\n    const finalSetup = {\n      ...singSetup,\n      players: players,\n    };\n    events.songStarted.dispatch(songPreview, finalSetup);\n    onPlay({ song: songPreview, ...finalSetup });\n  };\n  return (\n    <Container>\n      <MicCheck style={step === 'players' ? { viewTransitionName: 'player-mic-check-container' } : undefined} />\n      <GameConfiguration>\n        {step === 'song' && (\n          <GameSettings\n            songPreview={songPreview}\n            onNextStep={onSongStepFinish}\n            keyboardControl={keyboardControl}\n            onExitKeyboardControl={onExitKeyboardControl}\n          />\n        )}\n        {step === 'players' && (\n          <PlayerSettings\n            songPreview={songPreview}\n            onNextStep={startSong}\n            keyboardControl={keyboardControl}\n            onExitKeyboardControl={() => setStep('song')}\n          />\n        )}\n      </GameConfiguration>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: space-between;\n  width: 100%;\n\n  hr {\n    margin: 1rem;\n    opacity: 0.25;\n  }\n`;\n\nconst GameConfiguration = styled.div`\n  width: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 1.25rem;\n`;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport VideoPlayer, { VideoPlayerRef, VideoState } from 'Elements/VideoPlayer';\nimport { GraphicSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport {\n  ExpandedData,\n  FinalSongCard,\n  SongListEntryDetailsArtist,\n  SongListEntryDetailsTitle,\n} from 'Scenes/SingASong/SongSelection/SongCard';\nimport SongSettings from 'Scenes/SingASong/SongSelection/SongSettings';\nimport useDebounce from 'hooks/useDebounce';\nimport useViewportSize from 'hooks/useViewportSize';\nimport { SingSetup, SongPreview } from 'interfaces';\nimport { ComponentProps, PropsWithChildren, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\n\ninterface Props {\n  songPreview: SongPreview;\n  onPlay: (setup: SingSetup & { song: SongPreview }) => void;\n  keyboardControl: boolean;\n  onExitKeyboardControl: () => void;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  focusEffect: boolean;\n}\n\nconst PREVIEW_LENGTH = 30;\n\nexport default function SongPreviewComponent({\n  songPreview,\n  top,\n  left,\n  width,\n  height,\n  keyboardControl,\n  onExitKeyboardControl,\n  onPlay,\n  focusEffect,\n}: Props) {\n  const [showVideo, setShowVideo] = useState(false);\n  const player = useRef<VideoPlayerRef | null>(null);\n  const { width: windowWidth, height: windowHeight } = useViewportSize();\n\n  const expanded = keyboardControl;\n\n  // need to use layout effect otherwise newly selected song name is displayed briefly before the element is removed\n  useLayoutEffect(() => {\n    setShowVideo(false);\n  }, [songPreview.video]);\n\n  const start = songPreview.previewStart ?? (songPreview.videoGap ?? 0) + 60;\n  const end = songPreview.previewEnd ?? start + PREVIEW_LENGTH;\n  const undebounced = useMemo(\n    () => [songPreview.video, start, end, songPreview.volume] as const,\n    [songPreview.video, start, end, songPreview.volume],\n  );\n  const [videoId, previewStart, previewEnd, volume] = useDebounce(undebounced, 350);\n\n  useEffect(() => {\n    player.current?.loadVideoById({\n      videoId: videoId,\n      startSeconds: previewStart,\n      endSeconds: previewEnd,\n    });\n  }, [videoId, player, previewStart, previewEnd]);\n\n  const videoWidth = expanded ? windowWidth : width;\n  const videoHeight = expanded ? windowHeight : height;\n\n  const finalHeight = expanded ? Math.min((windowWidth! / 20) * 9, windowHeight! * (4 / 5)) : height;\n\n  useEffect(() => {\n    player.current?.setSize(videoWidth, videoHeight);\n  }, [videoWidth, videoHeight, keyboardControl]);\n\n  return (\n    <>\n      {expanded && <Backdrop onClick={onExitKeyboardControl} />}\n      {!expanded && showVideo && (\n        <SongBPMIndicator width={videoWidth} height={videoHeight} left={left} top={top} song={songPreview} />\n      )}\n      <SongPreviewContainer\n        background={expanded || showVideo}\n        video={\n          <Video show={showVideo} expanded={expanded} height={finalHeight} id=\"preview-video-container\">\n            <VideoPlayer\n              width={0}\n              height={0}\n              disablekb\n              ref={player}\n              video={''}\n              volume={volume}\n              onStateChange={(state) => {\n                if (state === VideoState.ENDED) {\n                  player.current?.seekTo(start);\n                  player.current?.playVideo();\n                } else if (state === VideoState.PLAYING) {\n                  setShowVideo(true);\n                }\n              }}\n            />\n          </Video>\n        }\n        focused\n        song={songPreview}\n        top={top}\n        left={left}\n        width={videoWidth}\n        height={finalHeight}\n        showVideo={showVideo}\n        expanded={expanded}\n        data-test=\"song-preview\"\n        data-song={songPreview.id}>\n        <Content expanded={expanded}>\n          {expanded && (\n            <SongSettings\n              songPreview={songPreview}\n              onPlay={onPlay}\n              keyboardControl={keyboardControl}\n              onExitKeyboardControl={onExitKeyboardControl}\n            />\n          )}\n        </Content>\n      </SongPreviewContainer>\n    </>\n  );\n}\n\nconst BaseSongPreviewContainer = styled(FinalSongCard)<{\n  width: number;\n  height: number;\n  expanded: boolean;\n  showVideo: boolean;\n}>`\n  --preview-padding: 5rem;\n  width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n  position: absolute;\n  z-index: ${(props) => (props.expanded ? 201 : 3)};\n  overflow: hidden;\n  visibility: ${(props) => (props.expanded || props.showVideo ? 'visible' : 'hidden')};\n\n  ${(props) =>\n    props.expanded\n      ? css`\n          border: 0;\n          border-radius: 0;\n          position: fixed;\n\n          padding: var(--preview-padding);\n        `\n      : css`\n          pointer-events: none;\n          ${props.showVideo && props.theme.graphicSetting === 'high'\n            ? 'animation: rhythmPulse 1s infinite'\n            : 'scale: 1.2'};\n        `};\n\n  @keyframes rhythmPulse {\n    0% {\n      transform: scale(1.2);\n    }\n    15% {\n      transform: scale(1.25);\n    }\n    100% {\n      transform: scale(1.2);\n    }\n  }\n  view-transition-name: song-preview;\n\n  ${SongListEntryDetailsArtist} {\n    view-transition-name: song-preview-artist;\n  }\n\n  ${SongListEntryDetailsTitle} {\n    view-transition-name: song-preview-title;\n  }\n\n  ${ExpandedData} {\n    view-transition-name: song-preview-expanded-data;\n  }\n`;\n\ninterface SongPreviewContainerProps\n  extends ComponentProps<typeof BaseSongPreviewContainer>,\n    PropsWithChildren<{\n      top: number;\n      left: number;\n      song: SongPreview;\n    }> {}\n\nconst SongPreviewContainer = (props: SongPreviewContainerProps) => {\n  const realBpm = props.song.realBpm ?? (props.song.bpm > 300 ? props.song.bpm / 4 : props.song.bpm / 2);\n\n  return (\n    <BaseSongPreviewContainer\n      style={{\n        top: props.expanded ? `calc(50vh - ${props.height}px / 2)` : props.top,\n        left: props.expanded ? 0 : props.left,\n        animationDuration: `${60 / realBpm}s`,\n      }}\n      {...props}\n    />\n  );\n};\n\nconst Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.8);\n  width: 100vw;\n  height: 100vh;\n  z-index: 201;\n`;\n\nconst Video = styled.div<{ show: boolean; expanded: boolean; height: number }>`\n  ${(props) =>\n    props.expanded\n      ? css`\n          position: fixed;\n          inset: 0;\n          clip-path: inset(calc((100vh - ${props.height}px) / 2) 0);\n        `\n      : css`\n          position: absolute;\n          top: 0;\n          left: 0;\n          background-image: none !important;\n          border-radius: 0.5rem;\n        `}\n\n  div {\n    opacity: ${({ show }) => (show ? 1 : 0)};\n    transition: ${({ show, expanded }) => (show || expanded ? 1000 : 0)}ms;\n  }\n`;\n\nconst Content = styled.div<{ expanded: boolean }>`\n  inset: auto var(--preview-padding);\n  position: fixed; /* makes sure Autocomplete dropdown doesn't get clipped */\n  z-index: 100;\n  ${(props) => !props.expanded && `transform: scale(0.1);`}\n\n  border-radius: 0.5rem;\n\n  view-transition-name: song-preview-content;\n`;\n\nconst BaseSongBPMIndicator = styled.div<{ width: number; height: number }>`\n  background: white;\n  width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n  z-index: 2;\n  top: 0;\n  left: 0;\n  position: absolute;\n  animation: bpm 1s infinite;\n  border-radius: 0.5rem;\n  pointer-events: none;\n\n  @keyframes bpm {\n    0% {\n      transform: scale(1.15);\n      opacity: 1;\n    }\n    100% {\n      transform: scale(1.45);\n      opacity: 0;\n    }\n  }\n`;\n\nconst SongBPMIndicator = (\n  props: {\n    top: number;\n    left: number;\n    song: SongPreview;\n  } & ComponentProps<typeof BaseSongBPMIndicator>,\n) => {\n  const [graphicSetting] = useSettingValue(GraphicSetting);\n\n  if (graphicSetting === 'low') return null;\n\n  const realBpm = props.song.realBpm ?? (props.song.bpm > 300 ? props.song.bpm / 4 : props.song.bpm / 2);\n  return (\n    <BaseSongBPMIndicator\n      width={props.width}\n      height={props.height}\n      style={{\n        left: props.left,\n        top: props.top,\n        animationDuration: `${60 / realBpm}s`,\n      }}\n    />\n  );\n};\n","import { useEffect } from 'react';\n\nlet mounts = 0;\n\nexport default function useBlockScroll() {\n  useEffect(() => {\n    document.body.classList.add('blockOverflow');\n    document.documentElement.classList.add('blockOverflow');\n    mounts++;\n\n    return () => {\n      mounts--;\n\n      if (mounts === 0) {\n        document.body.classList.remove('blockOverflow');\n        document.documentElement.classList.remove('blockOverflow');\n      }\n    };\n  }, []);\n}\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { useBackground } from 'Elements/LayoutWithBackground';\nimport Loader from 'Elements/Loader';\nimport { focused, typography } from 'Elements/cssMixins';\nimport events from 'GameEvents/GameEvents';\nimport { useEventEffect } from 'GameEvents/hooks';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { MobilePhoneModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport useSongSelection from 'Scenes/SingASong/SongSelection/Hooks/useSongSelection';\nimport Playlists from 'Scenes/SingASong/SongSelection/Playlists';\nimport QuickSearch from 'Scenes/SingASong/SongSelection/QuickSearch';\nimport SelectRandomTip from 'Scenes/SingASong/SongSelection/SelectRandomTip';\nimport { FinalSongCard } from 'Scenes/SingASong/SongSelection/SongCard';\nimport SongPreview from 'Scenes/SingASong/SongSelection/SongPreview';\nimport useBackgroundMusic from 'hooks/useBackgroundMusic';\nimport useBlockScroll from 'hooks/useBlockScroll';\nimport { REGULAR_ALPHA_CHARS } from 'hooks/useKeyboard';\nimport usePrevious from 'hooks/usePrevious';\nimport useViewportSize from 'hooks/useViewportSize';\nimport { SingSetup, SongPreview as SongPreviewEntity } from 'interfaces';\nimport { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\ninterface Props {\n  onSongSelected: (songSetup: SingSetup & { song: SongPreviewEntity }) => void;\n  preselectedSong: string | null;\n}\n\nconst focusMultiplier = 1.2;\nconst MAX_SONGS_PER_ROW = 4;\n\nexport default function SongSelection({ onSongSelected, preselectedSong }: Props) {\n  const [mobilePhoneMode] = useSettingValue(MobilePhoneModeSetting);\n  const songsPerRow = mobilePhoneMode ? MAX_SONGS_PER_ROW - 1 : MAX_SONGS_PER_ROW;\n\n  useBackgroundMusic(false);\n  useBackground(true);\n  useBlockScroll();\n\n  const [{ previewTop, previewLeft, previewWidth, previewHeight }, setPositions] = useState({\n    previewTop: 0,\n    previewLeft: 0,\n    previewWidth: 0,\n    previewHeight: 0,\n  });\n  const {\n    focusedGroup,\n    focusedSong,\n    moveToSong,\n    groupedSongList,\n    keyboardControl,\n    songPreview,\n    setKeyboardControl,\n    setFilters,\n    filters,\n    setShowFilters,\n    showFilters,\n    prefilteredList,\n    isLoading,\n  } = useSongSelection(preselectedSong, songsPerRow);\n\n  const onSearchSong = (e: KeyboardEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    setFilters({\n      search: e.key,\n    });\n  };\n  useHotkeys(REGULAR_ALPHA_CHARS, onSearchSong, { enabled: !filters.search && keyboardControl });\n\n  const onRemoteSearch = useCallback(\n    (search: string) => {\n      if (keyboardControl) {\n        setFilters({ search });\n      }\n    },\n    [keyboardControl],\n  );\n  useEventEffect(events.remoteSongSearch, onRemoteSearch);\n\n  const list = useRef<HTMLDivElement | null>(null);\n  const { width, handleResize } = useViewportSize();\n  const previouslyFocusedGroup = usePrevious(focusedGroup);\n  const previouslyFocusedSong = usePrevious(focusedSong);\n\n  useEffect(() => {\n    const selector = (group: string, index: number) => `[data-group-letter=\"${group}\"] [data-index=\"${index}\"]`;\n    handleResize(); // Recalculate width/height to account possible scrollbar appearing\n\n    const previousSong = list.current?.querySelector(\n      selector(previouslyFocusedGroup, previouslyFocusedSong),\n    ) as HTMLDivElement;\n    const song = list.current?.querySelector(selector(focusedGroup, focusedSong)) as HTMLDivElement;\n    if (song) {\n      if (!previousSong || previousSong.offsetTop !== song.offsetTop) {\n        song.scrollIntoView?.({\n          behavior: 'smooth',\n          inline: 'center',\n          block: 'center',\n        });\n      }\n      setPositions({\n        previewLeft: song.offsetLeft,\n        previewTop: song.offsetTop,\n        previewWidth: song.offsetWidth,\n        previewHeight: song.offsetHeight,\n      });\n    }\n  }, [width, list, focusedSong, focusedGroup, groupedSongList]);\n\n  const expandSong = useCallback(() => setKeyboardControl(false), [setKeyboardControl]);\n\n  if (!groupedSongList || !width) return <>Loading</>;\n\n  if (isLoading) {\n    return (\n      <LoaderContainer>\n        <Loader size=\"15em\" color=\"secondary\" />\n      </LoaderContainer>\n    );\n  }\n\n  return (\n    <Container songsPerRow={songsPerRow}>\n      {filters.search ? (\n        <QuickSearch showFilters={showFilters} onSongFiltered={setFilters} filters={filters} />\n      ) : (\n        <SelectRandomTip keyboardControl={keyboardControl} />\n      )}\n      <SongListContainer ref={list} active={keyboardControl} data-test=\"song-list-container\" dim={showFilters}>\n        {groupedSongList.length === 0 && <NoSongsFound>No songs found</NoSongsFound>}\n        {songPreview && (\n          <SongPreview\n            songPreview={songPreview}\n            onPlay={onSongSelected}\n            keyboardControl={!keyboardControl}\n            onExitKeyboardControl={() => setKeyboardControl(true)}\n            top={previewTop}\n            left={previewLeft}\n            width={previewWidth}\n            height={previewHeight}\n            focusEffect={!showFilters}\n          />\n        )}\n        {groupedSongList.map((group) => (\n          <SongsGroupContainer\n            {...(showFilters || !keyboardControl ? { 'data-unfocusable': true } : {})}\n            key={group.letter}\n            data-group-letter={group.letter}\n            highlight={group.letter === 'New'}>\n            <SongsGroupHeader>{group.letter}</SongsGroupHeader>\n            <SongsGroup>\n              {group.songs.map(({ song, index }) => (\n                <SongListEntry\n                  key={song.id}\n                  song={song}\n                  handleClick={focusedSong === index ? expandSong : moveToSong}\n                  focused={!showFilters && keyboardControl && index === focusedSong}\n                  index={index}\n                  data-index={index}\n                  data-focused={!showFilters && keyboardControl && index === focusedSong}\n                  data-test={`song-${song.id}${group.isNew ? '-new-group' : ''}`}\n                />\n              ))}\n            </SongsGroup>\n          </SongsGroupContainer>\n        ))}\n        <AddSongs>\n          Missing a song? Try <a href=\"/convert\">adding one</a> yourself!\n        </AddSongs>\n      </SongListContainer>\n      <Playlists\n        setFilters={setFilters}\n        active={showFilters}\n        closePlaylist={setShowFilters}\n        prefilteredList={prefilteredList}\n      />\n    </Container>\n  );\n}\n\nconst AddSongs = styled.span`\n  ${typography};\n  text-align: center;\n  font-size: 5rem;\n  margin-top: 10rem;\n`;\n\nconst Container = styled.div<{ songsPerRow: number }>`\n  display: flex;\n  flex-direction: row;\n  max-height: 100vh;\n  --song-list-gap: 3.5rem;\n  --song-item-width: ${(props) =>\n    `calc(${100 / props.songsPerRow}% - ((${props.songsPerRow - 1} / ${props.songsPerRow}) * var(--song-list-gap)))`};\n  --song-item-ratio: calc(16 / 9 * (4 / ${(props) => props.songsPerRow}));\n`;\n\nconst SongsGroupContainer = styled.div<{ highlight: boolean }>`\n  padding: 0 4.5rem 0 11rem;\n  ${(props) =>\n    props.highlight &&\n    css`\n      background: rgba(0, 0, 0, 0.5);\n      padding-bottom: 3rem;\n      border-bottom: 0.2rem solid black;\n\n      ${SongsGroupHeader} {\n        @keyframes new-song-group-header {\n          0%,\n          100% {\n            transform: scale(1);\n          }\n          50% {\n            transform: scale(1.1);\n          }\n        }\n        animation: new-song-group-header 600ms ease-in-out infinite both;\n        background: #ffffff;\n      }\n    `}\n`;\n\nconst NoSongsFound = styled.div`\n  ${typography};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n\n  font-size: 10rem;\n`;\n\nconst SongsGroupHeader = styled.div`\n  ${typography};\n  display: inline-block;\n  padding: 0.5rem 1rem;\n  margin-bottom: 2rem;\n  font-size: 3.5rem;\n  position: sticky;\n  z-index: 1;\n  top: calc(-1 * var(--song-list-gap));\n  color: ${styles.colors.text.active};\n  background: rgba(0, 0, 0, 0.7);\n`;\n\nconst SongListContainer = styled.div<{ active: boolean; dim: boolean }>`\n  position: relative;\n  flex: 1 1 auto;\n  display: flex;\n  flex-direction: column;\n  gap: var(--song-list-gap);\n  padding: 4.5rem 0;\n  overflow-y: auto;\n  overflow-x: clip;\n  box-sizing: border-box;\n  min-height: 100vh;\n  max-height: 100vh;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  transition: opacity 500ms;\n  opacity: ${(props) => (props.dim ? 0.5 : 1)};\n`;\n\nconst SongsGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: var(--song-list-gap);\n`;\n\nconst SongListEntry = memo(styled(FinalSongCard)`\n  cursor: pointer;\n  flex-basis: var(--song-item-width);\n  aspect-ratio: var(--song-item-ratio);\n\n  ${(props) =>\n    props.theme.graphicSetting === 'high' &&\n    css`\n      transition: 300ms;\n    `}\n  transform: scale(${(props) => (props.focused ? focusMultiplier : 1)});\n  ${(props) => props.focused && 'z-index: 2;'}\n  ${(props) => props.focused && focused}\n\n    content-visibility: auto;\n  contain-intrinsic-size: calc(var(--song-item-width) * (1 / var(--song-item-ratio)));\n`);\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n","import ExcludeLanguagesView from 'Scenes/ExcludeLanguages/ExcludeLanguagesView';\nimport { ExcludedLanguagesSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport SongSelection from 'Scenes/SingASong/SongSelection/SongSelection';\nimport { ComponentProps, useState } from 'react';\n\nfunction SingASong(props: ComponentProps<typeof SongSelection>) {\n  const [excludedLanguages, setExcludedLanguages] = useSettingValue(ExcludedLanguagesSetting);\n  const [languageSelection, setLanguageSelection] = useState(excludedLanguages === null);\n  const goBack = () => {\n    setExcludedLanguages(excludedLanguages ?? []);\n    setLanguageSelection(false);\n  };\n\n  return languageSelection ? (\n    <ExcludeLanguagesView onClose={goBack} closeText=\"Continue to Song Selection\" />\n  ) : (\n    <SongSelection {...props} />\n  );\n}\n\nexport default SingASong;\n","import { useEffect } from 'react';\n\nexport default function useFullscreen() {\n  useEffect(() => {\n    try {\n      process.env.NODE_ENV !== 'development' && document.body.requestFullscreen().catch(console.info);\n    } catch (e) {}\n  }, []);\n}\n","export default \"__VITE_ASSET__0906c539__\"","const sleep = (ms: number) => new Promise<void>((resolve) => setTimeout(resolve, ms));\n\nexport default sleep;\n","import styled from '@emotion/styled';\nimport { CheckCircleOutline } from '@mui/icons-material';\nimport Loader from 'Elements/Loader';\nimport { typography } from 'Elements/cssMixins';\nimport events from 'GameEvents/GameEvents';\nimport { useEventEffect, useEventListenerSelector } from 'GameEvents/hooks';\nimport PlayersManager from 'Players/PlayersManager';\nimport SinglePlayer from 'Scenes/SingASong/SongSelection/SongSettings/MicCheck/SinglePlayer';\nimport { waitFinished } from 'SoundManager';\nimport backgroundMusic from 'assets/459342__papaninkasettratat__cinematic-music-short.mp3';\nimport { SyntheticEvent, useEffect, useRef, useState } from 'react';\nimport CountUp from 'react-countup';\nimport sleep from 'utils/sleep';\n\ninterface Props {\n  onFinish: () => void;\n}\n\nconst AUTOSTART_TIMEOUT_S = 15;\n\nfunction WaitForReadiness({ onFinish }: Props) {\n  const audio = useRef<HTMLAudioElement>(null);\n  const [areAllPlayersReady, setAreAllPlayersReady] = useState(false);\n\n  const [confirmedPlayers, setConfirmedPlayers] = useState<string[]>([]);\n  useEventEffect(events.readinessConfirmed, (deviceId) => {\n    setConfirmedPlayers((current) => [...current, deviceId]);\n  });\n\n  const players = useEventListenerSelector([events.inputListChanged, events.readinessConfirmed], () => {\n    return PlayersManager.getPlayers().map(\n      (player, index) => [player.input.deviceId!, player.getName(), player] as const,\n    );\n  });\n\n  useEffect(() => {\n    (async () => {\n      // can't use `areAllPlayersReady` as it would need to be specified as useEffect dependency\n      let allInputsReady = false;\n      const inputsReady = PlayersManager.requestReadiness().then(() => {\n        allInputsReady = true;\n        setAreAllPlayersReady(true);\n      });\n      const minTimeElapsed = sleep(1_500);\n      const maxTimeElapsed = sleep(AUTOSTART_TIMEOUT_S * 1_000);\n\n      // Only start the music if waiting for readiness takes some time\n      await sleep(250);\n      if (!allInputsReady) {\n        await audio?.current?.play();\n      }\n\n      await Promise.race([Promise.all([inputsReady, minTimeElapsed]), maxTimeElapsed]);\n      if (!audio?.current?.paused) waitFinished.play();\n      await sleep(500);\n      audio?.current?.pause();\n      await sleep(1000);\n      onFinish();\n    })();\n  }, []);\n\n  const playerStatuses = players.map(([deviceId, name, player]) => ({\n    confirmed: confirmedPlayers.includes(deviceId),\n    name,\n    player: player,\n  }));\n\n  return (\n    <>\n      <WaitingForReady>\n        {!areAllPlayersReady && (\n          <span>\n            Waiting for all players to click <strong>\"Ready\"</strong>\n          </span>\n        )}\n        <PlayerList>\n          {playerStatuses.map(({ confirmed, name, player }, index) => (\n            <PlayerEntry\n              className=\"ph-no-capture\"\n              key={index}\n              data-test=\"player-confirm-status\"\n              data-name={name}\n              data-confirmed={confirmed}>\n              {!areAllPlayersReady && (\n                <ConfirmStatus>{confirmed ? <CheckCircleOutline /> : <Loader color=\"info\" size=\"1em\" />}</ConfirmStatus>\n              )}{' '}\n              <SinglePlayer player={player} />\n            </PlayerEntry>\n          ))}\n        </PlayerList>\n        {!areAllPlayersReady && (\n          <TimeoutMessage>\n            The song will start automatically in{' '}\n            <strong>\n              <CountUp end={0} start={AUTOSTART_TIMEOUT_S} duration={AUTOSTART_TIMEOUT_S} useEasing={false} />\n            </strong>\n          </TimeoutMessage>\n        )}\n      </WaitingForReady>\n      <audio\n        src={backgroundMusic}\n        ref={audio}\n        hidden\n        autoPlay={false}\n        onPlay={(e: SyntheticEvent<HTMLAudioElement>) => {\n          e.currentTarget.volume = 0.8;\n        }}\n      />\n    </>\n  );\n}\n\nconst WaitingForReady = styled.div`\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  gap: 5rem;\n\n  font-size: 5rem;\n  ${typography};\n`;\n\nconst TimeoutMessage = styled.span`\n  font-size: 5rem;\n`;\n\nconst PlayerList = styled.div`\n  //margin-top: 5rem;\n  display: flex;\n  flex-direction: column;\n  gap: 5rem;\n  width: 50rem;\n  view-transition-name: player-mic-check-container;\n`;\n\nconst PlayerEntry = styled.div`\n  display: flex;\n  align-items: center;\n  //justify-content: center;\n  gap: 2rem;\n  transform: scale(1.5);\n`;\n\nconst ConfirmStatus = styled.span`\n  svg {\n    width: 5rem;\n    height: 5rem;\n    stroke: black;\n  }\n`;\n\nexport default WaitForReadiness;\n","import { NotesSection, Section, Song } from 'interfaces';\nimport { cloneDeep, range } from 'lodash-es';\nimport getSongBeatLength from 'Songs/utils/getSongBeatLength';\nimport isNotesSection from 'Songs/utils/isNotesSection';\nimport { getFirstNoteStartFromSections, getLastNoteEndFromSections } from 'Songs/utils/notesSelectors';\n\nconst MAX_SECTION_PAUSE_MS = 250;\n\nconst getSingableBeats = (sections: Section[], start: number = 0, end: number = Infinity) =>\n  sections\n    .filter(isNotesSection)\n    .filter((section) => getFirstNoteStartFromSections([section]) >= start)\n    .filter((section) => getLastNoteEndFromSections([section]) <= end)\n    .reduce((current, section) => current + section.notes.reduce((length, note) => length + note.length, 0), 0);\n\n// Join sections into segments - group of sections that have shorter than MAX_SECTION_PAUSE_MS pause between\nexport const segmentSections = (sections: Section[], beatLength: number): NotesSection[][] => {\n  const [firstSection, ...noteSections] = sections.filter(isNotesSection);\n\n  const segments: NotesSection[][] = [[firstSection]];\n\n  noteSections.forEach((section) => {\n    const lastSegment = segments.at(-1)!;\n\n    const lastSectionEnd = getLastNoteEndFromSections(lastSegment);\n    const firstSectionNoteStart = getFirstNoteStartFromSections([section]);\n    const difference = firstSectionNoteStart - lastSectionEnd;\n\n    if (difference * beatLength > MAX_SECTION_PAUSE_MS) {\n      segments.push([section]);\n    } else {\n      lastSegment.push(section);\n    }\n  });\n\n  return segments;\n};\n\nconst sum = (acc: number, elem: number) => acc + elem;\n\nconst calculateAmplitude = (groups: number[][]) => {\n  const sums = groups.map((group) => group.reduce(sum, 0));\n  return Math.max(...sums) - Math.min(...sums);\n};\n\nconst shiftSolution = (groups: number[][], at: number): number[][] => {\n  const result = cloneDeep(groups);\n  const takeFromLeft = (pos: number) => {\n    if (result[pos - 1].length < 2) return;\n    const left = result[pos - 1].pop()!;\n    result[pos].push(left);\n  };\n  const takeFromRight = (pos: number) => {\n    if (result[pos + 1]?.length < 2) return;\n    const [first, ...rest] = result[pos + 1];\n    result[pos].push(first);\n    result[pos + 1] = rest;\n  };\n\n  at % 2 === 1 ? takeFromLeft(Math.ceil(at / 2)) : takeFromRight(Math.ceil(at / 2));\n\n  return result;\n};\n\nconst arrSum = (arr: number[]) => arr.reduce(sum, 0);\n\nexport default function generatePlayerChanges(song: Song): number[][] {\n  const CHANGES_COUNT = 9;\n  const beatLength = getSongBeatLength(song);\n\n  return song.tracks.map((track) => {\n    if (track.sections.length < 3) return [];\n\n    const segments = segmentSections(track.sections, beatLength);\n\n    // array of groups of singable beats count -- each element is the total singable beats in a segment\n    // The goal is to for the groups to have as similar total count of singable beats as possible\n    let result: number[][] = [];\n\n    // todo replace this hacky algorithm with https://en.wikipedia.org/wiki/Multiway_number_partitioning\n    // STEP1:   Build initial groups by calculating \"ideal\" group length (aka amount of singable beats)\n    //          And try to have them as close to the ideal as possible (by either overflowing or \"underflowing\")\n    let currentBuffer = [getSingableBeats(segments[0])]; // A candidate for the next group\n    for (let i = 0; i < segments.length - 2; i++) {\n      // get the last segment already put in the result\n      const lastSegment = segments[result.flat().length - 1] ?? [];\n      // How many beats are left to sing\n      const singableBeats = getSingableBeats(track.sections, getLastNoteEndFromSections(lastSegment) ?? 0);\n      const idealSize = singableBeats / (1 + CHANGES_COUNT - result.length);\n\n      const segmentSingableBeatsCount = getSingableBeats(segments[i + 1]);\n\n      const bufferSum = arrSum(currentBuffer);\n\n      if (bufferSum + segmentSingableBeatsCount < idealSize) {\n        // If adding the current segment to the candidate doesn't move us past the ideal size, just add it\n        currentBuffer = [...currentBuffer, segmentSingableBeatsCount];\n      } else if (idealSize - bufferSum < bufferSum + segmentSingableBeatsCount - idealSize) {\n        // If the candidate is closer to ideal size, add it as a new group\n        result.push(currentBuffer);\n        currentBuffer = [segmentSingableBeatsCount];\n      } else {\n        // If the candidate with currently inspected segment is closer to ideal size, add it as a new group\n        result.push([...currentBuffer, segmentSingableBeatsCount]);\n        currentBuffer = [];\n      }\n    }\n\n    // STEP2:   Try to make groups more even by trying to move segments between groups and checking if it\n    //          resulted in smaller differences between longest and shortest group (aka amplitude)\n    for (let i = 0; i < 100; i++) {\n      const currentAmplitude = calculateAmplitude(result);\n      // Create alternative results (by shifting one segment between groups in either way)\n      // Note this doesn't guarantee creating best results as moving multiple segments at the same time\n      // isn't accounted for\n      const candidates = range((result.length - 2) * 2 + 2).map((at) => shiftSolution(result, at));\n      const candidatesAmplitudes = candidates.map(calculateAmplitude);\n      const minimalAmplitude = Math.min(...candidatesAmplitudes);\n      if (currentAmplitude <= minimalAmplitude) break; // If no results are better, give up\n      const minimalAmplitudeIndex = candidatesAmplitudes.indexOf(minimalAmplitude);\n      result = candidates[minimalAmplitudeIndex];\n    }\n\n    return result\n      .map((group) => group.length)\n      .reduce<number[]>((acc, length) => [...acc, (acc.at(-1) ?? 0) + length], [])\n      .map((index) => getLastNoteEndFromSections(segments[index - 1]));\n  });\n}\n","import { QrCode2 } from '@mui/icons-material';\nimport { useRef } from 'react';\nimport { randomInt } from 'utils/randomValue';\n\nconst data = [\n  <>\n    You can follow the updates and give feedback on the game through the Facebook Page:{' '}\n    <a href=\"https://www.facebook.com/allkaraoke.party\" target=\"_blank\" rel=\"noreferrer\">\n      <strong>fb.com/AllKaraoke.Party</strong>\n    </a>\n  </>,\n  <>\n    Start typing a name of a song in <strong>Song Selection</strong> to active Search feature\n  </>,\n  <>\n    Narrow down songs through <strong>playlists</strong> on the right in Song Selection\n  </>,\n  <>\n    Select <strong>Pass The Mic</strong> Game Mode to share the microphones and sing in a team\n  </>,\n  <>\n    Your scores and <strong>stats are saved</strong> in this browser - they will be available for the next party!\n  </>,\n  <>\n    You can remove irrelevant songs from the Song Selection in <strong>Edit Songs</strong> page\n  </>,\n  <>\n    If the game feels a bit jaggy with low FPS, check out <strong>Settings</strong> page\n  </>,\n  <>\n    Party is only getting started? Play <strong>Jukebox</strong> for the music and to see what songs are available\n  </>,\n  <>\n    Research shows that <strong>duet songs</strong> are that bit more fun than simple one-track ones\n  </>,\n  <>\n    Want to sing a <strong>new song</strong>? Find UltraStar version of it and import it with\n    <br />\n    <strong>Convert Ultrastar .txt</strong>\n  </>,\n  <>\n    The <strong>white pulse</strong> around selected song in Song Selection tries to match song's tempo\n  </>,\n  <>\n    Entire game (besides add/edit song) is navigable with <strong>Keyboard</strong>\n  </>,\n  <>\n    You can hide or show keyboard navigation help with <kbd>H</kbd> key\n  </>,\n  <>\n    In Song Selection, hold <kbd>↑</kbd> or <kbd>↓</kbd> to jump to the next letter\n  </>,\n  <>\n    Add <strong>vibrato</strong> to the notes you sing to get additional <strong>bonus points</strong>\n  </>,\n  <>\n    You can control the game with your phone - click on the{' '}\n    <strong>\n      <QrCode2 />\n      QR Code Icon\n    </strong>{' '}\n    on the top right and follow the instructions\n  </>,\n];\n\ninterface Props {\n  as?: any;\n}\n\nexport const GameTip = ({ as = 'h4', ...restProps }: Props) => {\n  const randomValue = useRef(randomInt(0, data.length - 1));\n  // const randomValue = useRef(randomInt(0, 0));\n\n  const Component = as;\n  return <Component {...restProps}>{data[randomValue.current]}</Component>;\n};\n","import styled from '@emotion/styled';\nimport { captureException } from '@sentry/react';\nimport CameraManager from 'Camera/CameraManager';\nimport { useEffect, useRef, useState } from 'react';\n\ninterface Props {}\n\nfunction CameraRoll({ ...props }: Props) {\n  const [videoSrc, setVideoSrc] = useState('');\n  const video = useRef<HTMLVideoElement | null>(null);\n\n  useEffect(() => {\n    // Seems it needs some time to process the video, otherwise invalid URL is returned\n    const timeout = setTimeout(() => {\n      setVideoSrc(CameraManager.getVideo());\n    }, 1000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  useEffect(() => {\n    try {\n      if (video.current) video.current.playbackRate = 16;\n    } catch (e) {\n      captureException(e);\n    }\n  }, [videoSrc]);\n\n  return (\n    <Container {...props}>\n      <Video src={videoSrc} ref={video} loop autoPlay className=\"ph-no-capture\" />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 80rem;\n  height: 60rem;\n`;\n\nconst Video = styled.video`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default CameraRoll;\n","import styled from '@emotion/styled';\nimport { buttonFocused } from 'Elements/Button';\nimport { formatter } from 'Scenes/Game/Singing/GameOverlay/Components/ScoreText';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { MAX_POINTS, sumDetailedScore } from 'Scenes/Game/Singing/GameState/Helpers/calculateScore';\nimport { PlayerScore } from 'Scenes/Game/Singing/PostGame/PostGameView';\nimport { ContentElement } from 'Scenes/Game/SongPage';\nimport { HighScoreEntity, SingSetup } from 'interfaces';\nimport CountUp from 'react-countup';\n\ninterface Props {\n  player: PlayerScore;\n  revealHighScore: boolean;\n  setAnimDone: (playerNumber: number) => void;\n  useColors?: boolean;\n  playerNumber: number;\n  highestScore: number;\n  highScores: HighScoreEntity[];\n  singSetup: SingSetup;\n}\n\nconst MAX_POINTS_ANIM_LENGTH = 6;\nconst MIN_POINTS_ANIM_LENGTH = 3;\n\nfunction PlayerScoreView({\n  playerNumber,\n  player,\n  highestScore,\n  highScores,\n  singSetup,\n  useColors = true,\n  revealHighScore,\n  setAnimDone,\n}: Props) {\n  const playerScore = sumDetailedScore(player.detailedScore[0]);\n  const isHighScore = (playerName: string) =>\n    highScores.some((score) => score.singSetupId === singSetup.id && score.name === playerName);\n\n  return (\n    <>\n      <ScoreTextPlayer\n        color={useColors ? styles.colors.players[playerNumber].text : ``}\n        data-test={`player-${playerNumber}-name`}\n        className=\"ph-no-capture\">\n        {player.name}\n      </ScoreTextPlayer>\n      <br />\n      <ScoreTextScore\n        highscore={revealHighScore && isHighScore(player.name)}\n        color={useColors ? styles.colors.players[playerNumber].text : ``}\n        win={revealHighScore && playerScore === highestScore}\n        data-test={`player-${playerNumber}-score`}\n        data-score={playerScore}>\n        <CountUp\n          end={playerScore}\n          formattingFn={formatter.format}\n          onEnd={() => setAnimDone(playerNumber)}\n          duration={Math.max(MIN_POINTS_ANIM_LENGTH, (playerScore / MAX_POINTS) * MAX_POINTS_ANIM_LENGTH)}\n        />\n        <HighScoreBadge highscore={revealHighScore && isHighScore(player.name)}>High score!</HighScoreBadge>\n      </ScoreTextScore>\n      <br />\n      <br />\n    </>\n  );\n}\n\nconst ScoreTextPlayer = styled(ContentElement)<{ color: string }>`\n  padding-left: 10rem;\n  padding-right: 10rem;\n  font-size: 3.5rem;\n  color: rgb(${(props) => props.color});\n`;\n\nconst ScoreTextScore = styled(ScoreTextPlayer)<{ win: boolean; highscore: boolean; color: string }>`\n  font-size: ${(props) => (props.win ? '10.5rem' : '5.5rem')};\n  color: ${(props) => (props.win ? styles.colors.text.active : 'white')};\n  //color: white;\n  transition: 400ms ease-in-out;\n  position: relative;\n`;\n\nconst HighScoreBadge = styled.span<{ highscore: boolean }>`\n  position: absolute;\n  top: -1.5rem;\n  right: -10rem;\n\n  font-size: 3rem;\n  -webkit-text-stroke: 0.1rem black;\n  color: ${styles.colors.text.default};\n  padding: 0.5rem 1rem;\n  border-radius: 1.5rem;\n\n  ${(props) => props.highscore && buttonFocused};\n\n  opacity: ${(props) => (props.highscore ? '1' : '0')};\n  transition: 400ms;\n`;\n\nexport default PlayerScoreView;\n","import styled from '@emotion/styled';\nimport CameraManager from 'Camera/CameraManager';\nimport { Button } from 'Elements/Button';\nimport { sumDetailedScore } from 'Scenes/Game/Singing/GameState/Helpers/calculateScore';\nimport { PlayerScore } from 'Scenes/Game/Singing/PostGame/PostGameView';\nimport CameraRoll from 'Scenes/Game/Singing/PostGame/Views/Results/CameraRoll';\nimport PlayerScoreView from 'Scenes/Game/Singing/PostGame/Views/Results/PlayerScore';\nimport useKeyboard from 'hooks/useKeyboard';\nimport useKeyboardHelp from 'hooks/useKeyboardHelp';\nimport { GAME_MODE, HighScoreEntity, SingSetup } from 'interfaces';\nimport { useMemo, useState } from 'react';\n\ninterface Props {\n  onNextStep: () => void;\n  players: PlayerScore[];\n  highScores: HighScoreEntity[];\n  singSetup: SingSetup;\n}\n\nfunction ResultsView({ onNextStep, players, highScores, singSetup }: Props) {\n  useKeyboard({\n    accept: onNextStep,\n  });\n  const help = useMemo(\n    () => ({\n      accept: 'Next',\n    }),\n    [],\n  );\n  useKeyboardHelp(help, true);\n\n  const isCoop = singSetup.mode === GAME_MODE.CO_OP;\n  const finalPlayers = isCoop ? [{ ...players[0], name: players.map((player) => player.name).join(', ') }] : players;\n\n  const [finishedAnims, setFinishedAnims] = useState(finalPlayers.map(() => false));\n  const isAnimDone = finishedAnims.every((anim) => anim);\n\n  const playerScores = finalPlayers.map((player) => sumDetailedScore(player.detailedScore[0]));\n  const highestScore = Math.max(...playerScores);\n\n  return (\n    <>\n      <ScoresContainer>\n        {finalPlayers.map((player, number) => (\n          <PlayerScoreView\n            playerNumber={player.playerNumber}\n            useColors={!isCoop}\n            revealHighScore={isAnimDone}\n            setAnimDone={(which) =>\n              setFinishedAnims((current) => {\n                current[which] = true;\n                return [...current];\n              })\n            }\n            key={number}\n            player={player}\n            highScores={highScores}\n            highestScore={highestScore}\n            singSetup={singSetup}\n          />\n        ))}\n      </ScoresContainer>\n      <SongSelectionButton onClick={onNextStep} focused data-test=\"highscores-button\">\n        Next\n      </SongSelectionButton>\n      {CameraManager.getPermissionStatus() && <StyledPhotoRoll />}\n    </>\n  );\n}\n\nconst ScoresContainer = styled.div`\n  position: absolute;\n  top: 20rem;\n  width: 100%;\n  text-align: center;\n`;\n\nconst SongSelectionButton = styled(Button)<{ focused: boolean }>`\n  position: absolute;\n  bottom: 4rem;\n  right: 2rem;\n  width: 40rem;\n  font-size: 1.9vw;\n`;\n\nconst StyledPhotoRoll = styled(CameraRoll)`\n  position: absolute;\n  top: calc(50% - 30rem);\n  left: 95rem;\n  transform: scale(0.75);\n`;\n\nexport default ResultsView;\n","import { PLAYER_NAMES_SESSION_STORAGE_KEY } from 'hooks/players/consts';\nimport { useMemo } from 'react';\n\nexport default function useRecentPlayerNames() {\n  return useMemo<string[]>(() => JSON.parse(sessionStorage.getItem(PLAYER_NAMES_SESSION_STORAGE_KEY)!) ?? [], []);\n}\n","import { Autocomplete } from 'Elements/Autocomplete';\nimport useRecentPlayerNames from 'hooks/players/useRecentPlayerNames';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { HighScoreEntity } from 'interfaces';\nimport { useRef, useState } from 'react';\n\ninterface Props {\n  index: number;\n  singSetupId: string;\n  score: HighScoreEntity;\n  register: ReturnType<typeof useKeyboardNav>['register'];\n  onSave: (singId: string, score: number, oldName: string, newName: string) => void;\n}\n\nfunction HighScoreRename({ score, register, singSetupId, onSave, index }: Props) {\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const [newName, setNewName] = useState('');\n  const playerNames = useRecentPlayerNames();\n\n  const onBlur = () => {\n    if (newName.trim().length && newName.trim() !== score.name) onSave(singSetupId, score.score, score.name, newName);\n  };\n\n  return (\n    <Autocomplete\n      className=\"ph-no-capture\"\n      options={playerNames}\n      onChange={setNewName}\n      onBlur={onBlur}\n      value={newName}\n      label=\"\"\n      ref={inputRef}\n      {...register(`highscore-rename-${index}`, () => inputRef.current?.focus())}\n      placeholder={score.name}\n      data-test={`input-edit-highscore`}\n      data-original-name={score.name}\n    />\n  );\n}\n\nexport default HighScoreRename;\n","import styled from '@emotion/styled';\nimport { Button } from 'Elements/Button';\nimport { typography } from 'Elements/cssMixins';\nimport ScoreText from 'Scenes/Game/Singing/GameOverlay/Components/ScoreText';\nimport styles from 'Scenes/Game/Singing/GameOverlay/Drawing/styles';\nimport { useEditScore } from 'Songs/stats/hooks';\nimport dayjs from 'dayjs';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { HighScoreEntity, SingSetup, Song } from 'interfaces';\nimport HighScoreRename from './HighScoreRename';\n\ninterface Props {\n  onNextStep: () => void;\n  singSetup: SingSetup;\n  highScores: HighScoreEntity[];\n  song: Song;\n}\n\nfunction HighScoresView({ onNextStep, highScores, singSetup, song }: Props) {\n  const { register } = useKeyboardNav();\n  const editScore = useEditScore(song);\n\n  return (\n    <>\n      <ScoresContainer data-test=\"highscores-container\">\n        {highScores.map((score, index) => (\n          <ScoreContainer isCurrentSing={score.singSetupId === singSetup.id} key={index}>\n            <ScorePosition>{index + 1}</ScorePosition>\n\n            <ScorePlayerName className=\"ph-no-capture\">\n              {score.singSetupId === singSetup.id ? (\n                <HighScoreRename\n                  index={index}\n                  score={score}\n                  register={register}\n                  singSetupId={singSetup.id}\n                  onSave={editScore}\n                />\n              ) : (\n                score.name\n              )}\n            </ScorePlayerName>\n            <ScoreScore>\n              <ScoreText score={score.score} />\n            </ScoreScore>\n            <ScoreDate>{dayjs(score.date).format('MMMM DD, YYYY')}</ScoreDate>\n          </ScoreContainer>\n        ))}\n      </ScoresContainer>\n      <SongSelectionButton {...register('play-next-song-button', onNextStep, undefined, true)}>\n        Select song\n      </SongSelectionButton>\n    </>\n  );\n}\n\nconst ScoresContainer = styled.div`\n  position: absolute;\n  top: 20rem;\n  width: 100%;\n  text-align: center;\n  padding: 0 16rem;\n  box-sizing: border-box;\n`;\n\nconst ScoreContainer = styled.div<{ isCurrentSing: boolean }>`\n  position: relative;\n  ${typography};\n  font-size: 3.2rem;\n  display: flex;\n  background: ${(props) => (props.isCurrentSing ? 'rgba(0,0,0,.9)' : 'rgba(0,0,0,.5)')};\n  margin-bottom: 2rem;\n  padding: ${(props) => (props.isCurrentSing ? `0 1.5rem` : `1rem 3.2rem`)};\n  align-items: center;\n`;\nconst ScorePosition = styled.div`\n  padding: 0 1.6rem;\n  color: ${styles.colors.text.active};\n`;\nconst ScorePlayerName = styled.div`\n  text-align: left;\n  flex: 1;\n  padding: 1.6rem;\n`;\nconst ScoreScore = styled.div`\n  padding: 0 1rem;\n`;\nconst ScoreDate = styled.div`\n  position: absolute;\n  font-size: 2rem;\n  bottom: -1rem;\n  right: -1.6rem;\n  background: black;\n  padding: 0.5rem;\n`;\n\nconst SongSelectionButton = styled(Button)<{ focused: boolean }>`\n  position: absolute;\n  bottom: 4rem;\n  right: 2rem;\n  width: 40rem;\n  font-size: 1.9vw;\n`;\n\nexport default HighScoresView;\n","import styled from '@emotion/styled';\nimport { GameTip } from 'Elements/GameTip';\nimport ResultsView from 'Scenes/Game/Singing/PostGame/Views/Results';\nimport useBackgroundMusic from 'hooks/useBackgroundMusic';\nimport { DetailedScore, SingSetup, Song } from 'interfaces';\nimport { useState } from 'react';\nimport SongPage from '../../SongPage';\nimport HighScoresView from './Views/HighScores';\n\nexport interface PlayerScore {\n  detailedScore: [DetailedScore, DetailedScore];\n  playerNumber: number;\n  name: string;\n}\n\ninterface HighScoreEntity {\n  singSetupId: string;\n  name: string;\n  score: number;\n  date: string;\n}\n\ninterface Props {\n  width: number;\n  height: number;\n  song: Song;\n  onClickSongSelection: () => void;\n  players: PlayerScore[];\n  singSetup: SingSetup;\n  highScores: HighScoreEntity[];\n}\n\nfunction PostGameView({ song, width, height, onClickSongSelection, players, highScores, singSetup }: Props) {\n  useBackgroundMusic(true);\n  const [step, setStep] = useState<'results' | 'highscores'>('results');\n\n  return (\n    <SongPage songData={song} width={width} height={height}>\n      <Container>\n        {step === 'results' && (\n          <ResultsView\n            onNextStep={() => setStep('highscores')}\n            players={players}\n            singSetup={singSetup}\n            highScores={highScores}\n          />\n        )}\n        {step === 'highscores' && (\n          <HighScoresView onNextStep={onClickSongSelection} singSetup={singSetup} highScores={highScores} song={song} />\n        )}\n        <PostGameTip active />\n      </Container>\n    </SongPage>\n  );\n}\n\nconst Container = styled.div`\n  pointer-events: auto;\n`;\n\nexport default PostGameView;\n\nconst PostGameTip = styled(GameTip)<{ active: boolean }>`\n  transition: 300ms;\n  transform: scale(${({ active }) => (active ? 1 : 0)});\n  position: absolute;\n  bottom: 20rem;\n  font-size: 3.2rem;\n  line-height: 1.25;\n  color: white;\n  text-align: center;\n  background: rgba(0, 0, 0, 0.75);\n  width: 100%;\n  box-sizing: border-box;\n\n  padding: 2rem 10rem;\n\n  kbd {\n    padding: 0.12rem 0.9rem;\n    border-radius: 1rem;\n    border: 0.5rem solid rgb(204, 204, 204);\n    border-bottom-color: rgb(150, 150, 150);\n    border-right-color: rgb(150, 150, 150);\n    color: rgb(51, 51, 51);\n    line-height: 1.4;\n    display: inline-block;\n    box-shadow: 0 0.1rem 0 rgba(0, 0, 0, 0.2), inset 0 0 0 0.2rem #ffffff;\n    background-color: rgb(247, 247, 247);\n    text-shadow: 0 0.1rem 0 #fff;\n    font-weight: normal;\n  }\n`;\n","import PlayersManager from 'Players/PlayersManager';\nimport PostGameView from 'Scenes/Game/Singing/PostGame/PostGameView';\nimport { useSongStats } from 'Songs/stats/hooks';\nimport { HighScoreEntity, SingSetup, Song } from 'interfaces';\nimport { useMemo } from 'react';\nimport GameState from '../GameState/GameState';\n\ninterface Props {\n  width: number;\n  height: number;\n  song: Song;\n  onClickSongSelection: () => void;\n  singSetup: SingSetup;\n}\n\nfunction useHighScores(song: Song, singSetup: SingSetup): HighScoreEntity[] {\n  const stats = useSongStats(song);\n\n  const highScores = useMemo(\n    () =>\n      stats?.scores\n        .filter(({ setup }) => setup.mode === singSetup.mode && setup.tolerance === singSetup.tolerance)\n        .map((score) =>\n          score.scores.map((singleScore) => ({\n            ...singleScore,\n            date: score.date,\n            singSetupId: score.setup.id,\n          })),\n        )\n        .flat()\n        .sort((a, b) => b.score - a.score)\n        .slice(0, 5),\n    [stats, singSetup],\n  );\n\n  return highScores ?? [];\n}\n\nfunction PostGame({ song, width, height, onClickSongSelection, singSetup }: Props) {\n  const highScores = useHighScores(song, singSetup);\n  const playerScores = useMemo(\n    () =>\n      PlayersManager.getPlayers().map((player) => ({\n        name: player.getName(),\n        playerNumber: player.number,\n        detailedScore: GameState.getPlayerDetailedScore(player.number),\n      })),\n    [],\n  );\n\n  return (\n    <PostGameView\n      singSetup={singSetup}\n      song={song}\n      width={width}\n      height={height}\n      onClickSongSelection={onClickSongSelection}\n      players={playerScores}\n      highScores={highScores}\n    />\n  );\n}\n\nexport default PostGame;\n","import styled from '@emotion/styled';\nimport { useBackground } from 'Elements/LayoutWithBackground';\nimport { VideoState } from 'Elements/VideoPlayer';\nimport events from 'GameEvents/GameEvents';\nimport PlayersManager from 'Players/PlayersManager';\nimport GameState from 'Scenes/Game/Singing/GameState/GameState';\nimport WaitForReadiness from 'Scenes/Game/Singing/WaitForReadiness';\nimport { SongListEntryDetailsArtist, SongListEntryDetailsTitle } from 'Scenes/SingASong/SongSelection/SongCard';\nimport useSong from 'Songs/hooks/useSong';\nimport useBlockScroll from 'hooks/useBlockScroll';\nimport useFullscreen from 'hooks/useFullscreen';\nimport { GAME_MODE, SingSetup, SongPreview } from 'interfaces';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport useViewportSize from '../../../hooks/useViewportSize';\nimport generatePlayerChanges from './Helpers/generatePlayerChanges';\nimport Player, { PlayerRef } from './Player';\nimport PostGame from './PostGame/PostGame';\n\ninterface Props {\n  singSetup: SingSetup;\n  songPreview: SongPreview;\n  returnToSongSelection: () => void;\n  restartSong: () => void;\n}\nfunction Singing({ songPreview, singSetup, returnToSongSelection, restartSong }: Props) {\n  useFullscreen();\n  useBlockScroll();\n  const player = useRef<PlayerRef | null>(null);\n  const song = useSong(songPreview.id);\n\n  const { width, height } = useViewportSize();\n  const [isEnded, setIsEnded] = useState(false);\n  const [isOverlayVisible, setIsOverlayVisible] = useState(true);\n  const [playerState, setPlayerState] = useState(VideoState.UNSTARTED);\n\n  const playerChanges = useMemo(() => {\n    if (!song.data) return [];\n    if (singSetup.mode !== GAME_MODE.PASS_THE_MIC) return song.data.tracks.map(() => []);\n\n    return generatePlayerChanges(song.data);\n  }, [song.data, singSetup]);\n\n  const [isTransitionTimeout, setIsTransitionTimeout] = useState(false);\n\n  useBackground(!isTransitionTimeout);\n\n  useEffect(() => {\n    if (isOverlayVisible && song.data && (isTransitionTimeout || playerState !== VideoState.UNSTARTED)) {\n      setIsOverlayVisible(false);\n    }\n  }, [song.data, isTransitionTimeout, playerState, isOverlayVisible]);\n\n  if (isEnded && song.data) {\n    return (\n      <PostGame\n        width={width}\n        height={height}\n        song={song.data}\n        onClickSongSelection={returnToSongSelection}\n        singSetup={singSetup}\n      />\n    );\n  } else {\n    return (\n      <Container>\n        <BackgroundContainer visible={isOverlayVisible}>\n          <Overlay video={songPreview.video} width={width} height={height} />\n          <Artist>{songPreview.artist}</Artist>\n          <Title>{songPreview.title}</Title>\n          <WaitForReadiness\n            onFinish={() => {\n              setIsTransitionTimeout(true);\n              player.current?.play();\n            }}\n          />\n        </BackgroundContainer>\n        {song.data && (\n          <Player\n            ref={player}\n            onStatusChange={setPlayerState}\n            playerChanges={playerChanges}\n            players={singSetup.players}\n            song={song.data}\n            width={width}\n            height={height}\n            autoplay={false}\n            onSongEnd={() => {\n              const scores =\n                GameState.getSingSetup()?.mode === GAME_MODE.CO_OP\n                  ? [\n                      {\n                        name: PlayersManager.getPlayers()\n                          .map((player) => player.getName())\n                          .join(', '),\n                        score: GameState.getPlayerScore(0),\n                      },\n                    ]\n                  : PlayersManager.getPlayers().map((player) => ({\n                      name: player.getName(),\n                      score: GameState.getPlayerScore(player.number),\n                    }));\n              events.songEnded.dispatch(song.data!, singSetup, scores);\n              setIsEnded(true);\n            }}\n            singSetup={singSetup}\n            restartSong={restartSong}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst BackgroundContainer = styled.div<{ visible: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  pointer-events: none;\n  background-color: black;\n  view-transition-name: song-preview;\n  opacity: ${(props) => (props.visible ? 1 : 0)};\n  transition: 500ms;\n`;\n\nconst BaseOverlay = styled.div`\n  background-size: cover;\n  background-position: center center;\n  filter: blur(10px);\n`;\n\nconst Overlay = (props: { video: string; width: number; height: number }) => (\n  <BaseOverlay\n    style={{\n      backgroundImage: `url('https://i3.ytimg.com/vi/${props.video}/hqdefault.jpg')`,\n      width: `${props.width}px`,\n      height: `${props.height}px`,\n    }}\n  />\n);\n\nconst Artist = styled(SongListEntryDetailsArtist)`\n  view-transition-name: song-preview-artist;\n  position: absolute;\n  top: 10rem;\n  left: 10rem;\n  font-size: 7rem;\n`;\nconst Title = styled(SongListEntryDetailsTitle)`\n  view-transition-name: song-preview-title;\n  position: absolute;\n\n  font-size: 8rem;\n  top: 19rem;\n  left: 10rem;\n`;\n\nexport default Singing;\n","import CameraManager from 'Camera/CameraManager';\nimport SingASong from 'Scenes/SingASong/SingASong';\nimport { woosh } from 'SoundManager';\nimport useFullscreen from 'hooks/useFullscreen';\nimport { SingSetup, SongPreview } from 'interfaces';\nimport { useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport startViewTransition from 'utils/startViewTransition';\nimport Singing from './Singing/Singing';\n\ninterface Props {\n  songId?: string;\n}\n\nfunction Game(props: Props) {\n  const [singSetup, setSingSetup] = useState<(SingSetup & { song: SongPreview }) | null>(null);\n  const [preselectedSong, setPreselectedSong] = useState<string | null>(props.songId ?? null);\n  const [resetKey, setResetKey] = useState(0);\n\n  const handleSelect = (setup: SingSetup & { song: SongPreview }) => {\n    // @ts-expect-error\n    document.getElementById('preview-video-container')!.style.viewTransitionName = 'song-preview-video';\n    startViewTransition(() => {\n      // @ts-expect-error\n      document.getElementById('preview-video-container')!.style.viewTransitionName = '';\n      flushSync(() => {\n        setSingSetup(setup);\n      });\n    });\n\n    woosh.play();\n  };\n\n  useFullscreen();\n\n  return (\n    <>\n      {singSetup ? (\n        <Singing\n          restartSong={() => {\n            CameraManager.restartRecord();\n            setResetKey((current) => current + 1);\n          }}\n          key={resetKey}\n          songPreview={singSetup.song}\n          singSetup={singSetup}\n          returnToSongSelection={() => {\n            setPreselectedSong(singSetup.song.id);\n            setSingSetup(null);\n          }}\n        />\n      ) : (\n        <SingASong onSongSelected={handleSelect} preselectedSong={preselectedSong} />\n      )}\n    </>\n  );\n}\nexport default Game;\n"],"names":["toInteger","value","result","toFinite","remainder","nativeCeil","nativeMax","chunk","array","size","guard","isIterateeCall","length","index","resIndex","baseSlice","CheckCircleOutline","createSvgIcon","_jsx","filteringFunctions","language","songList","filter","song","Array","isArray","includes","excludeLanguages","languages","every","songLang","search","cleanSearch","clearString","duet","tracksCount","yearBefore","Number","year","yearAfter","updatedAfter","after","dateAfter","dayjs","lastUpdate","isAfter","applyFilters","list","appliedFilters","Object","entries","filters","reduce","name","useLanguageFilter","useMemo","uniq","map","flat","useSongListFilter","availableLanguages","excludedLanguages","useSettingValue","ExcludedLanguagesSetting","setFilters","useState","deferredFilters","useDeferredValue","prefilteredList","filteredList","filtersData","current","available","status","allSongs","visible","useSongList","useSongIndex","data","groupedSongList","groups","newSongs","isNew","push","letter","songs","indexOf","forEach","firstCharacter","isFinite","artist","toUpperCase","group","find","e","console","error","captureException","isLoading","MAX_REMEMBERED_SONGS_COUNT","selectRandomSong","songCount","previouslySelectedSongs","maxRememberedCount","newIndex","possibleOptions","keys","id","randomInt","shift","useTwoDimensionalNavigation","itemsPerRow","cursorPosition","setCursorPosition","songIndexMatrix","songGroupMatrix","previousMatrix","usePrevious","isAtLastColumn","moveToSong","useCallback","songIndex","y","findIndex","columns","x","positionToValue","matrix","def","row","at","positionToSongIndex","positionToGroup","useEffect","previousFocusedSong","currentFocusedSong","moveCursor","plane","delta","menuNavigate","play","newX","newY","undefined","maxXInRow","Math","min","focusedSong","focusedGroup","tuple","useSongSelectionKeyboardNavigation","enabled","groupedSongs","onEnter","songsPerRow","navigate","useSmoothNavigate","showPlaylistsState","setShowPlaylistsState","previousPlaylistsState","arePlaylistsVisible","leavingKey","isAtFirstColumn","handleEnter","menuEnter","blockBack","setBlockBack","previousSearch","useLayoutEffect","timeout","setTimeout","clearTimeout","handleBackspace","menuBack","navigateToGroup","throttle","direction","currentGroup","nextGroupIndex","trailing","navigateVertically","repeat","currentlySelectedGroupIndex","navigateHorizontally","ignoreFilters","randomlySelectedSongs","useRef","randomSong","useKeyboard","accept","down","up","left","right","back","random","posthog","capture","help","shiftR","remote","useKeyboardHelp","closePlaylist","previousShowFilters","enteringKey","useSongSelection","preselectedSong","keyboardControl","setKeyboardControl","handleKeyboardControl","startViewTransition","flushSync","woosh","showFilters","setShowFilters","preselected","setPreselected","preselectedSongIndex","firstNewSongIndex","encodeURIComponent","replace","smooth","songPreview","usePlaylists","songLanguages","useLanguageList","subtract","toISOString","playlist","Playlists","active","playlists","register","focused","focusElement","useKeyboardNav","additionalHelp","vertical","jsx","Container","Playlist","selected","_styled","target","props","typography","process","Button","styles","colors","text","QuickSearch","onSongFiltered","searchInput","isFocused","setIsFocused","useHotkeys","onLeave","blur","enableOnTags","focusSearch","key","searchLength","focus","REGULAR_ALPHA_CHARS","setSearch","trim","FilterItem","preventDefault","Input","large","SHOW_TIP_TIMEOUT_MS","SelectRandomTip","isVisible","setIsVisible","mobilePhoneMode","MobilePhoneModeSetting","jsxs","Kbd","disabled","_interopRequireDefault","require$$0","PeopleAlt","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","langMap","JSON","parse","SKIPPED_ORIGINS","SongFlag","lang","isLangArtistOrigin","artistOrigin","toLowerCase","Fragment","Flag","useSongStats","stats","setStats","storageKey","getSongKey","setSongStats","fetchSongStats","events","songStatStored","useEditScore","singId","score","oldName","newName","newScores","scores","record","setup","previousScore","newData","storeSongStats","songScoreUpdated","dispatch","FinalSongCard","video","children","handleClick","background","expanded","restProps","onClickCallback","SongCardContainer","SongCardBackground","backgroundImage","SongInfo","SongCardStatsIndicator","MultiTrackIndicator","PeopleAltIcon","SongListEntryDetailsArtist","SongListEntryDetailsTitle","title","ExpandedData","author","SongAuthor","authorUrl","SongListEntryStats","Language","_ref","theme","graphicSetting","css","SongListEntryDetails","lastPlayed","date","playedToday","plays","SongStatIndicator","gameModeNames","GAME_MODE","DUEL","PASS_THE_MIC","CO_OP","difficultyNames","useSetGameMode","createPersistedState","useSetTolerance","GameSettings","onNextStep","onExitKeyboardControl","rememberedMode","setMode","mode","tolerance","setTolerance","handleNextButton","singSetup","v4","players","changeMode","nextValue","values","changeTolerance","nextIndex","onBackspace","GSSwitcher","ModeDescription","SwapHorizIcon","PlayButton","Switcher","NoiseDetection","isBuiltIn","useEventListenerSelector","playerInputChanged","PlayersManager","getInputs","some","input","source","measures","handleMeasure","usePlayerMic","noiseDetected","setNoiseDetected","interval","setInterval","noDetection","freq","detection","avgNoDetectionVolume","acc","volume","avgDetectionVolume","isNoisy","clearInterval","NoiseWarningContainer","Warning","SinglePlayer","player","usePlayerMicStatus","number","Indicator","Ping","PlayerStatus","PlayerMicCheck","PlayerName","getName","MicCheck","useEventListener","playerNameChanged","InputManager","startMonitoring","isSetup","MicChecksContainer","getPlayers","Autocomplete","forwardRef","options","label","onChange","placeholder","keyboardNavigationChangeFocus","onBlur","className","forwardedRef","inputRef","autocompleteMenu","isInputFocused","setIsInputFocused","focusedOption","setFocusedOption","filteredOptions","option","handleKeyDown","code","querySelector","scrollIntoView","behavior","block","handleBlur","AutocompleteMenu","AutocompleteMenuitem","getTrackName","tracks","multipleTracks","playerNames","inputTouched","setInputTouched","nameRef","togglePlayerTrack","track","onNameChange","setName","isDefaultName","currentName","MAX_NAME_LENGTH","Track","PlayerSettings","storedPreference","MicSetupPreferenceSetting","initialisePlayerSetup","playerSetup","setPlayerSetup","useEventEffect","gameEvents","playerAdded","playerRemoved","playerList","sessionStorage","getItem","PLAYER_NAMES_SESSION_STORAGE_KEY","updatePlayer","playerNumber","newSetup","showModal","setShowModal","startSong","areInputsConfigured","SelectInputModal","PlayerSettingContainer","PlayerSettingTitle","getPlayer","SongSettings","onPlay","setSingSetup","step","setStep","onSongStepFinish","finalSetup","songStarted","viewTransitionName","GameConfiguration","PREVIEW_LENGTH","SongPreviewComponent","top","width","height","focusEffect","showVideo","setShowVideo","windowWidth","windowHeight","useViewportSize","start","previewStart","videoGap","end","previewEnd","undebounced","videoId","useDebounce","loadVideoById","startSeconds","endSeconds","videoWidth","videoHeight","finalHeight","setSize","Backdrop","SongBPMIndicator","SongPreviewContainer","Video","VideoPlayer","state","VideoState","ENDED","seekTo","playVideo","PLAYING","Content","_ref2","BaseSongPreviewContainer","realBpm","bpm","animationDuration","show","BaseSongBPMIndicator","GraphicSetting","mounts","useBlockScroll","body","classList","add","documentElement","remove","focusMultiplier","MAX_SONGS_PER_ROW","SongSelection","onSongSelected","useBackgroundMusic","useBackground","previewTop","previewLeft","previewWidth","previewHeight","setPositions","stopPropagation","onRemoteSearch","remoteSongSearch","handleResize","previouslyFocusedGroup","previouslyFocusedSong","selector","previousSong","offsetTop","inline","offsetLeft","offsetWidth","offsetHeight","expandSong","LoaderContainer","Loader","SongListContainer","NoSongsFound","SongPreview","createElement","SongsGroupContainer","SongsGroupHeader","SongsGroup","SongListEntry","AddSongs","highlight","dim","memo","SingASong","setExcludedLanguages","languageSelection","setLanguageSelection","goBack","ExcludeLanguagesView","useFullscreen","document","requestFullscreen","catch","info","backgroundMusic","sleep","ms","Promise","resolve","AUTOSTART_TIMEOUT_S","WaitForReadiness","onFinish","audio","areAllPlayersReady","setAreAllPlayersReady","confirmedPlayers","setConfirmedPlayers","readinessConfirmed","deviceId","inputListChanged","allInputsReady","inputsReady","requestReadiness","then","minTimeElapsed","maxTimeElapsed","race","all","paused","waitFinished","pause","playerStatuses","confirmed","WaitingForReady","PlayerList","PlayerEntry","ConfirmStatus","TimeoutMessage","CountUp","currentTarget","MAX_SECTION_PAUSE_MS","getSingableBeats","sections","Infinity","isNotesSection","section","getFirstNoteStartFromSections","getLastNoteEndFromSections","notes","note","segmentSections","beatLength","firstSection","noteSections","segments","lastSegment","lastSectionEnd","sum","elem","calculateAmplitude","sums","max","shiftSolution","cloneDeep","takeFromLeft","pos","pop","takeFromRight","first","rest","ceil","arrSum","arr","generatePlayerChanges","getSongBeatLength","currentBuffer","i","idealSize","CHANGES_COUNT","segmentSingableBeatsCount","bufferSum","currentAmplitude","candidates","range","candidatesAmplitudes","minimalAmplitude","minimalAmplitudeIndex","QrCode2","GameTip","as","randomValue","Component","CameraRoll","videoSrc","setVideoSrc","CameraManager","getVideo","playbackRate","MAX_POINTS_ANIM_LENGTH","MIN_POINTS_ANIM_LENGTH","PlayerScoreView","highestScore","highScores","useColors","revealHighScore","setAnimDone","playerScore","sumDetailedScore","detailedScore","isHighScore","playerName","singSetupId","ScoreTextPlayer","ScoreTextScore","formatter","format","MAX_POINTS","HighScoreBadge","ContentElement","color","win","default","highscore","buttonFocused","ResultsView","isCoop","finalPlayers","join","finishedAnims","setFinishedAnims","isAnimDone","anim","playerScores","ScoresContainer","which","SongSelectionButton","getPermissionStatus","StyledPhotoRoll","useRecentPlayerNames","HighScoreRename","onSave","setNewName","HighScoresView","editScore","ScoreContainer","ScorePosition","ScorePlayerName","ScoreScore","ScoreText","ScoreDate","isCurrentSing","PostGameView","onClickSongSelection","SongPage","PostGameTip","useHighScores","singleScore","sort","a","b","slice","PostGame","GameState","getPlayerDetailedScore","Singing","returnToSongSelection","restartSong","useSong","isEnded","setIsEnded","isOverlayVisible","setIsOverlayVisible","playerState","setPlayerState","UNSTARTED","playerChanges","isTransitionTimeout","setIsTransitionTimeout","BackgroundContainer","Overlay","Artist","Title","Player","getSingSetup","getPlayerScore","songEnded","BaseOverlay","Game","setPreselectedSong","songId","resetKey","setResetKey","handleSelect","getElementById","style","restartRecord"],"mappings":"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","x_google_ignoreList":[0,1,2,10]}