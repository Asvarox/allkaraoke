{"version":3,"file":"Setlists-B0GQ-EOH.js","names":["useBackground","NoPrerender","NormalizeFontSize","useSongIndex","encodeSongList","useBackgroundMusic","useState","Helmet","SongsTable","createPersistedState","Link","MAX_SONGS_PER_SETLIST","StoredSetlistEntity","name","songList","isEditable","useSetlists","Setlists","data","setlists","setSetlists","selectedSetlist","setSelectedSetlist","selectedSongs","find","setlist","onSelect","selected","length","alert","prevSetlists","map","prompt","isSelected","s","confirmed","confirm","filter","url","URL","window","location","href","pathname","searchParams","set","navigator","clipboard","writeText","toString","Container","_styled","process","env","NODE_ENV","target","label","styles","_EMOTION_STRINGIFIED_CSS_ERROR__"],"sources":["../../node_modules/.pnpm/@mui+icons-material@6.4.6_@mui+material@6.4.6_@emotion+react@11.14.0_@types+react@19.0.2_reac_bwwdgqvgtdmzbxodzng2tkdray/node_modules/@mui/icons-material/esm/LockOpen.js","../../node_modules/.pnpm/@mui+icons-material@6.4.6_@mui+material@6.4.6_@emotion+react@11.14.0_@types+react@19.0.2_reac_bwwdgqvgtdmzbxodzng2tkdray/node_modules/@mui/icons-material/esm/LockOutlined.js","../../src/routes/Edit/Setlists.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m0 12H6V10h12z\"\n}), 'LockOpen');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2M9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9zm9 14H6V10h12zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2\"\n}), 'LockOutlined');","import styled from '@emotion/styled';\nimport { LockOpen, LockOutlined } from '@mui/icons-material';\nimport { Button, Grid } from '@mui/material';\nimport { useBackground } from 'modules/Elements/BackgroundContext';\nimport NoPrerender from 'modules/Elements/NoPrerender';\nimport NormalizeFontSize from 'modules/Elements/NormalizeFontSize';\nimport useSongIndex from 'modules/Songs/hooks/useSongIndex';\nimport { encodeSongList } from 'modules/Songs/utils/setlists';\nimport useBackgroundMusic from 'modules/hooks/useBackgroundMusic';\nimport { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport SongsTable from 'routes/Edit/Components/SongsTable';\nimport createPersistedState from 'use-persisted-state';\nimport { Link } from 'wouter';\n\nconst MAX_SONGS_PER_SETLIST = 300;\n\ninterface StoredSetlistEntity {\n  name: string;\n  songList: number[];\n  isEditable: boolean;\n}\n\nconst useSetlists = createPersistedState<StoredSetlistEntity[]>('setlists');\n\nexport default function Setlists() {\n  useBackground(false);\n  useBackgroundMusic(false);\n  const { data } = useSongIndex(true);\n  const [setlists, setSetlists] = useSetlists([]);\n  const [selectedSetlist, setSelectedSetlist] = useState<string | null>(null);\n\n  const selectedSongs = setlists.find((setlist) => setlist.name === selectedSetlist)?.songList || [];\n  const onSelect = (selected: number[]) => {\n    if (selected.length > MAX_SONGS_PER_SETLIST) {\n      alert(`You can only select up to ${MAX_SONGS_PER_SETLIST} songs per setlist.`);\n      return;\n    }\n    setSetlists((prevSetlists) =>\n      prevSetlists.map((setlist) => (setlist.name === selectedSetlist ? { ...setlist, songList: selected } : setlist)),\n    );\n  };\n\n  if (!data) return <>Loading</>;\n\n  return (\n    <>\n      <Helmet>\n        <title>Song List | AllKaraoke.Party - Free Online Karaoke Party Game</title>\n      </Helmet>\n      <NoPrerender>\n        <Container>\n          <NormalizeFontSize />\n          <Grid container rowGap={2}>\n            <Grid item xs={3} display={'flex'} alignItems={'center'} justifyContent={'flex-start'}>\n              <Link to=\"menu/\">\n                <Button data-test=\"main-menu-link\">Return to main menu</Button>\n              </Link>\n            </Grid>\n            <Grid item xs={6} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n              <h4>Manage setlists</h4>\n            </Grid>\n            <Grid item xs={12}>\n              <div className=\"flex flex-col items-stretch gap-4\">\n                <p className=\"leading-6\">\n                  This feature allows you to create a custom game link that includes only a selected subset of songs.\n                  It&#39;s useful for contests or situations where you want to limit which songs are visible. Note that{' '}\n                  <strong>locally added songs cannot be included</strong>. Additionally, if you add or remove a song,{' '}\n                  <strong>the setlist link will change</strong> â€” so it&#39;s recommended to use a{' '}\n                  <a href=\"https://tinyurl.com/\" target=\"_blank\" rel=\"noreferrer\">\n                    URL shortener\n                  </a>{' '}\n                  to generate a consistent short link and update it whenever you modify the setlist. Each setlist can\n                  contain up to {MAX_SONGS_PER_SETLIST} songs.\n                </p>\n                <p>\n                  You can also make a setlist non-editable, which prevents users from adding additional songs to it.\n                </p>\n                <h5 className=\"flex items-center gap-2\">\n                  Your setlists\n                  <Button\n                    onClick={() => {\n                      const name = prompt('Enter setlist name');\n                      if (name) {\n                        setSetlists((prevSetlists) => [...prevSetlists, { name, songList: [], isEditable: true }]);\n                      }\n                    }}>\n                    Create new\n                  </Button>\n                </h5>\n                {setlists.map((setlist) => {\n                  const isSelected = setlist.name === selectedSetlist;\n                  return (\n                    <div className={`flex ${isSelected ? 'bg-blue-100' : ''} items-center gap-4`} key={setlist.name}>\n                      <span className=\"pl-2\">\n                        {setlist.isEditable ? <LockOpen /> : <LockOutlined />}&nbsp;\n                        <strong>{setlist.name}</strong> ({setlist.songList?.length} songs)\n                      </span>\n                      <Button\n                        variant={isSelected ? 'contained' : 'outlined'}\n                        className=\"ml-auto!\"\n                        onClick={() => {\n                          setSelectedSetlist(isSelected ? null : setlist.name);\n                        }}>\n                        Edit\n                      </Button>\n                      <Button\n                        onClick={() =>\n                          setSetlists(\n                            setlists.map((s) => (s.name === setlist.name ? { ...s, isEditable: !s.isEditable } : s)),\n                          )\n                        }>\n                        {setlist.isEditable ? 'Make not editable' : 'Make editable'}\n                      </Button>\n                      <Button\n                        color=\"error\"\n                        onClick={() => {\n                          const confirmed = confirm(`Are you sure you want to delete the setlist \"${setlist.name}\"?`);\n                          if (confirmed) {\n                            setSetlists((prevSetlists) => prevSetlists.filter((s) => s.name !== setlist.name));\n                            if (selectedSetlist === setlist.name) {\n                              setSelectedSetlist(null);\n                            }\n                          }\n                        }}>\n                        Remove\n                      </Button>\n                      <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={() => {\n                          const url = new URL(window.location.href);\n                          url.pathname = '';\n                          url.searchParams.set('setlist', encodeSongList(setlist.songList, setlist.isEditable));\n                          navigator.clipboard.writeText(url.toString());\n                        }}>\n                        Copy link\n                      </Button>\n                    </div>\n                  );\n                })}\n                {setlists.length === 0 && <h6>No setlists created yet</h6>}\n              </div>\n            </Grid>\n            <Grid item xs={12}>\n              {selectedSetlist && (\n                <SongsTable onSelect={onSelect} selectedSongs={selectedSongs} selectable data={data} />\n              )}\n            </Grid>\n          </Grid>\n        </Container>\n      </NoPrerender>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  margin: 0 auto;\n  height: 100%;\n  width: 1260px;\n  background: white;\n  padding: 60px 20px 0 20px;\n`;\n"],"x_google_ignoreList":[0,1],"mappings":"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"}