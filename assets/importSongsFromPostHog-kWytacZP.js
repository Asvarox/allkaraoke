import{c,g as d,S as a}from"./index-CjfM2cVq.js";const u="https://eu.posthog.com",p="281",m=new Date(Date.now()-1e3*3600*24*28).toISOString(),h=e=>(e.title.toLowerCase().trim().endsWith("[duet]")?e.title=e.title.slice(0,-6):e.title.toLowerCase().endsWith("(tv)")?e.title=e.title.slice(0,-4):(e.title.toLowerCase().endsWith("(album version)")||e.title.toLowerCase().endsWith("(movie version)"))&&(e.title=e.title.slice(0,-15)),e.title=e.title.trim(),e.language=e.language.map(o=>o.toLowerCase().startsWith("espa")?"Spanish":o.toLowerCase().endsWith("(romanized)")?o.slice(0,-11).trim():o.toLowerCase().endsWith("(brazil)")?"Portuguese":o),e.lastUpdate=new Date().toISOString(),e.id=void 0,e.id=d(e),e),w=async(e,o,s,i)=>{const n=await e(`${u}/api/projects/${p}/events?event=share-song&after=${m}&limit=200`);await Promise.all(n.results.map(async r=>{try{let t=c(r.properties.song);if(!t.id){console.log("Song has no ID",t);return}h(t),s.includes(t.id)?console.log(`Song ${t.id} already fetched`):o.find(l=>l.id===t.id)?console.log(`Song ${t.id} already exists`):(t.lastUpdate=new Date().toISOString(),await i(t),console.log(`Added song ${t.id}`))}catch{console.warn(`Couldn't convert song ${r.properties.song}`)}}))},S=async()=>{const e=sessionStorage.getItem("posthog_key")||prompt("Enter PostHog PAT");if(!e)return;sessionStorage.setItem("posthog_key",e),await w(async s=>{const i=await fetch(s,{headers:{Authorization:`Bearer ${e}`}});if(!i.ok)throw new Error(`Request failed with status ${i.status}`);return i.json()},await a.getIndex(!0),[],async s=>a.store(s))};export{S as default};
//# sourceMappingURL=importSongsFromPostHog-kWytacZP.js.map
