import{c as u,g as p,s as a,S as d}from"./index-C_tk7kP8.js";const f="https://eu.posthog.com",h="281",S=new Date(Date.now()-1e3*3600*24*28).toISOString(),w=["(tv)","(album version)","(movie version)","[duet]"],I=e=>(w.forEach(t=>{e.title.toLowerCase().endsWith(t)&&(e.title=e.title.slice(0,-t.length))}),e.title=e.title.trim(),e.language=e.language.map(t=>t.toLowerCase().startsWith("espa")?"Spanish":t.toLowerCase().endsWith("(romanized)")?t.slice(0,-11).trim():t.toLowerCase().endsWith("(brazil)")?"Portuguese":t),e.lastUpdate=new Date().toISOString(),e.id=void 0,e.id=p(e),e),D=async(e,t,s,i,r)=>{const n=await e(`${f}/api/projects/${h}/events?event=share-song&after=${r??S}&limit=200`);await Promise.all(n.results.map(async l=>{var c,g;try{let o=u(l.properties.song);if(!o.id){console.log("Song has no ID",o);return}I(o),s.includes(o.id)?console.log(`Song ${o.id} already fetched`):(((c=o.tracks[0])==null?void 0:c.sections.length)??0)<5?console.log(`Song ${o.id} seems to be broken, ${(g=o.tracks[0])==null?void 0:g.sections.length} sections found`):t.find(m=>m.id===o.id)?console.log(`Song ${o.id} already exists`):(o.lastUpdate=new Date().toISOString(),await i(o),console.log(`Added song ${o.id}`))}catch{console.warn(`Couldn't convert song ${l.properties.song}`)}}))},$=async()=>{const e=a.session.getItem("posthog_key")||prompt("Enter PostHog PAT");if(!e)return;a.session.setItem("posthog_key",e);const t=new Date;t.setDate(t.getDate()-10);let s=prompt("Enter from",a.local.getItem("posthog_from")||t.toISOString());if(s===null)return;s=new Date(s).toISOString(),a.local.setItem("posthog_from",new Date().toISOString()),await D(async r=>{const n=await fetch(r,{headers:{Authorization:`Bearer ${e}`}});if(!n.ok)throw new Error(`Request failed with status ${n.status}`);return n.json()},await d.getIndex(!0),[],async r=>d.store(r),s)};export{$ as default};
//# sourceMappingURL=importSongsFromPostHog-DVW7F5xY.js.map
