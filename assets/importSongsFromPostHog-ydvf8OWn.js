import{c as g,g as u,S as c}from"./index-BExeqcOY.js";const p="https://eu.posthog.com",h="281",m=new Date(Date.now()-1e3*3600*24*28).toISOString(),S=["(tv)","(album version)","(movie version)","[duet]"],f=e=>(S.forEach(o=>{e.title.toLowerCase().endsWith(o)&&(e.title=e.title.slice(0,-o.length))}),e.title=e.title.trim(),e.language=e.language.map(o=>o.toLowerCase().startsWith("espa")?"Spanish":o.toLowerCase().endsWith("(romanized)")?o.slice(0,-11).trim():o.toLowerCase().endsWith("(brazil)")?"Portuguese":o),e.lastUpdate=new Date().toISOString(),e.id=void 0,e.id=u(e),e),w=async(e,o,s,n)=>{const l=await e(`${p}/api/projects/${h}/events?event=share-song&after=${m}&limit=200`);await Promise.all(l.results.map(async r=>{var i,a;try{let t=g(r.properties.song);if(!t.id){console.log("Song has no ID",t);return}f(t),s.includes(t.id)?console.log(`Song ${t.id} already fetched`):(((i=t.tracks[0])==null?void 0:i.sections.length)??0)<5?console.log(`Song ${t.id} seems to be broken, ${(a=t.tracks[0])==null?void 0:a.sections.length} sections found`):o.find(d=>d.id===t.id)?console.log(`Song ${t.id} already exists`):(t.lastUpdate=new Date().toISOString(),await n(t),console.log(`Added song ${t.id}`))}catch{console.warn(`Couldn't convert song ${r.properties.song}`)}}))},$=async()=>{const e=sessionStorage.getItem("posthog_key")||prompt("Enter PostHog PAT");if(!e)return;sessionStorage.setItem("posthog_key",e),await w(async s=>{const n=await fetch(s,{headers:{Authorization:`Bearer ${e}`}});if(!n.ok)throw new Error(`Request failed with status ${n.status}`);return n.json()},await c.getIndex(!0),[],async s=>c.store(s))};export{$ as default};
//# sourceMappingURL=importSongsFromPostHog-ydvf8OWn.js.map
