{"version":3,"file":"Setlists-ClKisLw5.js","sources":["../../node_modules/.pnpm/@mui+icons-material@6.4.6_@mui+material@6.4.6_@emotion+react@11.14.0_@types+react@19.0.2_reac_bwwdgqvgtdmzbxodzng2tkdray/node_modules/@mui/icons-material/esm/LockOpen.js","../../node_modules/.pnpm/@mui+icons-material@6.4.6_@mui+material@6.4.6_@emotion+react@11.14.0_@types+react@19.0.2_reac_bwwdgqvgtdmzbxodzng2tkdray/node_modules/@mui/icons-material/esm/LockOutlined.js","../../src/routes/Edit/Setlists.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m0 12H6V10h12z\"\n}), 'LockOpen');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2M9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9zm9 14H6V10h12zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2\"\n}), 'LockOutlined');","import styled from '@emotion/styled';\nimport { LockOpen, LockOutlined } from '@mui/icons-material';\nimport { Button, Grid } from '@mui/material';\nimport { useBackground } from 'modules/Elements/BackgroundContext';\nimport NoPrerender from 'modules/Elements/NoPrerender';\nimport NormalizeFontSize from 'modules/Elements/NormalizeFontSize';\nimport useSongIndex from 'modules/Songs/hooks/useSongIndex';\nimport { encodeSongList } from 'modules/Songs/utils/setlists';\nimport useBackgroundMusic from 'modules/hooks/useBackgroundMusic';\nimport { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport SongsTable from 'routes/Edit/Components/SongsTable';\nimport createPersistedState from 'use-persisted-state';\nimport { Link } from 'wouter';\n\nconst MAX_SONGS_PER_SETLIST = 300;\n\ninterface StoredSetlistEntity {\n  name: string;\n  songList: number[];\n  isEditable: boolean;\n}\n\nconst useSetlists = createPersistedState<StoredSetlistEntity[]>('setlists');\n\nexport default function Setlists() {\n  useBackground(false);\n  useBackgroundMusic(false);\n  const { data } = useSongIndex(true);\n  const [setlists, setSetlists] = useSetlists([]);\n  const [selectedSetlist, setSelectedSetlist] = useState<string | null>(null);\n\n  const selectedSongs = setlists.find((setlist) => setlist.name === selectedSetlist)?.songList || [];\n  const onSelect = (selected: number[]) => {\n    if (selected.length > MAX_SONGS_PER_SETLIST) {\n      alert(`You can only select up to ${MAX_SONGS_PER_SETLIST} songs per setlist.`);\n      return;\n    }\n    setSetlists((prevSetlists) =>\n      prevSetlists.map((setlist) => (setlist.name === selectedSetlist ? { ...setlist, songList: selected } : setlist)),\n    );\n  };\n\n  if (!data) return <>Loading</>;\n\n  return (\n    <>\n      <Helmet>\n        <title>Song List | AllKaraoke.Party - Free Online Karaoke Party Game</title>\n      </Helmet>\n      <NoPrerender>\n        <Container>\n          <NormalizeFontSize />\n          <Grid container rowGap={2}>\n            <Grid item xs={3} display={'flex'} alignItems={'center'} justifyContent={'flex-start'}>\n              <Link to=\"menu/\">\n                <Button data-test=\"main-menu-link\">Return to main menu</Button>\n              </Link>\n            </Grid>\n            <Grid item xs={6} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n              <h4>Manage setlists</h4>\n            </Grid>\n            <Grid item xs={12}>\n              <div className=\"flex flex-col items-stretch gap-4\">\n                <p className=\"leading-6\">\n                  This feature allows you to create a custom game link that includes only a selected subset of songs.\n                  It&#39;s useful for contests or situations where you want to limit which songs are visible. Note that{' '}\n                  <strong>locally added songs cannot be included</strong>. Additionally, if you add or remove a song,{' '}\n                  <strong>the setlist link will change</strong> â€” so it&#39;s recommended to use a{' '}\n                  <a href=\"https://tinyurl.com/\" target=\"_blank\" rel=\"noreferrer\">\n                    URL shortener\n                  </a>{' '}\n                  to generate a consistent short link and update it whenever you modify the setlist. Each setlist can\n                  contain up to {MAX_SONGS_PER_SETLIST} songs.\n                </p>\n                <p>\n                  You can also make a setlist non-editable, which prevents users from adding additional songs to it.\n                </p>\n                <h5 className=\"flex items-center gap-2\">\n                  Your setlists\n                  <Button\n                    onClick={() => {\n                      const name = prompt('Enter setlist name');\n                      if (name) {\n                        setSetlists((prevSetlists) => [...prevSetlists, { name, songList: [], isEditable: true }]);\n                      }\n                    }}>\n                    Create new\n                  </Button>\n                </h5>\n                {setlists.map((setlist) => {\n                  const isSelected = setlist.name === selectedSetlist;\n                  return (\n                    <div className={`flex ${isSelected ? 'bg-blue-100' : ''} items-center gap-4`} key={setlist.name}>\n                      <span className=\"pl-2\">\n                        {setlist.isEditable ? <LockOpen /> : <LockOutlined />}&nbsp;\n                        <strong>{setlist.name}</strong> ({setlist.songList?.length} songs)\n                      </span>\n                      <Button\n                        variant={isSelected ? 'contained' : 'outlined'}\n                        className=\"ml-auto!\"\n                        onClick={() => {\n                          setSelectedSetlist(isSelected ? null : setlist.name);\n                        }}>\n                        Edit\n                      </Button>\n                      <Button\n                        onClick={() =>\n                          setSetlists(\n                            setlists.map((s) => (s.name === setlist.name ? { ...s, isEditable: !s.isEditable } : s)),\n                          )\n                        }>\n                        {setlist.isEditable ? 'Make not editable' : 'Make editable'}\n                      </Button>\n                      <Button\n                        color=\"error\"\n                        onClick={() => {\n                          const confirmed = confirm(`Are you sure you want to delete the setlist \"${setlist.name}\"?`);\n                          if (confirmed) {\n                            setSetlists((prevSetlists) => prevSetlists.filter((s) => s.name !== setlist.name));\n                            if (selectedSetlist === setlist.name) {\n                              setSelectedSetlist(null);\n                            }\n                          }\n                        }}>\n                        Remove\n                      </Button>\n                      <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={() => {\n                          const url = new URL(window.location.href);\n                          url.pathname = '';\n                          url.searchParams.set('setlist', encodeSongList(setlist.songList, setlist.isEditable));\n                          navigator.clipboard.writeText(url.toString());\n                        }}>\n                        Copy link\n                      </Button>\n                    </div>\n                  );\n                })}\n                {setlists.length === 0 && <h6>No setlists created yet</h6>}\n              </div>\n            </Grid>\n            <Grid item xs={12}>\n              {selectedSetlist && (\n                <SongsTable onSelect={onSelect} selectedSongs={selectedSongs} selectable data={data} />\n              )}\n            </Grid>\n          </Grid>\n        </Container>\n      </NoPrerender>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  margin: 0 auto;\n  height: 100%;\n  width: 1260px;\n  background: white;\n  padding: 60px 20px 0 20px;\n`;\n"],"names":["LockOpen","createSvgIcon","_jsx","LockOutlined","MAX_SONGS_PER_SETLIST","useSetlists","createPersistedState","Setlists","useBackground","useBackgroundMusic","data","useSongIndex","setlists","setSetlists","selectedSetlist","setSelectedSetlist","useState","selectedSongs","find","setlist","name","songList","onSelect","selected","length","alert","prevSetlists","map","jsxs","Fragment","jsx","Helmet","NoPrerender","Container","NormalizeFontSize","Grid","Link","Button","prompt","isEditable","isSelected","s","confirm","filter","url","URL","window","location","href","pathname","searchParams","set","encodeSongList","navigator","clipboard","writeText","toString","SongsTable","_styled","target","styles"],"mappings":"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","x_google_ignoreList":[0,1]}