{"version":3,"file":"Player-xO9cmSIb.js","sources":["../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/_castSlice.js","../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/_hasUnicode.js","../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/_asciiToArray.js","../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/_unicodeToArray.js","../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/_stringToArray.js","../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/_createCaseFirst.js","../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/upperFirst.js","../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/capitalize.js","../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/cloneDeep.js","../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/uniq.js","../../.yarn/__virtual__/react-use-virtual-efd5f0c34c/0/cache/react-use-npm-17.4.2-d0e8220eaa-56d2da474d.zip/node_modules/react-use/esm/useInterval.js","../../src/hooks/usePrevious.ts","../../src/Scenes/SelectInput/SelectInputModal.tsx","../../src/Scenes/Game/Singing/GameOverlay/Components/PauseMenu.tsx","../../src/Songs/utils/getSkipIntroTime.ts","../../src/utils/songHasLongIntro.ts","../../src/Scenes/Game/Singing/GameOverlay/Components/SkipIntro.tsx","../../src/Scenes/Game/Singing/GameOverlay/Components/SkipOutro.tsx","../../src/Scenes/Game/Singing/GameOverlay/Components/DurationBar.tsx","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/Ping.tsx","../../.yarn/__virtual__/@mui-icons-material-virtual-d72f3e2de1/0/cache/@mui-icons-material-npm-5.15.3-743414b909-2393a9dcd0.zip/node_modules/@mui/icons-material/Circle.js","../../.yarn/__virtual__/@mui-icons-material-virtual-d72f3e2de1/0/cache/@mui-icons-material-npm-5.15.3-743414b909-2393a9dcd0.zip/node_modules/@mui/icons-material/Error.js","../../.yarn/__virtual__/@mui-icons-material-virtual-d72f3e2de1/0/cache/@mui-icons-material-npm-5.15.3-743414b909-2393a9dcd0.zip/node_modules/@mui/icons-material/Warning.js","../../src/Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/Status.tsx","../../src/hooks/players/usePlayerMicStatus.ts","../../src/Scenes/Game/Singing/GameOverlay/Components/LyricsVolumeIndicator.tsx","../../src/Scenes/Game/Singing/GameOverlay/Components/Lyrics.tsx","../../src/Scenes/Game/Singing/GameOverlay/Components/ScoreText.tsx","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/utils/getNoteColor.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/ray.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/debris.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Particles/utils.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Particles/SungTriangle.ts","../../.yarn/cache/curtainsjs-npm-8.1.5-1d10752bc9-da0ad53575.zip/node_modules/curtainsjs/src/shaders/chunks/precision.medium.glsl.js","../../.yarn/cache/curtainsjs-npm-8.1.5-1d10752bc9-da0ad53575.zip/node_modules/curtainsjs/src/shaders/chunks/default.attributes.glsl.js","../../.yarn/cache/curtainsjs-npm-8.1.5-1d10752bc9-da0ad53575.zip/node_modules/curtainsjs/src/shaders/chunks/default.varyings.glsl.js","../../.yarn/cache/curtainsjs-npm-8.1.5-1d10752bc9-da0ad53575.zip/node_modules/curtainsjs/src/shaders/plane.vertex.glsl.js","../../.yarn/cache/curtainsjs-npm-8.1.5-1d10752bc9-da0ad53575.zip/node_modules/curtainsjs/src/shaders/plane.fragment.glsl.js","../../.yarn/cache/curtainsjs-npm-8.1.5-1d10752bc9-da0ad53575.zip/node_modules/curtainsjs/src/shaders/shaderpass.vertex.glsl.js","../../.yarn/cache/curtainsjs-npm-8.1.5-1d10752bc9-da0ad53575.zip/node_modules/curtainsjs/src/shaders/shaderpass.fragment.glsl.js","../../src/Scenes/Game/Singing/GameOverlay/Drawing/calculateData.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/roundRect.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/applyColor.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/Elements/note.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/Elements/playerNote.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/spriteMap.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/utils/createCanvas.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/cachedSprites.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/spriteWithStartAndEnd.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/note.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/playerFrequencyTrace.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Elements/playerNote.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/ParticleManager.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Particles/Triangle.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Particles/ExplodingNote.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Particles/FadeoutNote.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Particles/Ray.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Particles/Vibrato.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/CanvasDrawing.ts","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Shaders/shader.frag?raw","../../src/Scenes/Game/Singing/GameOverlay/Drawing/Shaders/shader.vert?raw","../../src/Scenes/Game/Singing/GameOverlay/GameOverlay.tsx","../../src/Scenes/Game/Singing/Player.tsx"],"sourcesContent":["import baseSlice from './_baseSlice.js';\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nexport default castSlice;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nexport default hasUnicode;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nexport default asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nexport default unicodeToArray;\n","import asciiToArray from './_asciiToArray.js';\nimport hasUnicode from './_hasUnicode.js';\nimport unicodeToArray from './_unicodeToArray.js';\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nexport default stringToArray;\n","import castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nexport default createCaseFirst;\n","import createCaseFirst from './_createCaseFirst.js';\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nexport default upperFirst;\n","import toString from './toString.js';\nimport upperFirst from './upperFirst.js';\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nexport default capitalize;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n","import { useEffect, useRef, type MutableRefObject } from 'react';\n\n/**\n * a type-safe version of the `usePrevious` hook described here:\n * @see {@link https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state}\n */\nexport default function usePrevious<T>(value: T): MutableRefObject<T>['current'] {\n  const ref = useRef<T>(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n","import { MenuContainer } from 'Elements/Menu';\nimport Modal from 'Elements/Modal';\nimport SelectInputView from 'Scenes/SelectInput/SelectInputView';\n\ninterface Props {\n  onClose: () => void;\n  closeButtonText: string;\n}\n\nexport default function SelectInputModal({ onClose, closeButtonText }: Props) {\n  return (\n    <Modal onClose={onClose}>\n      <MenuContainer>\n        <SelectInputView\n          smooth={false}\n          onBack={onClose}\n          onFinish={onClose}\n          closeButtonText={closeButtonText}\n          skipText={'Back'}\n        />\n      </MenuContainer>\n    </Modal>\n  );\n}\n","import styled from '@emotion/styled';\nimport { MenuButton, MenuContainer } from 'Elements/Menu';\nimport Modal from 'Elements/Modal';\nimport SelectInputModal from 'Scenes/SelectInput/SelectInputModal';\nimport InputLag from 'Scenes/Settings/InputLag';\nimport useKeyboardNav from 'hooks/useKeyboardNav';\nimport { useEffect, useRef, useState } from 'react';\n\ninterface Props {\n  onResume: () => void;\n  onExit: () => void;\n  onRestart: () => void;\n}\n\nexport default function PauseMenu({ onResume, onExit, onRestart }: Props) {\n  const menuRef = useRef<null | HTMLButtonElement>(null);\n  const inputLagRef = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    menuRef.current?.focus();\n  }, [menuRef]);\n\n  const [isInputModalOpen, setIsInputModalOpen] = useState(false);\n\n  const { register } = useKeyboardNav({ enabled: !isInputModalOpen });\n\n  return (\n    <Modal onClose={onResume}>\n      <MenuContainer>\n        <MenuButton {...register('button-resume-song', onResume)} ref={menuRef}>\n          Resume song\n        </MenuButton>\n        <MenuButton {...register('button-restart-song', onRestart)}>Restart song</MenuButton>\n        <MenuButton {...register('button-exit-song', onExit)}>Exit song</MenuButton>\n        <MenuButton {...register('input-settings', () => setIsInputModalOpen(true))}>Microphones settings</MenuButton>\n        <hr />\n        <InputLag ref={inputLagRef} {...register('input-lag', () => inputLagRef.current?.focus())} />\n      </MenuContainer>\n      {isInputModalOpen && (\n        <SelectInputModal onClose={() => setIsInputModalOpen(false)} closeButtonText={'Back to Pause Menu'} />\n      )}\n    </Modal>\n  );\n}\n\nconst Container = styled.div`\n  position: absolute;\n  z-index: 10;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  display: flex;\n\n  align-items: center;\n  justify-content: center;\n`;\n","import { seconds, Song, SongPreview } from 'interfaces';\nimport getSongFirstNoteMs from 'Songs/utils/getSongFirstNoteMs';\nimport isDev from 'utils/isDev';\nimport isE2E from 'utils/isE2E';\n\nexport const SKIP_INTRO_MS = isDev() || isE2E() ? 1_000 : 8_000;\n\nexport default function getSkipIntroTime(song: Song | SongPreview): seconds {\n  return Math.floor((getSongFirstNoteMs(song) - SKIP_INTRO_MS) / 1000);\n}\n","import { Song, SongPreview } from 'interfaces';\nimport getSongFirstNoteMs from 'Songs/utils/getSongFirstNoteMs';\n\nconst SKIP_INTRO_THRESHOLD_MS = 20_000;\n\nexport default function songHasLongIntro(song: Song | SongPreview) {\n  const lyricStartMs = getSongFirstNoteMs(song);\n\n  return lyricStartMs - (song.videoGap ?? 0) * 1000 > SKIP_INTRO_THRESHOLD_MS;\n}\n","import styled from '@emotion/styled';\nimport { VideoPlayerRef } from 'Elements/VideoPlayer';\nimport { typography } from 'Elements/cssMixins';\nimport GameState from 'Scenes/Game/Singing/GameState/GameState';\nimport { MobilePhoneModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport getSkipIntroTime, { SKIP_INTRO_MS } from 'Songs/utils/getSkipIntroTime';\nimport getSongFirstNoteMs from 'Songs/utils/getSongFirstNoteMs';\nimport useKeyboard from 'hooks/useKeyboard';\nimport useKeyboardHelp from 'hooks/useKeyboardHelp';\nimport posthog from 'posthog-js';\nimport { useMemo } from 'react';\nimport songHasLongIntro from 'utils/songHasLongIntro';\n\ninterface Props {\n  playerRef: VideoPlayerRef | null;\n  isEnabled: boolean;\n}\n\nfunction SkipIntro({ playerRef, isEnabled }: Props) {\n  const [mobilePhoneMode] = useSettingValue(MobilePhoneModeSetting);\n  const song = GameState.getSong()!;\n  const hasLongIntro = useMemo(() => songHasLongIntro(song), [song]);\n  const songFirstNoteMs = useMemo(() => getSongFirstNoteMs(song), [song]);\n  const shouldBeVisible = GameState.getCurrentTime(false) < songFirstNoteMs - SKIP_INTRO_MS * 1.2;\n\n  const canSkip = isEnabled && shouldBeVisible && hasLongIntro;\n\n  const skipIntro = () => {\n    playerRef?.seekTo(getSkipIntroTime(song));\n\n    const { artist, title } = GameState.getSong()!;\n    posthog.capture('introSkipped', { name: `${artist} - ${title}`, artist, title });\n  };\n  useKeyboard({ accept: skipIntro }, canSkip);\n\n  const help = useMemo(\n    () => ({\n      accept: 'Skip Intro',\n      back: 'Pause Menu',\n    }),\n    [],\n  );\n  useKeyboardHelp(help, canSkip);\n\n  return !mobilePhoneMode && canSkip ? (\n    <Container visible={canSkip} data-test=\"skip-intro-info\">\n      Press <Kbd>Enter</Kbd> to skip the intro\n    </Container>\n  ) : null;\n}\n\nconst Container = styled.div<{ visible: boolean }>`\n  ${typography};\n  pointer-events: none;\n  position: fixed;\n  bottom: 29rem;\n  transform: scale(${(props) => (props.visible ? 1 : 0)});\n  opacity: ${(props) => (props.visible ? 1 : 0)};\n  text-align: center;\n  font-size: 5rem;\n  text-shadow: 0 0 3.5rem black;\n  width: 100%;\n  z-index: 4;\n  padding: 0.5rem;\n  transition: ease 500ms;\n`;\n\nconst Kbd = styled.kbd<{ disabled?: boolean }>`\n  margin: 0.2rem;\n  padding: 0.2rem 2rem;\n  border-radius: 1.3rem;\n  border: 0.5rem solid rgb(204, 204, 204);\n  border-bottom-color: rgb(150, 150, 150);\n  border-right-color: rgb(150, 150, 150);\n  line-height: 1.4;\n  display: inline-block;\n  background-color: rgb(247, 247, 247);\n  text-shadow: 0 1rem 0 #fff;\n\n  opacity: ${(props) => (props.disabled ? 0.25 : 1)};\n`;\n\nexport default SkipIntro;\n","import styled from '@emotion/styled';\nimport { typography } from 'Elements/cssMixins';\nimport GameState from 'Scenes/Game/Singing/GameState/GameState';\nimport beatToMs from 'Scenes/Game/Singing/GameState/Helpers/beatToMs';\nimport { MobilePhoneModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport { getLastNoteEnd } from 'Songs/utils/notesSelectors';\nimport useDebounce from 'hooks/useDebounce';\nimport useKeyboard from 'hooks/useKeyboard';\nimport useKeyboardHelp from 'hooks/useKeyboardHelp';\nimport posthog from 'posthog-js';\nimport React, { useMemo, useState } from 'react';\nimport { useInterval } from 'react-use';\n\ninterface Props {\n  onSongEnd: () => void;\n  isEnabled: boolean;\n}\n\nconst SHOW_OUTRO_THRESHOLD_MS = 15_000;\n\nfunction SkipOutro({ onSongEnd, isEnabled }: Props) {\n  const [mobilePhoneMode] = useSettingValue(MobilePhoneModeSetting);\n  const duration = GameState.getDuration();\n\n  const singingEndBeat = useMemo(\n    () => Math.max(...GameState.getPlayers().map((player) => getLastNoteEnd(player.getLastNotesSection()))),\n    [],\n  );\n\n  const canSkip = useMemo(() => {\n    const singingEndTime = beatToMs(singingEndBeat, GameState.getSong()!);\n\n    return isEnabled && duration * 1000 > singingEndTime + SHOW_OUTRO_THRESHOLD_MS;\n  }, [duration, singingEndBeat, isEnabled]);\n\n  const [currentBeat, setCurrentBeat] = useState(0);\n  const [skipping, setSkipping] = useState(false);\n\n  useInterval(() => setCurrentBeat(GameState.getCurrentBeat()), 1_000);\n\n  const shouldBeVisible = useDebounce(canSkip && currentBeat > singingEndBeat, 5_000) && !skipping;\n\n  const skipOutro = () => {\n    setSkipping(true);\n    setTimeout(onSongEnd, 700);\n\n    const { artist, title } = GameState.getSong()!;\n    posthog.capture('outroSkipped', { name: `${artist} - ${title}`, artist, title });\n  };\n  useKeyboard({ accept: skipOutro }, shouldBeVisible);\n\n  const help = useMemo(\n    () => ({\n      accept: 'Skip Outro',\n      back: 'Pause Menu',\n    }),\n    [],\n  );\n  useKeyboardHelp(help, shouldBeVisible);\n\n  return !mobilePhoneMode && canSkip ? (\n    <Container visible={shouldBeVisible}>\n      Press <Kbd>Enter</Kbd> to skip the outro\n    </Container>\n  ) : null;\n}\n\nconst Container = styled.div<{ visible: boolean }>`\n  ${typography};\n  pointer-events: none;\n  position: fixed;\n  bottom: 29rem;\n  transform: scale(${(props) => (props.visible ? 1 : 0)});\n  opacity: ${(props) => (props.visible ? 1 : 0)};\n  text-align: center;\n  font-size: 5rem;\n  text-shadow: 0 0 3.5rem black;\n  width: 100%;\n  z-index: 4;\n  padding: 0.5rem;\n  transition: ease 500ms;\n`;\n\nconst Kbd = styled.kbd<{ disabled?: boolean }>`\n  margin: 0.2rem;\n  padding: 0.2rem 2rem;\n  border-radius: 1.3rem;\n  border: 0.5rem solid rgb(204, 204, 204);\n  border-bottom-color: rgb(150, 150, 150);\n  border-right-color: rgb(150, 150, 150);\n  line-height: 1.4;\n  display: inline-block;\n  background-color: rgb(247, 247, 247);\n  text-shadow: 0 1rem 0 #fff;\n\n  opacity: ${(props) => (props.disabled ? 0.25 : 1)};\n`;\n\nexport default React.memo(SkipOutro);\n","import styled from '@emotion/styled';\nimport { getFirstNoteStartFromSections, getLastNoteEndFromSections } from 'Songs/utils/notesSelectors';\nimport { PlayerSetup } from 'interfaces';\nimport { uniq } from 'lodash-es';\nimport { useMemo } from 'react';\nimport GameState from '../../GameState/GameState';\nimport styles from '../Drawing/styles';\n\ninterface Props {\n  players: PlayerSetup[];\n}\n\nfunction DurationBar({ players }: Props) {\n  const currentTime = GameState.getCurrentTime(false);\n  const beatLength = GameState.getSongBeatLength();\n  const duration = GameState.getDuration();\n  const song = GameState.getSong()!;\n\n  const firstNotes = useMemo(\n    () =>\n      uniq(\n        song.tracks\n          .filter((v, index) => players.find((player) => player.track === index))\n          .map(({ sections }) => getFirstNoteStartFromSections(sections) * beatLength + song.gap),\n      ),\n    [song, beatLength, players],\n  );\n  const lastNotes = useMemo(\n    () =>\n      uniq(\n        song.tracks\n          .filter((v, index) => players.find((player) => player.track === index))\n          .map(({ sections }) => getLastNoteEndFromSections(sections) * beatLength + song.gap),\n      ),\n    [song, beatLength, players],\n  );\n\n  const durationMs = duration * 1000;\n\n  if (!currentTime || !duration) return null;\n\n  return (\n    <Bar>\n      {firstNotes.map((note) => (\n        <Marker key={note} position={note / durationMs} />\n      ))}\n      {lastNotes.map((note) => (\n        <Marker key={note} position={note / durationMs} />\n      ))}\n      <BarFill fill={currentTime / durationMs} />\n    </Bar>\n  );\n}\n\nconst Bar = styled.div`\n  position: absolute;\n  height: 0.6rem;\n  width: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  left: 0;\n  top: calc(50% - 0.3rem);\n`;\n\nconst BaseMarker = styled(Bar)`\n  top: 0;\n  margin-left: -0.25rem;\n  width: 0.5rem;\n  background: ${styles.colors.text.active};\n  opacity: 75%;\n`;\n\nconst Marker = (props: { position: number }) => (\n  <BaseMarker style={{ left: `${Math.min(props.position * 100, 100)}%` }} />\n);\n\nconst BaseBarFill = styled(Bar)`\n  top: 0;\n  background: white;\n  opacity: 50%;\n`;\n\nconst BarFill = (props: { fill: number }) => (\n  <BaseBarFill style={{ width: `${Math.round(props.fill * 10_000) / 100}%` }} />\n);\n\nexport default DurationBar;\n","import styled from '@emotion/styled';\nimport PlayersManager from 'Players/PlayersManager';\nimport { useDevicePing } from 'Scenes/SelectInput/hooks/useDevicePing';\n\ninterface Props {\n  playerNumber: number;\n}\n\nfunction Ping({ playerNumber, ...restProps }: Props) {\n  const latency = useDevicePing(PlayersManager.getPlayer(playerNumber)?.input?.deviceId);\n\n  return <>{latency !== null ? <PingContainer {...restProps}>{latency}ms</PingContainer> : ''}</>;\n}\nexport default Ping;\n\nconst PingContainer = styled.span`\n  position: absolute;\n  right: 4rem;\n  bottom: 0.5rem;\n  font-size: 1.75rem;\n`;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2z\"\n}), 'Circle');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');\nexports.default = _default;","import styled from '@emotion/styled';\nimport CircleIcon from '@mui/icons-material/Circle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport { typography } from 'Elements/cssMixins';\nimport { inputStatus } from 'Scenes/Game/Singing/Input/Interface';\n\ninterface Props {\n  status: inputStatus;\n  tooltipPosition?: 'start' | 'end';\n}\n\nfunction PlayerStatus({ status, tooltipPosition = 'end', ...restProps }: Props) {\n  return (\n    <StatusContainer {...restProps}>\n      {status === 'ok' ? (\n        <OkIcon data-test=\"status-ok\" />\n      ) : status === 'unavailable' ? (\n        <UnavailableIcon data-test=\"status-unavailable\" />\n      ) : (\n        <UnstableIcon data-test=\"status-unstable\" />\n      )}\n      {status === 'unavailable' ? (\n        <StatusDescription position={tooltipPosition}>\n          <span>\n            The device is <strong>disconnected</strong>. Reconnect it, please.\n          </span>\n        </StatusDescription>\n      ) : status === 'unstable' ? (\n        <StatusDescription position={tooltipPosition}>\n          <span>\n            The connection seems <strong>unstable</strong>. Connect to the same Wifi.\n          </span>\n        </StatusDescription>\n      ) : null}\n    </StatusContainer>\n  );\n}\nexport default PlayerStatus;\n\nconst StatusContainer = styled.span`\n  position: absolute;\n  right: 0.5rem;\n  top: 0.5rem;\n  font-size: 3rem;\n  z-index: 10;\n  svg {\n    width: 3rem;\n    height: 3rem;\n    text-shadow: black;\n  }\n`;\n\nconst OkIcon = styled(CircleIcon)`\n  fill: #ffffff;\n  stroke: black;\n  stroke-width: 1px;\n`;\n\nconst UnavailableIcon = styled(ErrorIcon)`\n  fill: #ff0000;\n`;\n\nconst UnstableIcon = styled(WarningIcon)`\n  fill: #f89400;\n  stroke: black;\n`;\n\nconst StatusDescription = styled.div<{ position: Props['tooltipPosition'] }>`\n  ${typography};\n  position: absolute;\n  ${(props) => (props.position === 'end' ? 'left: 100%' : 'right: 150%')};\n  top: -0.5rem;\n  font-size: 1.5rem;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  width: 25rem;\n  background: rgba(0, 0, 0, 0.75);\n  padding: 0.5rem;\n  margin-left: 2rem;\n`;\n","import { useEffect, useState } from 'react';\nimport InputManager from 'Scenes/Game/Singing/Input/InputManager';\nimport { inputStatus } from 'Scenes/Game/Singing/Input/Interface';\n\nconst usePlayerMicStatus = (\n  playerNumber: number,\n  intervalMs = 333,\n  onMeasure?: ([volume, frequency]: [number, number]) => void,\n) => {\n  const [data, setData] = useState<inputStatus>('ok');\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setData(InputManager.getInputStatus(playerNumber));\n    }, intervalMs);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [playerNumber, intervalMs, onMeasure]);\n\n  return data;\n};\n\nexport default usePlayerMicStatus;\n","import styled from '@emotion/styled';\nimport { VolumeIndicator } from 'Elements/VolumeIndicator';\nimport { PlayerEntity } from 'Players/PlayersManager';\nimport InputManager from 'Scenes/Game/Singing/Input/InputManager';\nimport Ping from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/Ping';\nimport PlayerStatus from 'Scenes/SingASong/SongSelection/Components/SongSettings/MicCheck/Status';\nimport usePlayerMicStatus from 'hooks/players/usePlayerMicStatus';\n\ninterface Props {\n  player: PlayerEntity;\n  bottom?: boolean;\n}\n\nfunction LyricsVolumeIndicator({ player, bottom = false }: Props) {\n  const playerVolume = InputManager.getPlayerVolume(player.number);\n  const status = usePlayerMicStatus(player.number);\n\n  return (\n    <Container>\n      {status !== 'unavailable' && <VolumeIndicator playerNumber={player.number} volume={playerVolume} />}\n      <StyledPlayerStatus status={status} tooltipPosition=\"start\" />\n      <StyledPing playerNumber={player.number} />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: absolute;\n  width: 20rem;\n  right: 0;\n  top: 0;\n  height: 100%;\n`;\n\nconst StyledPlayerStatus = styled(PlayerStatus)`\n  top: auto;\n  right: 1rem;\n  bottom: 1rem;\n`;\nconst StyledPing = styled(Ping)`\n  z-index: 2;\n  font-size: 2rem;\n  margin-right: 1rem;\n  -webkit-text-stroke: 0.1rem black;\n  bottom: 1.5rem;\n`;\n\nexport default LyricsVolumeIndicator;\n","import styled from '@emotion/styled';\nimport SwapHorizIcon from '@mui/icons-material/SwapHoriz';\nimport { PlayerEntity } from 'Players/PlayersManager';\nimport LyricsVolumeIndicator from 'Scenes/Game/Singing/GameOverlay/Components/LyricsVolumeIndicator';\nimport { MobilePhoneModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport isNotesSection from 'Songs/utils/isNotesSection';\nimport { getFirstNoteStartFromSections } from 'Songs/utils/notesSelectors';\nimport { Note } from 'interfaces';\nimport { ComponentProps, Fragment, PropsWithChildren, useMemo } from 'react';\nimport tinycolor from 'tinycolor2';\nimport GameState from '../../GameState/GameState';\nimport styles from '../Drawing/styles';\n\ninterface Props {\n  player: PlayerEntity;\n  bottom?: boolean;\n  playerChanges: number[][];\n  effectsEnabled: boolean;\n}\n\nfunction Lyrics({ player, playerChanges, bottom = false, effectsEnabled }: Props) {\n  const playerState = GameState.getPlayer(player.number)!;\n  const [mobilePhoneMode] = useSettingValue(MobilePhoneModeSetting);\n  const playerColor = styles.colors.players[player.number].text;\n  const thisPlayerChanges = playerChanges[playerState.getTrackIndex()] ?? [];\n  const section = playerState.getCurrentSection();\n  const nextSection = playerState.getNextSection();\n  const subsequentSection = playerState.getNextSection(2);\n  const currentBeat = GameState.getCurrentBeat();\n  const beatLength = GameState.getSongBeatLength();\n\n  const previousChange = Math.max(0, ...thisPlayerChanges.filter((beat) => beat <= section?.start ?? -Infinity));\n  const nextChange = thisPlayerChanges.find((beat) => beat > section?.start ?? Infinity) ?? Infinity;\n  const timeToNextChange = (nextChange - currentBeat) * beatLength;\n\n  const passTheMicProgress = (nextChange - currentBeat) / (nextChange - previousChange);\n\n  const shouldBlink = timeToNextChange < 2500;\n\n  const hasNotes = isNotesSection(section);\n\n  const beatsBetweenSectionAndNote = hasNotes ? getFirstNoteStartFromSections([section]) - section.start : 0;\n\n  return (\n    <LyricsContainer shouldBlink={shouldBlink} bottom={bottom}>\n      {!mobilePhoneMode && effectsEnabled && <LyricsVolumeIndicator player={player} />}\n      {timeToNextChange < Infinity && (\n        <PassTheMicProgress color={playerColor} progress={passTheMicProgress <= 1 ? passTheMicProgress * 100 : 0} />\n      )}\n      {hasNotes ? (\n        <>\n          <LyricsLine data-test={`lyrics-current-player-${player.number}`} effectsEnabled={effectsEnabled}>\n            <HeadstartContainer>\n              <Headstart\n                color={playerColor}\n                percent={Math.min(2, (currentBeat - section.start) / beatsBetweenSectionAndNote)}\n              />\n            </HeadstartContainer>\n            {section?.notes.map((note) => {\n              const fill = effectsEnabled\n                ? Math.max(0, Math.min(2, (currentBeat - note.start) / note.length))\n                : currentBeat >= note.start\n                ? 1\n                : 0;\n              return (\n                <LyricContainer type={note.type} key={note.start}>\n                  <LyricActiveContainer>\n                    <LyricActive fill={fill} color={playerColor}>\n                      {note.lyrics.trim()}\n                    </LyricActive>\n                    {note.lyrics.endsWith(' ') && ' '}\n                  </LyricActiveContainer>\n                  {note.lyrics}\n                </LyricContainer>\n              );\n            })}\n            {nextSection?.start === nextChange && <PassTheMicSymbol shouldShake />}\n          </LyricsLine>\n        </>\n      ) : (\n        <LyricsLine effectsEnabled={effectsEnabled}>&nbsp;</LyricsLine>\n      )}\n      {isNotesSection(nextSection) ? (\n        <LyricsLine nextLine data-test={`lyrics-next-player-${player.number}`} effectsEnabled={effectsEnabled}>\n          {nextSection.notes.map((note) => (\n            <Fragment key={note.start}>{note.lyrics}</Fragment>\n          ))}\n          {subsequentSection?.start === nextChange && <PassTheMicSymbol />}\n        </LyricsLine>\n      ) : (\n        <LyricsLine effectsEnabled={effectsEnabled} nextLine>\n          &nbsp;\n        </LyricsLine>\n      )}\n    </LyricsContainer>\n  );\n}\n\nconst HeadstartContainer = styled.span`\n  position: relative;\n  height: 0;\n`;\n\nconst BaseHeadstart = styled.span`\n  position: absolute;\n  width: 15rem;\n  height: 3.1rem;\n  margin: 0.7rem 0;\n  right: 10rem;\n`;\n\nconst Headstart = ({ percent, color }: { percent: number; color: string }) => {\n  const rgbColor = useMemo(() => {\n    const rgb = tinycolor(color).toRgb();\n    return `${rgb.r}, ${rgb.g}, ${rgb.b}`;\n  }, [color]);\n\n  return (\n    <BaseHeadstart\n      style={{\n        transformOrigin: 'right',\n        transform: `scaleX(${Math.min(1, 2 - percent)})`,\n        right: `${Math.max(0, 1 - percent) * 15}rem`,\n        background: `linear-gradient(270deg, ${rgbColor}, 1) 0%, rgba(${color}, 0.5) 25%, rgba(${rgbColor}, 0) 100%)`,\n      }}\n    />\n  );\n};\n\nconst LyricsContainer = styled.div<{ shouldBlink: boolean; bottom: boolean }>`\n  @keyframes blink {\n    100% {\n      background-color: rgba(0, 0, 0, ${(props) => (props.bottom ? '0.85' : '0.5')});\n    }\n    30% {\n      background-color: rgba(0, 0, 0, ${(props) => (props.bottom ? '0.85' : '0.5')});\n    }\n    50% {\n      background-color: rgba(200, 200, 200, ${(props) => (props.bottom ? '0.85' : '0.5')});\n    }\n    30% {\n      background-color: rgba(0, 0, 0, ${(props) => (props.bottom ? '0.85' : '0.5')});\n    }\n    0% {\n      background-color: rgba(0, 0, 0, ${(props) => (props.bottom ? '0.85' : '0.5')});\n    }\n  }\n\n  box-sizing: border-box;\n\n  padding: 1rem;\n  background: rgba(0, 0, 0, ${(props) => (props.bottom ? '0.9' : '0.5')});\n  width: 100%;\n  text-align: center;\n  line-height: 1;\n  margin: 2rem 0;\n  position: relative;\n  ${(props) => (props.shouldBlink ? `animation: blink 350ms ease-in-out infinite both;` : ``)}\n`;\n\nconst LyricContainer = styled.span<{ type: Note['type'] }>`\n  font-style: ${(props) => (props.type === 'freestyle' ? 'italic' : 'normal')};\n`;\n\nconst LyricActiveContainer = styled.span`\n  position: absolute;\n  z-index: 1;\n`;\nconst BaseLyricActive = styled.span``;\n\nconst LyricActive = ({ fill, color, children }: PropsWithChildren<{ fill: number; color: string }>) => (\n  <BaseLyricActive\n    style={{\n      clipPath: `inset(0 ${(1 - (fill === 0 ? 0 : fill + 0.05)) * 100}% -5rem 0)`,\n      color: `${color}`,\n    }}>\n    {children}\n  </BaseLyricActive>\n);\n\nconst BasePassTheMicProgress = styled.div<{ color: string }>`\n  position: absolute;\n  height: 1rem;\n  background: ${(props) => props.color};\n  width: 100%;\n`;\n\nconst PassTheMicProgress = (props: { progress: number } & ComponentProps<typeof BasePassTheMicProgress>) => (\n  <BasePassTheMicProgress\n    style={{\n      transformOrigin: 'left',\n      transform: `scaleX(${props.progress / 100})`,\n    }}\n    color={props.color}\n  />\n);\n\nconst PassTheMicSymbol = styled(SwapHorizIcon, {\n  shouldForwardProp: (prop) => prop !== 'shouldShake',\n})<{\n  shouldShake?: boolean;\n}>`\n  @keyframes shake {\n    10%,\n    90% {\n      transform: translate3d(-0.1rem, 0, 0);\n    }\n\n    20%,\n    80% {\n      transform: translate3d(0.2rem, 0, 0);\n    }\n\n    30%,\n    50%,\n    70% {\n      transform: translate3d(-0.4rem, 0, 0);\n    }\n\n    40%,\n    60% {\n      transform: translate3d(0.4rem, 0, 0);\n    }\n  }\n\n  ${(props) => props.shouldShake && 'animation: shake 0.92s cubic-bezier(0.36, 0.07, 0.19, 0.97) both infinite;'}\n  margin-left: 2rem;\n  ${(props) => (props.shouldShake ? `fill: ${styles.colors.text.active};` : '')}\n  font-size: ${(props) => (props.shouldShake ? 4 : 3)}rem;\n`;\nconst LyricsLine = styled.div<{ nextLine?: boolean; effectsEnabled: boolean }>`\n  font-size: ${({ nextLine, effectsEnabled }) => (effectsEnabled ? 3.5 + (nextLine ? 0 : 1) : 2)}rem;\n  height: ${({ effectsEnabled }) => (effectsEnabled ? 4.5 : 2)}rem;\n  ${({ effectsEnabled }) => (!effectsEnabled ? '-webkit-text-stroke-width: 2px' : '')};\n\n  color: ${({ nextLine }) => (nextLine ? styles.colors.text.inactive : styles.colors.text.default)};\n\n  font-family: 'Comic Sans MS', 'Comic Sans', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n    'Helvetica Neue', sans-serif;\n  z-index: 10;\n`;\n\nexport default Lyrics;\n","interface Props {\n  score: number;\n}\n\nexport const formatter = new Intl.NumberFormat(undefined, { maximumFractionDigits: 0 });\n\nexport default function ScoreText({ score }: Props) {\n  return <>{formatter.format(score)}</>;\n}\n","import { PlayerNote } from 'interfaces';\nimport styles from '../../styles';\n\nexport function getColor(\n  ctx: CanvasRenderingContext2D,\n  playerNumber: number,\n  isStar: boolean,\n  isHit: boolean,\n  isPerfect: boolean,\n) {\n  if (isPerfect && isStar) {\n    return styles.colors.players[playerNumber].starPerfect;\n  } else if (isPerfect) {\n    return styles.colors.players[playerNumber].perfect;\n  } else if (isStar && isHit) {\n    return styles.colors.players[playerNumber].star;\n  } else if (isHit) {\n    return styles.colors.players[playerNumber].hit;\n  } else {\n    return styles.colors.players[playerNumber].miss;\n  }\n}\n\nexport default function getNoteColor(\n  ctx: CanvasRenderingContext2D,\n  playerNumber: number,\n  isHit: boolean,\n  playerNote: PlayerNote,\n) {\n  return getColor(ctx, playerNumber, playerNote.note.type === 'star', isHit, playerNote.isPerfect);\n}\n","import tinycolor from 'tinycolor2';\nimport { randomInt } from 'utils/randomValue';\n\nconst cachedColors: Record<string, [string[], string[], string[]]> = {};\n\nconst getColors = (color: string) => {\n  if (!cachedColors[color]) {\n    const c = tinycolor(color);\n    cachedColors[color] = [\n      [c.setAlpha(0.8).toRgbString(), c.setAlpha(0.9).toRgbString(), c.setAlpha(1).toRgbString()],\n      [c.setAlpha(0).toRgbString()],\n      [c.setAlpha(0.1).toRgbString(), c.setAlpha(0.3).toRgbString(), c.setAlpha(0.2).toRgbString()],\n    ];\n  }\n\n  return cachedColors[color];\n};\n\nexport default function ray(\n  canvas: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  color: string | any,\n  alpha: number = 1,\n) {\n  if (width <= 0) return;\n\n  ctx.globalAlpha = 1;\n  const gradient = ctx.createRadialGradient(x, y, 0, x, y, width / 2);\n  const [cFirst, cLast, c0] = getColors(color);\n  gradient.addColorStop(0, cFirst[randomInt(0, cFirst.length - 1)]);\n  gradient.addColorStop(0.05, cFirst[randomInt(0, cFirst.length - 1)]);\n  gradient.addColorStop(0.15, c0[randomInt(0, c0.length - 1)]);\n  gradient.addColorStop(1, cLast[randomInt(0, cLast.length - 1)]);\n  ctx.beginPath();\n  ctx.arc(x, y, width / 2, 0, 2 * Math.PI);\n  ctx.closePath();\n  ctx.fillStyle = gradient;\n  ctx.fill();\n  ctx.fillStyle = color;\n  ctx.globalAlpha = 1;\n}\n","import ray from './ray';\n\nexport default function debris(\n  canvas: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  angle: number,\n  color: string | CanvasGradient | CanvasPattern,\n  alpha: number = 1,\n) {\n  if (width > 0) {\n    ray(canvas, ctx, x, y, width, height, color, alpha);\n  }\n}\n\nfunction triangle(\n  canvas: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  angle: number,\n  color: string | CanvasGradient | CanvasPattern,\n  alpha: number = 1,\n) {\n  ctx.save();\n\n  // move to the center of the canvas\n  const finalX = x - width / 2;\n  const finalY = y - height / 2;\n\n  ctx.translate(finalX, finalY);\n\n  // rotate the canvas to the specified degrees\n  ctx.rotate((angle * Math.PI) / 180);\n\n  ctx.globalAlpha = alpha;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(0 - width / 2, height / 2);\n  ctx.lineTo(width / 2, height / 2);\n  ctx.lineTo(width / 2, 0);\n  ctx.lineTo(width / 2, 0 - height / 2);\n  ctx.fill();\n  ctx.globalAlpha = 1;\n  ctx.restore();\n}\n","const spreadValue = (initial: number, spread: number) => initial - spread + Math.random() * spread * 2;\n\nexport default spreadValue;\n\nexport const randomSign = (weight = 0) => Math.sign(weight + Math.random() - 0.5);\n","import debris from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/debris';\nimport spreadValue from 'Scenes/Game/Singing/GameOverlay/Drawing/Particles/utils';\nimport Particle from '../interfaces';\n\nconst baseTtlMs = 300;\nconst ttlSpreadMs = 50;\n\nconst velocityModifier = 1.3;\n\nexport default class SungTriangle implements Particle {\n  public finished = false;\n\n  private ttl;\n  private startingTtl;\n  private velocityX;\n  private velocityY;\n  private width;\n  private initialAngle;\n  private heightModifier;\n\n  constructor(private x: number, private y: number, private color: string) {\n    this.startingTtl = this.ttl = spreadValue(baseTtlMs, ttlSpreadMs);\n    this.velocityX = velocityModifier * Math.random() - velocityModifier / 2;\n    this.velocityY = velocityModifier * Math.random() - velocityModifier / 2;\n    this.width = 25;\n    this.initialAngle = 180 - Math.random() * 360;\n    this.heightModifier = 0.5 + Math.random() / 2;\n  }\n  public tick = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement, delta: number) => {\n    const percentage = 1 - this.ttl / this.startingTtl;\n    const ticksLeft = this.ttl;\n\n    const width = this.width * percentage;\n    const height = this.width * this.heightModifier * percentage;\n\n    const x = this.x - width / 2 + ticksLeft * this.velocityX;\n    const y = this.y + height / 2 + ticksLeft * this.velocityY;\n\n    debris(canvas, ctx, x, y, width, height, this.initialAngle + ticksLeft, this.color, 0.7 * percentage);\n\n    this.ttl = this.ttl - delta;\n    this.finished = this.ttl <= 0;\n  };\n}\n","const precisionMedium = `\r\nprecision mediump float;\r\n`;\r\nexport default precisionMedium.replace(/\\n/g, '');","const defaultAttributes = `\r\nattribute vec3 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\n`;\r\nexport default defaultAttributes.replace(/\\n/g, '');","const defaultVaryings = `\r\nvarying vec3 vVertexPosition;\r\nvarying vec2 vTextureCoord;\r\n`;\r\nexport default defaultVaryings.replace(/\\n/g, '');","import precisionMedium from './chunks/precision.medium.glsl.js';\r\nimport defaultAttributes from './chunks/default.attributes.glsl.js';\r\nimport defaultVaryings from './chunks/default.varyings.glsl.js';\r\n\r\nconst planeVS = precisionMedium + defaultAttributes + defaultVaryings + `\r\nuniform mat4 uMVMatrix;\r\nuniform mat4 uPMatrix;\r\n\r\nvoid main() {\r\n    vTextureCoord = aTextureCoord;\r\n    vVertexPosition = aVertexPosition;\r\n    \r\n    gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\r\n}\r\n`;\r\nexport default planeVS.replace(/\\n/g, '');","import precisionMedium from './chunks/precision.medium.glsl.js';\r\nimport defaultVaryings from './chunks/default.varyings.glsl.js';\r\n\r\nconst planeFS = precisionMedium + defaultVaryings + `\r\nvoid main() {\r\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\r\n}\r\n`;\r\nexport default planeFS.replace(/\\n/g, '');","import precisionMedium from './chunks/precision.medium.glsl.js';\r\nimport defaultAttributes from './chunks/default.attributes.glsl.js';\r\nimport defaultVaryings from './chunks/default.varyings.glsl.js';\r\n\r\nconst shaderPassVS = precisionMedium + defaultAttributes + defaultVaryings + `\r\nvoid main() {\r\n    vTextureCoord = aTextureCoord;\r\n    vVertexPosition = aVertexPosition;\r\n    \r\n    gl_Position = vec4(aVertexPosition, 1.0);\r\n}\r\n`;\r\nexport default shaderPassVS.replace(/\\n/g, '');","import precisionMedium from './chunks/precision.medium.glsl.js';\r\nimport defaultVaryings from './chunks/default.varyings.glsl.js';\r\n\r\nconst shaderPassFS = precisionMedium + defaultVaryings + `\r\nuniform sampler2D uRenderTexture;\r\n\r\nvoid main() {\r\n    gl_FragColor = texture2D(uRenderTexture, vTextureCoord);\r\n}\r\n`;\r\nexport default shaderPassFS.replace(/\\n/g, '');","import { FrequencyRecord, PlayerNote, Section, Song } from 'interfaces';\nimport isNotesSection from 'Songs/utils/isNotesSection';\n\nexport const pitchPadding = 6;\n\nexport const NOTE_HEIGHT = 30;\nexport const BIG_NOTE_HEIGHT = NOTE_HEIGHT + 6;\n\nconst getPlayerCanvas = (\n  drawingData: Pick<DrawingData, 'canvas' | 'playerCount' | 'playerIndex' | 'paddingVertical'>,\n) => {\n  const width = drawingData.canvas.width;\n  const height = drawingData.canvas.height;\n\n  // If the ratio is higher than 16/9 (e.g. 21/9), pad the excess horizontal space\n  // so in the end the notes are drawn over the same area as it would be on 16/9\n  const pixelsOverRatio = Math.max(0, (width - height * (16 / 9)) / 2);\n\n  const paddingHorizontal = 10 + (width - 2 * pixelsOverRatio) * 0.15 + pixelsOverRatio;\n\n  const paddedHeight = height - drawingData.paddingVertical * 2;\n\n  return {\n    width: width - paddingHorizontal * 2,\n    height: paddedHeight / drawingData.playerCount,\n    baseX: paddingHorizontal,\n    baseY: drawingData.paddingVertical + (drawingData.playerIndex * paddedHeight) / drawingData.playerCount,\n  };\n};\n\nexport default function calculateData({\n  canvas,\n  currentSectionIndex,\n  song,\n  songBeatLength,\n  minPitch,\n  maxPitch,\n  track,\n  playerIndex,\n  playerCount,\n  paddingVertical,\n}: DrawingData) {\n  const sections = song.tracks[track].sections;\n  const currentSection = sections[currentSectionIndex];\n  const nextSection = sections[currentSectionIndex + 1];\n\n  const playerCanvas = getPlayerCanvas({ canvas, playerCount, playerIndex, paddingVertical });\n\n  const lastNote = isNotesSection(currentSection) ? currentSection?.notes?.at(-1) : undefined;\n  const sectionEndBeat = isNotesSection(currentSection)\n    ? nextSection?.start ?? lastNote!.start + lastNote!.length\n    : currentSection.end;\n  const timeSectionGap = currentSection.start * songBeatLength;\n  const maxTime = (sectionEndBeat - currentSection.start) * songBeatLength;\n\n  const pitchStepHeight = (playerCanvas.height - 20 - NOTE_HEIGHT) / (maxPitch - minPitch + pitchPadding * 2);\n\n  return {\n    playerCanvas,\n    currentSection,\n    sectionEndBeat,\n    timeSectionGap,\n    maxTime,\n    pitchStepHeight,\n  };\n}\n\nexport interface DrawingData {\n  playerNumber: number;\n  playerIndex: number;\n  playerCount: number;\n  song: Song;\n  songBeatLength: number;\n  minPitch: number;\n  maxPitch: number;\n  canvas: HTMLCanvasElement;\n  currentTime: number;\n  currentSectionIndex: number;\n  frequencies: FrequencyRecord[];\n  playerNotes: PlayerNote[];\n  currentPlayerNotes: PlayerNote[];\n  track: number;\n\n  currentBeat: number;\n  paddingVertical: number;\n  currentSection: Section | undefined; // `undefined` can happen with `sectionShift` parameter\n}\n","function simpleRoundRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n  fill: boolean,\n  stroke: boolean,\n) {\n  const actualWidth = Math.max(width, height / 2);\n  const actualRadius = Math.min(actualWidth / 2, height / 2, radius);\n\n  ctx.beginPath();\n  ctx.moveTo(x + actualRadius, y);\n  ctx.lineTo(x + actualWidth - actualRadius, y);\n  ctx.quadraticCurveTo(x + actualWidth, y, x + actualWidth, y + actualRadius);\n  ctx.lineTo(x + actualWidth, y + height - actualRadius);\n  ctx.quadraticCurveTo(x + actualWidth, y + height, x + actualWidth - actualRadius, y + height);\n  ctx.lineTo(x + actualRadius, y + height);\n  ctx.quadraticCurveTo(x, y + height, x, y + height - actualRadius);\n  ctx.lineTo(x, y + actualRadius);\n  ctx.quadraticCurveTo(x, y, x + actualRadius, y);\n  ctx.closePath();\n  if (fill) {\n    ctx.fill();\n  }\n  if (stroke) {\n    ctx.stroke();\n  }\n}\n\nexport default function roundRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n  fill: boolean,\n  stroke: boolean,\n  glass = 0.1,\n) {\n  simpleRoundRect(ctx, x, y, width, height, radius, fill, stroke);\n\n  if (fill && glass > 0) {\n    ctx.save();\n    simpleRoundRect(ctx, x, y, width, height, radius, false, false);\n    ctx.clip();\n\n    ctx.fillStyle = `rgba(255,255,255,${glass})`;\n    ctx.fillRect(x, y, width, height / 2.2);\n\n    ctx.restore();\n  }\n}\n","export default function applyColor(\n  ctx: CanvasRenderingContext2D,\n  style: { fill: string; stroke: string; lineWidth: number },\n) {\n  ctx.fillStyle = style.fill;\n  ctx.strokeStyle = style.stroke;\n  ctx.lineWidth = style.lineWidth;\n}\n","import roundRect from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/roundRect';\nimport applyColor from 'Scenes/Game/Singing/GameOverlay/Drawing/applyColor';\nimport { Note } from 'interfaces';\nimport styles from '../../../styles';\n\nexport default function drawRawNote(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  noteType: Note['type'],\n) {\n  if (noteType === 'star') {\n    applyColor(ctx, styles.colors.lines.star);\n  } else if (noteType === 'freestyle' || noteType === 'rap') {\n    applyColor(ctx, styles.colors.lines.freestyle);\n  } else if (noteType === 'rapstar') {\n    applyColor(ctx, { ...styles.colors.lines.star, fill: styles.colors.lines.freestyle.fill });\n  } else {\n    applyColor(ctx, styles.colors.lines.normal);\n  }\n\n  ctx.shadowBlur = 10;\n  ctx.shadowColor = 'rgb(31,31,31)';\n  ctx.shadowOffsetX = 0;\n  ctx.shadowOffsetY = 0;\n  roundRect(ctx!, x, y, width, height, 100, true, true, 0.075);\n\n  ctx.shadowBlur = 0;\n  ctx.shadowOffsetX = 0;\n  ctx.shadowOffsetY = 0;\n}\n","import applyColor from 'Scenes/Game/Singing/GameOverlay/Drawing/applyColor';\nimport roundRect from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/roundRect';\nimport * as test from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/utils/getNoteColor';\n\nexport default function drawRawPlayerNote(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  playerNumber: number,\n  isHit: boolean,\n  isPerfect: boolean,\n  isStar: boolean,\n) {\n  applyColor(ctx, test.getColor(ctx, playerNumber, isStar, isHit, isPerfect));\n\n  ctx.shadowBlur = 5;\n  ctx.shadowColor = 'rgba(31,31,31, .7)';\n  ctx.shadowOffsetX = 1;\n  ctx.shadowOffsetY = 1;\n  roundRect(ctx!, x, y, width, height, 100, true, true, isHit ? 0.15 : 0);\n  ctx.shadowBlur = 0;\n  ctx.shadowOffsetX = 0;\n  ctx.shadowOffsetY = 0;\n}\n","import { BIG_NOTE_HEIGHT, NOTE_HEIGHT } from 'Scenes/Game/Singing/GameOverlay/Drawing/calculateData';\nimport drawRawNote from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/Elements/note';\nimport drawRawPlayerNote from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/Elements/playerNote';\n\nconst SHADOW_PAD = 10;\n\nexport const smallNoteFragments = {\n  start: { x: 0, y: 0, w: NOTE_HEIGHT / 2 + SHADOW_PAD, h: NOTE_HEIGHT + SHADOW_PAD * 2 },\n  middle: { x: NOTE_HEIGHT / 2 + SHADOW_PAD, y: 0, w: 1, h: NOTE_HEIGHT + SHADOW_PAD * 2 },\n  end: {\n    x: NOTE_HEIGHT / 2 + 1 + SHADOW_PAD,\n    y: 0,\n    w: NOTE_HEIGHT / 2 + SHADOW_PAD,\n    h: NOTE_HEIGHT + SHADOW_PAD * 2,\n  },\n};\nexport const bigNoteFragments = {\n  start: { x: 0, y: 0, w: BIG_NOTE_HEIGHT / 2 + SHADOW_PAD, h: BIG_NOTE_HEIGHT + SHADOW_PAD * 2 },\n  middle: { x: BIG_NOTE_HEIGHT / 2 + SHADOW_PAD, y: 0, w: 1, h: BIG_NOTE_HEIGHT + SHADOW_PAD * 2 },\n  end: {\n    x: BIG_NOTE_HEIGHT / 2 + 1 + SHADOW_PAD,\n    y: 0,\n    w: BIG_NOTE_HEIGHT / 2 + SHADOW_PAD,\n    h: BIG_NOTE_HEIGHT + SHADOW_PAD * 2,\n  },\n};\n\nconst spriteMap = {\n  blueMiss: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawPlayerNote(ctx, x, y, w, h, 0, false, false, false),\n    width: NOTE_HEIGHT + 1,\n    height: NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: smallNoteFragments,\n  },\n  blueHit: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawPlayerNote(ctx, x, y, w, h, 0, true, false, false),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n  bluePerfect: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawPlayerNote(ctx, x, y, w, h, 0, true, true, false),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n  blueStarMiss: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawPlayerNote(ctx, x, y, w, h, 0, false, false, true),\n    width: NOTE_HEIGHT + 1,\n    height: NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: smallNoteFragments,\n  },\n  blueStarHit: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawPlayerNote(ctx, x, y, w, h, 0, true, false, true),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n  blueStarPerfect: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawPlayerNote(ctx, x, y, w, h, 0, true, true, true),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n  redMiss: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawPlayerNote(ctx, x, y, w, h, 1, false, false, false),\n    width: NOTE_HEIGHT + 1,\n    height: NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: smallNoteFragments,\n  },\n  redHit: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawPlayerNote(ctx, x, y, w, h, 1, true, false, false),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n  redPerfect: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawPlayerNote(ctx, x, y, w, h, 1, true, true, false),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n  redStarMiss: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawPlayerNote(ctx, x, y, w, h, 1, false, false, true),\n    width: NOTE_HEIGHT + 1,\n    height: NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: smallNoteFragments,\n  },\n  redStarHit: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawPlayerNote(ctx, x, y, w, h, 1, true, false, true),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n  redStarPerfect: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawPlayerNote(ctx, x, y, w, h, 1, true, true, true),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n  noteNormal: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawNote(ctx, x, y, w, h, 'normal'),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n  noteStar: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawNote(ctx, x, y, w, h, 'star'),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n  noteFreestyle: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawNote(ctx, x, y, w, h, 'freestyle'),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n  noteRap: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawNote(ctx, x, y, w, h, 'rap'),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n  noteRapstar: {\n    draw: (ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) =>\n      drawRawNote(ctx, x, y, w, h, 'rapstar'),\n    width: BIG_NOTE_HEIGHT + 1,\n    height: BIG_NOTE_HEIGHT,\n    padding: SHADOW_PAD,\n    fragments: bigNoteFragments,\n  },\n};\n\nexport type SpriteNames = keyof typeof spriteMap;\n\nexport default spriteMap;\n","// In tests this function is mocked so it creates node-canvas object\nexport default function createCanvas(w: number, h: number) {\n  const canvas = document.createElement('canvas');\n  canvas.width = w;\n  canvas.height = h;\n\n  return canvas;\n}\n","import events from 'GameEvents/GameEvents';\nimport spriteMap, {\n  smallNoteFragments,\n  SpriteNames,\n} from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/spriteMap';\nimport createCanvas from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/utils/createCanvas';\n\nconst maxWidth = Math.max(...Object.values(spriteMap).map((sprite) => sprite.padding * 2 + sprite.width));\nconst height = Object.values(spriteMap)\n  .map((sprite) => sprite.padding * 2 + sprite.height)\n  .reduce((a, e) => a + e, 0);\n\nconst cachedCanvas = createCanvas(maxWidth, height);\nconst ctx = cachedCanvas.getContext('2d')!;\n\nlet currentHeight = 0;\nconst positions = Object.entries(spriteMap)\n  .map(([name, sprite]) => {\n    const pads = sprite.padding * 2;\n    const position = {\n      name,\n      x: 0,\n      y: currentHeight,\n      w: sprite.width + pads,\n      h: sprite.height + pads,\n    };\n    currentHeight = currentHeight + sprite.height + pads;\n\n    return position;\n  })\n  .reduce(\n    (acc, position) => ({ ...acc, [position.name]: position }),\n    {} as Record<SpriteNames, { x: number; y: number; w: number; h: number }>,\n  );\n\nconst generateSpriteMap = () => {\n  /// clear canvas\n  ctx.clearRect(0, 0, maxWidth, height);\n  currentHeight = 0;\n  Object.entries(spriteMap).forEach(([key, entry]) => {\n    entry.draw(ctx, entry.padding, currentHeight + entry.padding, entry.width, entry.height);\n    currentHeight = currentHeight + entry.padding * 2 + entry.height;\n  });\n};\n\ngenerateSpriteMap();\n\nevents.songStarted.subscribe(generateSpriteMap);\n\nexport const getSprite = (sprite: SpriteNames, fragment: keyof typeof smallNoteFragments) => {\n  return {\n    canvas: cachedCanvas,\n    ctx,\n    x: positions[sprite].x + spriteMap[sprite].fragments[fragment].x,\n    y: positions[sprite].y + spriteMap[sprite].fragments[fragment].y,\n    w: spriteMap[sprite].fragments[fragment].w,\n    h: spriteMap[sprite].fragments[fragment].h,\n    padding: spriteMap[sprite].padding,\n  };\n};\n\nexport const drawSprite = (\n  destCtx: CanvasRenderingContext2D,\n  sprite: SpriteNames,\n  fragment: keyof typeof smallNoteFragments,\n  destX: number,\n  destY: number,\n  destW?: number,\n  destH?: number,\n  paddingWScale = 1,\n  paddingHScale = 1,\n) => {\n  const spriteData = getSprite(sprite, fragment);\n  const { canvas, w, h, y, x, padding } = spriteData;\n  const finalWPadding = padding * paddingWScale;\n  const finalHPadding = padding * paddingHScale;\n\n  destCtx.imageSmoothingEnabled = false;\n  destCtx.drawImage(canvas, x, y, w, h, destX - finalWPadding, destY - finalHPadding, destW ?? w, destH ?? h);\n  destCtx.imageSmoothingEnabled = true;\n\n  return spriteData;\n};\n","import { drawSprite, getSprite } from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/cachedSprites';\nimport { SpriteNames } from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/spriteMap';\n\nexport default function drawSpriteWithStartAndEnd(\n  ctx: CanvasRenderingContext2D,\n  spriteName: SpriteNames,\n  x: number,\n  y: number,\n  width: number,\n) {\n  const startData = getSprite(spriteName, 'start');\n\n  const actualWidth = Math.max(width, (startData.h - startData.padding * 2) / 2);\n\n  const widthScale = Math.min(1, actualWidth / 2 / (startData.w - startData.padding));\n  const endingsWidth = widthScale * startData.w;\n  const endingsSize = endingsWidth - startData.padding * widthScale;\n\n  const middleSize = actualWidth - 2 * endingsSize;\n\n  drawSprite(ctx, spriteName, 'start', x, y, endingsWidth, undefined, widthScale);\n  if (middleSize > 0) {\n    drawSprite(ctx, spriteName, 'middle', x + endingsWidth, y, middleSize, undefined, widthScale);\n  }\n  drawSprite(ctx, spriteName, 'end', x + middleSize + endingsWidth, y, endingsWidth, undefined, widthScale);\n}\n","import { Note } from 'interfaces';\nimport { capitalize } from 'lodash-es';\nimport { SpriteNames } from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/spriteMap';\nimport drawSpriteWithStartAndEnd from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/spriteWithStartAndEnd';\n\nconst getSpriteName = (noteType: Note['type']) => {\n  return `note${capitalize(noteType)}` as SpriteNames;\n};\n\nexport default function drawNote(ctx: CanvasRenderingContext2D, x: number, y: number, width: number, note: Note) {\n  const spriteName = getSpriteName(note.type);\n\n  drawSpriteWithStartAndEnd(ctx, spriteName, x, y, width);\n}\n","import { PlayerNote } from 'interfaces';\nimport roundRect from './roundRect';\n\nexport default function drawPlayerFrequencyTrace(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  playerNote: PlayerNote,\n) {\n  ctx.save();\n  roundRect(ctx, x, y, width, height, 100, false, false);\n  ctx.clip();\n\n  ctx.beginPath();\n  ctx.strokeStyle = 'rgba(255,255,255, .35)';\n  ctx.lineWidth = 3;\n  ctx.lineJoin = 'round';\n\n  ctx.moveTo(x, y + height / 2 - (playerNote.frequencyRecords[0].preciseDistance * height) / 3);\n  for (let i = 1; i < playerNote.frequencyRecords.length; i++) {\n    ctx.lineTo(\n      x + i * (width / (playerNote.frequencyRecords.length - 1)),\n      y + height / 2 - (playerNote.frequencyRecords[i].preciseDistance * height) / 3,\n    );\n  }\n  ctx.stroke();\n  ctx.closePath();\n\n  ctx.restore();\n  ctx.lineJoin = 'miter';\n}\n","import { Note, PlayerNote } from 'interfaces';\nimport { SpriteNames } from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/Cache/spriteMap';\nimport drawSpriteWithStartAndEnd from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/spriteWithStartAndEnd';\n\nconst getSpriteName = (playerNumber: number, isHit: boolean, isPerfect: boolean, isStar: boolean) => {\n  let spriteName = playerNumber === 0 ? 'blue' : 'red';\n  if (isPerfect && isStar) {\n    spriteName = `${spriteName}StarPerfect`;\n  } else if (isPerfect) {\n    spriteName = `${spriteName}Perfect`;\n  } else if (isStar && isHit) {\n    spriteName = `${spriteName}StarHit`;\n  } else if (isHit) {\n    spriteName = `${spriteName}Hit`;\n  } else if (isStar && !isHit) {\n    spriteName = `${spriteName}StarMiss`;\n  } else {\n    spriteName = `${spriteName}Miss`;\n  }\n\n  return spriteName as SpriteNames;\n};\n\nconst starNoteTypes: Note['type'][] = ['star', 'rapstar'];\n\nexport default function drawPlayerNote(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  playerNumber: number,\n  isHit: boolean,\n  playerNote: PlayerNote,\n) {\n  const spriteName = getSpriteName(\n    playerNumber,\n    isHit,\n    playerNote.isPerfect,\n    starNoteTypes.includes(playerNote.note.type),\n  );\n\n  drawSpriteWithStartAndEnd(ctx, spriteName, x, y, width);\n}\n","import Particle from './interfaces';\n\nclass ParticleManager {\n  private particles: Particle[] = [];\n  private lastTick = Date.now();\n\n  private getTimeDelta = (timeShift: number) => {\n    const currentTick = Date.now() - timeShift;\n    const delta = currentTick - this.lastTick;\n    this.lastTick = currentTick;\n\n    return delta;\n  };\n\n  public tick = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement, timeShift = 0) => {\n    const delta = this.getTimeDelta(timeShift);\n\n    this.particles.forEach((particle) => particle.tick(ctx, canvas, delta));\n\n    this.particles = this.particles.filter((particle) => !particle.finished);\n  };\n\n  public add = (particle: Particle) => this.particles.push(particle);\n}\n\nexport default new ParticleManager();\n","import debris from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/debris';\nimport spreadValue, { randomSign } from 'Scenes/Game/Singing/GameOverlay/Drawing/Particles/utils';\nimport Particle from '../interfaces';\n\nconst baseTtl = (50 / 60) * 1000;\nconst ttlSpread = (25 / 60) * 1000;\n\nconst initialWidth = 60;\n\nconst velocityModifier = 0.3;\n\nexport default class TriangleParticle implements Particle {\n  public finished = false;\n\n  private ttl;\n  private startingTtl;\n  private velocityX;\n  private velocityY;\n  private width;\n  private initialAngle;\n  private heightModifier;\n\n  constructor(private x: number, private y: number, private color: string, private delay: number) {\n    this.startingTtl = this.ttl = spreadValue(baseTtl, ttlSpread);\n    this.velocityX = spreadValue(0.5, velocityModifier) * randomSign(0.2);\n    this.velocityY = spreadValue(0.4, velocityModifier) * randomSign();\n    this.width = initialWidth;\n    this.initialAngle = 180 - Math.random() * 360;\n    this.heightModifier = 0.5 + Math.random() / 2;\n  }\n  public tick = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement, delta: number) => {\n    if (this.delay-- > 0) return;\n\n    const percentage = this.ttl / this.startingTtl;\n    const elapsedTicks = this.startingTtl - this.ttl;\n\n    const width = this.width * percentage;\n    const height = this.width * this.heightModifier * percentage;\n\n    const x = this.x - width / 2 + elapsedTicks * this.velocityX;\n    const y = this.y - height / 2 + elapsedTicks * this.velocityY;\n\n    debris(canvas, ctx, x, y, width, height, this.initialAngle + elapsedTicks, this.color, 0.8 * percentage);\n\n    this.velocityX = this.velocityX - 0.009;\n    this.velocityY = this.velocityY * 1.0075;\n    this.ttl = this.ttl - delta;\n    this.finished = this.ttl <= 0;\n  };\n}\n","import { Note } from 'interfaces';\nimport tinycolor from 'tinycolor2';\nimport ParticleManager from '../ParticleManager';\nimport Particle from '../interfaces';\nimport styles from '../styles';\nimport TriangleParticle from './Triangle';\n\nexport default class ExplodingNoteParticle implements Particle {\n  public finished = true;\n\n  constructor(\n    x: number,\n    y: number,\n    width: number,\n    playerNumber: number,\n    note: Note,\n    particleManager: typeof ParticleManager,\n  ) {\n    const color =\n      note.type === 'star'\n        ? styles.colors.players[playerNumber].star.fill\n        : styles.colors.players[playerNumber].perfect.fill;\n\n    const lightColor = tinycolor(color).lighten(15).toRgbString();\n    const darkColor = tinycolor(color).darken(15).toRgbString();\n\n    const density = width / 8;\n    for (let i = 0; i < density; i++) {\n      const rand = Math.random();\n      let finalColor = color;\n      if (rand > 0.66) finalColor = lightColor;\n      else if (rand > 0.33) finalColor = darkColor;\n\n      const finalY = y + 20 * (Math.random() - 0.5);\n\n      particleManager.add(new TriangleParticle(x + i * 5, finalY, finalColor, (density - i) / 10));\n    }\n  }\n  public tick = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {};\n}\n","import { BIG_NOTE_HEIGHT } from 'Scenes/Game/Singing/GameOverlay/Drawing/calculateData';\nimport { Note } from 'interfaces';\nimport drawNote from '../Elements/note';\nimport Particle from '../interfaces';\n\nconst initialTtl = 200;\n\nexport default class FadeoutNote implements Particle {\n  public finished = false;\n  public ttl = initialTtl;\n\n  constructor(private x: number, private y: number, private width: number, private note: Note) {}\n\n  public tick = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement, delta: number) => {\n    const percentage = this.ttl / initialTtl;\n\n    ctx.save();\n    ctx.globalAlpha = percentage;\n    ctx.translate(0, BIG_NOTE_HEIGHT * (1 - percentage));\n\n    drawNote(ctx, this.x, this.y, this.width, this.note);\n\n    ctx.globalAlpha = 1;\n    ctx.restore();\n\n    this.ttl = this.ttl - delta;\n    this.finished = this.ttl <= 0;\n  };\n}\n","import ray from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/ray';\nimport Particle from '../interfaces';\n\nconst initialTtl = (50 / 60) * 1000;\nconst velocity = 0.05;\n\nconst WIDTH = 200;\nconst WIDTH_SPREAD = 4;\n\nconst pow = Math.pow;\n\nfunction easeOutQuart(x: number): number {\n  return 1 - pow(1 - x, 2);\n}\n\nexport default class RayParticle implements Particle {\n  public finished = false;\n\n  private ttl;\n  private velocityX;\n  private velocityY;\n  private maxWidth;\n\n  constructor(private x: number, private y: number, seed: number, widthModifier: number) {\n    this.ttl = initialTtl;\n    this.velocityX = velocity * Math.random() - velocity / 2;\n    this.velocityY = velocity * Math.random() - velocity / 2;\n    this.maxWidth = Math.min(0.1 + widthModifier, 1) * (Math.sin(seed / 70) * WIDTH_SPREAD + (WIDTH - WIDTH_SPREAD));\n  }\n  public tick = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement, delta: number) => {\n    const percentage = this.ttl / initialTtl;\n    let easing = easeOutQuart(1 - Math.min(1, (1 - percentage) * 6));\n\n    const mainRayWidth = (this.maxWidth * easing * 3) / 4;\n    const mainRayHeight = this.maxWidth * easing;\n\n    ray(canvas, ctx, this.x, this.y, mainRayWidth, mainRayHeight, 'white', easing * 0.35);\n\n    easing = easeOutQuart(percentage);\n\n    const width = (easing * this.maxWidth) / 4;\n    const height = (easing * this.maxWidth) / 4;\n\n    const x = this.x;\n    const y = this.y;\n\n    const elapsedTicks = initialTtl - this.ttl;\n\n    ctx.globalAlpha = easing * 0.2;\n    ray(\n      canvas,\n      ctx,\n      x + elapsedTicks * this.velocityX,\n      y + elapsedTicks * this.velocityY,\n      width,\n      height,\n      'white',\n      easing * 0.2,\n    );\n\n    this.ttl = this.ttl - delta;\n    this.finished = this.ttl <= 0;\n  };\n}\n","import Particle from '../interfaces';\n\nconst INTERVAL_PX = 20;\n\nexport default class VibratoParticle implements Particle {\n  public finished = false;\n  public ttl = (2 / 60) * 1000;\n\n  constructor(private x: number, private y: number, private w: number, private h: number, private seed: number) {}\n  public tick = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement, delta: number) => {\n    ctx.strokeStyle = 'rgba(255,255,255,.25)';\n    ctx.lineWidth = 2;\n\n    ctx.beginPath();\n\n    for (let i = 0; i < this.w; i++) {\n      const x = this.x + this.w - i;\n      const deltaY = (this.h / 2 + 2) * Math.sin(x / INTERVAL_PX + this.seed / 250);\n      ctx.lineTo(x, this.y + this.h / 2 + deltaY);\n    }\n\n    ctx.stroke();\n\n    ctx.beginPath();\n\n    for (let i = 0; i < this.w; i++) {\n      const x = this.x + this.w - i;\n      const deltaY = -1 * (this.h / 2 + 2) * Math.sin(x / INTERVAL_PX + this.seed / 250);\n      ctx.lineTo(x, this.y + this.h / 2 + deltaY);\n    }\n\n    ctx.stroke();\n\n    this.ttl = this.ttl - delta;\n    this.finished = this.ttl <= 0;\n  };\n}\n","import { captureException } from '@sentry/react';\nimport events from 'GameEvents/GameEvents';\nimport PlayersManager from 'Players/PlayersManager';\nimport getNoteColor from 'Scenes/Game/Singing/GameOverlay/Drawing/Elements/utils/getNoteColor';\nimport SungTriangle from 'Scenes/Game/Singing/GameOverlay/Drawing/Particles/SungTriangle';\nimport { Shaders } from 'Scenes/Game/Singing/GameOverlay/Drawing/Shaders/Shaders';\nimport { FPSCountSetting, GraphicSetting } from 'Scenes/Settings/SettingsState';\nimport isNotesSection from 'Songs/utils/isNotesSection';\nimport { noDistanceNoteTypes } from 'consts';\nimport { Note, NotesSection, PlayerNote } from 'interfaces';\nimport { randomFloat } from 'utils/randomValue';\nimport GameState from '../../GameState/GameState';\nimport getPlayerNoteDistance from '../../Helpers/getPlayerNoteDistance';\nimport debugPitches from './Elements/debugPitches';\nimport drawNote from './Elements/note';\nimport drawPlayerFrequencyTrace from './Elements/playerFrequencyTrace';\nimport drawPlayerNote from './Elements/playerNote';\nimport ParticleManager from './ParticleManager';\nimport ExplodingNoteParticle from './Particles/ExplodingNote';\nimport FadeoutNote from './Particles/FadeoutNote';\nimport RayParticle from './Particles/Ray';\nimport VibratoParticle from './Particles/Vibrato';\nimport calculateData, { BIG_NOTE_HEIGHT, DrawingData, NOTE_HEIGHT, pitchPadding } from './calculateData';\n\nconst MAX_LOOKUP_RANGE = 20;\nfunction getPlayerNoteAtBeat(playerNotes: PlayerNote[], beat: number) {\n  return playerNotes.find((note) => note.start <= beat && note.start + note.length >= beat);\n}\n\nexport default class CanvasDrawing {\n  private loop = false;\n  private pauseTime = 0;\n  private pausedOn = 0;\n\n  public constructor(\n    private canvas: HTMLCanvasElement,\n    private verticalMargin: number = 0,\n    private scaleFactor: number = 1,\n  ) {}\n\n  private shaders: Shaders | null = null;\n  public start = () => {\n    events.sectionChange.subscribe(this.onSectionEnd);\n    this.loop = true;\n\n    this.drawFrame();\n\n    if (false && GraphicSetting.get() === 'high') {\n      try {\n        this.shaders = new Shaders(this.canvas);\n      } catch (e) {\n        captureException(e);\n      }\n    }\n  };\n\n  public pause = () => {\n    this.end();\n    this.pausedOn = Date.now();\n  };\n\n  public resume = () => {\n    this.pauseTime += Date.now() - this.pausedOn;\n    this.start();\n  };\n\n  public end = () => {\n    this.loop = false;\n\n    this.shaders?.cleanup();\n    events.sectionChange.unsubscribe(this.onSectionEnd);\n  };\n\n  public isPlaying = () => this.loop;\n\n  public drawFrame = () => {\n    const startTime = Date.now();\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) return;\n\n    if (GameState.isPlaying()) {\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n      const players = PlayersManager.getPlayers();\n      players.forEach((player, index) => {\n        this.drawPlayer(player.number, ctx);\n      });\n\n      ParticleManager.tick(ctx, this.canvas, this.pauseTime);\n    }\n\n    if (FPSCountSetting.get() === 30) {\n      const endTime = Date.now();\n      const baseTimeout = 1000 / 30;\n      const finalTimeout = endTime - startTime > baseTimeout ? baseTimeout : baseTimeout - (endTime - startTime);\n      if (this.loop) setTimeout(this.drawFrame, finalTimeout, FPSCountSetting.get());\n    }\n    if (FPSCountSetting.get() !== 30) {\n      if (this.loop) window.requestAnimationFrame(this.drawFrame);\n    }\n  };\n\n  private drawPlayer = (playerNumber: number, ctx: CanvasRenderingContext2D) => {\n    const drawingData = this.getDrawingData(playerNumber);\n    const { currentSection } = calculateData(drawingData);\n\n    if (GraphicSetting.get() === 'high') {\n      this.setDistortionForce(drawingData);\n    }\n\n    if (!isNotesSection(currentSection)) return;\n\n    const displacements = this.calculateDisplacements(currentSection, drawingData);\n\n    this.drawNotesToSing(ctx, drawingData, displacements);\n    this.drawSungNotes(ctx, drawingData, displacements);\n\n    if (GraphicSetting.get() === 'high') {\n      this.drawFlare(ctx, drawingData, displacements);\n    }\n\n    false && debugPitches(ctx!, drawingData);\n  };\n\n  private setDistortionForce = (drawingData: DrawingData) => {\n    const currentSection = drawingData.currentSection;\n\n    if (!isNotesSection(currentSection)) {\n      this.shaders?.updatePlayerForce(\n        drawingData.playerNumber,\n        (this.shaders?.getPlayerForce(drawingData.playerNumber) ?? 0) * 0.99,\n      );\n    } else {\n      const max = Math.max(0, drawingData.currentBeat - MAX_LOOKUP_RANGE);\n\n      const sungNotes = drawingData.currentPlayerNotes\n        .filter((note) => note.note.start + note.note.length >= max)\n        .filter((note) => getPlayerNoteDistance(note) === 0)\n        .reduce((curr, note) => curr + note.length - Math.max(0, max - note.start), 0);\n\n      const lastPlayerNote = drawingData.currentPlayerNotes.at(-1);\n      const lastPlayerNoteEnd = (lastPlayerNote?.start ?? 0) + (lastPlayerNote?.length ?? 0);\n      const beatsSinceLastHit = drawingData.currentBeat - lastPlayerNoteEnd;\n\n      const forcePercent = Math.max(\n        Math.min(Math.pow((sungNotes - beatsSinceLastHit / 1.5) / MAX_LOOKUP_RANGE, 3), 0.98),\n        0,\n      );\n      this.shaders?.updatePlayerForce(drawingData.playerNumber, forcePercent);\n    }\n  };\n\n  private drawNotesToSing = (\n    ctx: CanvasRenderingContext2D,\n    drawingData: DrawingData,\n    displacements: Record<number, [number, number]>,\n  ) => {\n    if (!isNotesSection(drawingData.currentSection)) return;\n\n    drawingData.currentSection.notes.forEach((note) => {\n      const { x, y, w, h } = this.getNoteCoords(drawingData, note, note.pitch, true, displacements[note.start]);\n\n      drawNote(ctx, x, y, w, note);\n    });\n  };\n\n  private drawSungNotes = (\n    ctx: CanvasRenderingContext2D,\n    drawingData: DrawingData,\n    displacements: Record<number, [number, number]>,\n  ) => {\n    if (!isNotesSection(drawingData.currentSection)) return;\n\n    drawingData.currentPlayerNotes.forEach((playerNote) => {\n      const distance = getPlayerNoteDistance(playerNote);\n\n      const { x, y, w, h } = this.getNoteCoords(\n        drawingData,\n        playerNote,\n        playerNote.note.pitch + distance,\n        distance === 0,\n        displacements[playerNote.note.start],\n      );\n      if (distance > 0 || w > h / 2.5) {\n        drawPlayerNote(ctx, x, y, w, drawingData.playerNumber, distance === 0, playerNote);\n\n        if (playerNote.vibrato) {\n          ParticleManager.add(new VibratoParticle(x, y, w, h, drawingData.currentTime));\n        }\n\n        if (\n          distance === 0 &&\n          playerNote.frequencyRecords.length > 3 &&\n          !noDistanceNoteTypes.includes(playerNote.note.type)\n        ) {\n          drawPlayerFrequencyTrace(ctx, x, y, w, h, playerNote);\n        }\n      }\n    });\n  };\n\n  private drawFlare = (\n    ctx: CanvasRenderingContext2D,\n    drawingData: DrawingData,\n    displacements: Record<number, [number, number]>,\n  ) => {\n    if (!isNotesSection(drawingData.currentSection)) return;\n\n    const lastNote = getPlayerNoteAtBeat(\n      drawingData.currentPlayerNotes,\n      drawingData.currentBeat - 185 / drawingData.songBeatLength,\n    );\n\n    if (lastNote && lastNote.distance === 0) {\n      const displacement = displacements[lastNote.note.start] || [0, 0];\n\n      const { x, y, w, h } = this.getNoteCoords(drawingData, lastNote, lastNote.note.pitch, true, displacement);\n      const preciseDistance = noDistanceNoteTypes.includes(lastNote.note.type)\n        ? 0\n        : lastNote.frequencyRecords.at(-1)!.preciseDistance;\n\n      const finalX = x + w;\n      const finalY = this.getPreciseY(y, h, preciseDistance);\n\n      ParticleManager.add(new RayParticle(finalX, finalY, drawingData.currentTime, 1));\n\n      ParticleManager.add(\n        new SungTriangle(\n          randomFloat(Math.max(x, finalX - 50), finalX),\n          finalY,\n          getNoteColor(ctx, drawingData.playerNumber, true, lastNote).fill,\n        ),\n      );\n\n      this.shaders?.updatePlayerCenter(drawingData.playerNumber, finalX, finalY);\n    }\n  };\n\n  private onSectionEnd = (playerNumber: number) => {\n    if (GameState.isPlaying()) {\n      const drawingData = this.getDrawingData(playerNumber, -1);\n      if (!isNotesSection(drawingData.currentSection)) return;\n\n      this.fadeoutNotes(drawingData.currentSection, drawingData);\n      this.explodeNotes(drawingData.currentSection, drawingData);\n    }\n  };\n\n  private fadeoutNotes = (section: NotesSection, drawingData: DrawingData) => {\n    if (GraphicSetting.get() === 'high') {\n      section.notes.forEach((note) => {\n        const { x, y, w, h } = this.getNoteCoords(drawingData, note, note.pitch, true);\n\n        ParticleManager.add(new FadeoutNote(x, y, w, note));\n      });\n    }\n  };\n\n  private explodeNotes = (section: NotesSection, drawingData: DrawingData) => {\n    if (GraphicSetting.get() === 'high') {\n      const notesToExplode = drawingData.playerNotes.filter(\n        (note) =>\n          (note.distance === 0 || noDistanceNoteTypes.includes(note.note.type)) && section.notes.includes(note.note),\n      );\n\n      notesToExplode.forEach((note) => {\n        const { x, y, w, h } = this.getNoteCoords(drawingData, note, note.note.pitch, true);\n        ParticleManager.add(\n          new ExplodingNoteParticle(x, y + h / 2, w, drawingData.playerNumber, note.note, ParticleManager),\n        );\n      });\n    }\n  };\n\n  private calculateDisplacements = (currentSection: NotesSection, drawingData: DrawingData) => {\n    const displacements: Record<number, [number, number]> = {};\n\n    if (GraphicSetting.get() === 'high') {\n      currentSection.notes.forEach((note) => {\n        const sungNotesStreak = drawingData.playerNotes\n          .filter((sungNote) => sungNote.note.start === note.start)\n          .filter(\n            (sungNote) =>\n              sungNote.note.start + sungNote.note.length + 30 >= drawingData.currentBeat && sungNote.distance === 0,\n          )\n          .map((sungNote) =>\n            sungNote.start + 30 < drawingData.currentBeat\n              ? sungNote.length - (drawingData.currentBeat - 30 - sungNote.start)\n              : sungNote.length,\n          )\n          .reduce((currLength, sungNoteLength) => Math.min(currLength + sungNoteLength, 30), 0);\n\n        const displacementRange = Math.max(0, (sungNotesStreak - 5) / (note.type === 'star' ? 3 : 5));\n        const displacementX = (Math.random() - 0.5) * displacementRange;\n        const displacementY = (Math.random() - 0.5) * displacementRange;\n\n        displacements[note.start] = [displacementX, displacementY];\n      });\n    } else {\n      currentSection.notes.forEach((note) => {\n        displacements[note.start] = [0, 0];\n      });\n    }\n\n    return displacements;\n  };\n\n  private getDrawingData = (playerNumber: number, sectionShift = 0): DrawingData => {\n    const players = PlayersManager.getPlayers();\n    const playerIndex = players.findIndex((player) => player.number === playerNumber);\n    const playerCount = players.length;\n\n    const playerState = GameState.getPlayer(playerNumber)!;\n    const currentSectionIndex = playerState.getCurrentSectionIndex() + sectionShift ?? 0;\n    const song = GameState.getSong()!;\n    const track = playerState.getTrackIndex();\n    const currentSection = song.tracks[track].sections[currentSectionIndex];\n    const playerNotes = playerState.getPlayerNotes();\n\n    return {\n      playerNumber,\n      playerIndex,\n      playerCount,\n      song,\n      songBeatLength: GameState.getSongBeatLength(),\n      minPitch: playerState.getMinPitch(),\n      maxPitch: playerState.getMaxPitch(),\n      canvas: this.canvas,\n      currentTime: GameState.getCurrentTime(),\n      frequencies: playerState.getPlayerFrequencies(),\n      playerNotes,\n      currentPlayerNotes: playerNotes.filter((note) => note.note.start >= (currentSection?.start ?? Infinity)),\n      track: playerState.getTrackIndex(),\n      currentBeat: GameState.getCurrentBeat(),\n      currentSectionIndex,\n      currentSection,\n      paddingVertical: this.verticalMargin,\n    };\n  };\n\n  private getNoteCoords = (\n    drawingData: DrawingData,\n    { start, length }: Pick<Note, 'start' | 'length'>,\n    pitch: number,\n    big: boolean,\n    displacement: [number, number] = [0, 0],\n  ) => {\n    const { sectionEndBeat, currentSection, playerCanvas, pitchStepHeight } = calculateData(drawingData);\n\n    const sectionStart = isNotesSection(currentSection) ? currentSection.notes[0].start : 1;\n\n    const beatLength = playerCanvas.width / (sectionEndBeat - sectionStart);\n\n    const [dx, dy] = big ? displacement : [0, 0];\n    const pitchY = pitchStepHeight * (drawingData.maxPitch - pitch + pitchPadding);\n\n    return {\n      x: Math.floor(playerCanvas.baseX + beatLength * (start - sectionStart) + dx),\n      y: Math.floor(playerCanvas.baseY + 10 + pitchY + dy - (big ? 3 : 0)),\n      w: Math.floor(beatLength * length),\n      h: big ? BIG_NOTE_HEIGHT : NOTE_HEIGHT,\n    };\n  };\n\n  private getPreciseY = (y: number, h: number, preciseDistance: number) => y + h / 2 - (preciseDistance * h) / 3;\n}\n","export default \"precision mediump float;\\n\\nconst float MAX_FORCE = 300.0;\\nconst int SAMPLE_COUNT = 8; // 2^x\\nconst float INTENSITY = 0.051;\\n// get our varyings\\nvarying vec3 vVertexPosition;\\nvarying vec2 vTextureCoord;\\n// the uniform we declared inside our javascript\\nuniform float uTime;\\nuniform sampler2D planeTexture;\\nuniform vec2 uResolution;\\n\\nuniform vec2 uP0center;\\nuniform float uP0force;\\n\\nuniform vec2 uP1center;\\nuniform float uP1force;\\n\\nfloat rnd(float n) {\\n    return fract(sin(n) * 43758.5453);\\n}\\nfloat random (vec2 st) {\\n    return rnd(dot(st.xy, vec2(12.9898, 78.233)));\\n}\\n\\nvec4 directionalBlur(in vec2 uv, in vec2 direction, in float intensity)\\n{\\n    vec4 color = vec4(0.0);\\n\\n    for (int i=1; i<=SAMPLE_COUNT; i++)\\n    {\\n        color += texture2D(planeTexture,uv+float(i)*intensity/float(SAMPLE_COUNT)*direction);\\n    }\\n\\n    return color/float(SAMPLE_COUNT);\\n}\\n\\nfloat distort(vec2 center, float force, float comparedIntensity) {\\n    float actualForce = force * MAX_FORCE;\\n    vec2 centerAbs = center * uResolution;\\n\\n    vec2 direction = gl_FragCoord.xy - centerAbs.xy;\\n    float dist = length(direction) / length(uResolution);\\n\\n\\n    float intensity = max(0.0, 0.50 - dist) * INTENSITY * pow(force, 1.5);\\n    if (intensity > comparedIntensity) {\\n        vec4 newColor = directionalBlur(gl_FragCoord.xy / uResolution, normalize(direction), intensity);\\n        gl_FragColor = newColor;\\n    }\\n    return intensity;\\n}\\n\\nvoid main() {\\n    gl_FragColor = texture2D(planeTexture, vTextureCoord);\\n    float p1intensity = distort(uP0center, uP0force, 0.0);\\n    float p2intensity = distort(uP1center, uP1force, p1intensity);\\n}\"","export default \"\\nprecision mediump float;\\n\\n// default mandatory variables\\nattribute vec3 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat4 uMVMatrix;\\nuniform mat4 uPMatrix;\\n\\nuniform mat4 planeTextureMatrix;\\n\\n// custom varyings\\nvarying vec3 vVertexPosition;\\nvarying vec2 vTextureCoord;\\n\\nvoid main() {\\n    gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\\n\\n    // varyings\\n    vVertexPosition = aVertexPosition;\\n    vTextureCoord = (planeTextureMatrix * vec4(aTextureCoord, 0.0, 1.0)).xy;\\n}\"","import styled from '@emotion/styled';\nimport { VideoPlayerRef, VideoState } from 'Elements/VideoPlayer';\nimport PlayersManager from 'Players/PlayersManager';\nimport SkipIntro from 'Scenes/Game/Singing/GameOverlay/Components/SkipIntro';\nimport SkipOutro from 'Scenes/Game/Singing/GameOverlay/Components/SkipOutro';\nimport { GraphicSetting, MobilePhoneModeSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport { GAME_MODE, PlayerSetup, Song } from 'interfaces';\nimport { useEffect, useRef } from 'react';\nimport GameState from '../GameState/GameState';\nimport DurationBar from './Components/DurationBar';\nimport Lyrics from './Components/Lyrics';\nimport ScoreText from './Components/ScoreText';\nimport CanvasDrawing from './Drawing';\n\nimport fragShader from 'Scenes/Game/Singing/GameOverlay/Drawing/Shaders/shader.frag?raw';\nimport vertShader from 'Scenes/Game/Singing/GameOverlay/Drawing/Shaders/shader.vert?raw';\n\ninterface Props {\n  song: Song;\n  currentStatus: VideoState;\n  width: number;\n  height: number;\n  onSongEnd: () => void;\n  playerSetups: PlayerSetup[];\n  duration: number;\n  effectsEnabled: boolean;\n  playerChanges: number[][];\n  videoPlayerRef: VideoPlayerRef | null;\n  isPauseMenuVisible: boolean;\n}\n\nconst MAX_RENDER_RESOLUTION_W = 1920;\n\nfunction GameOverlay({\n  currentStatus,\n  width,\n  height,\n  playerSetups,\n  onSongEnd,\n  playerChanges,\n  effectsEnabled,\n  videoPlayerRef,\n  isPauseMenuVisible,\n}: Props) {\n  const [graphicLevel] = useSettingValue(GraphicSetting);\n  const [mobilePhoneMode] = useSettingValue(MobilePhoneModeSetting);\n  const canvas = useRef<HTMLCanvasElement | null>(null);\n  const drawer = useRef<CanvasDrawing | null>(null);\n  const lyrics = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    GameState.startInputMonitoring();\n\n    return () => {\n      GameState.stopInputMonitoring();\n    };\n  }, []);\n\n  const overlayWidth = MAX_RENDER_RESOLUTION_W;\n  const overlayHeight = overlayWidth * (height / width);\n\n  const overlayScaleFactor = overlayHeight / height;\n  // const resolutionScaleFactor = overlayWidth / MAX_RENDER_RESOLUTION_W;\n\n  useEffect(() => {\n    if (!canvas.current || !lyrics.current) return;\n\n    drawer.current = new CanvasDrawing(\n      canvas.current,\n      lyrics.current.offsetHeight * overlayScaleFactor,\n      // resolutionScaleFactor,\n    );\n    drawer.current.start();\n\n    return () => {\n      drawer.current?.end();\n    };\n  }, [canvas.current, lyrics.current?.offsetHeight, overlayScaleFactor]);\n\n  useEffect(() => {\n    if (isPauseMenuVisible && drawer.current?.isPlaying()) {\n      drawer.current?.pause();\n    } else if (!isPauseMenuVisible && !drawer.current?.isPlaying()) {\n      drawer.current?.resume();\n    }\n  }, [isPauseMenuVisible]);\n\n  useEffect(() => {\n    if (currentStatus === VideoState.ENDED && onSongEnd) {\n      onSongEnd();\n    }\n  }, [currentStatus, onSongEnd]);\n\n  const players = PlayersManager.getPlayers();\n  const showMultipleLines = !mobilePhoneMode && players.length === 2;\n\n  return (\n    <Screen>\n      {graphicLevel === 'high' && (\n        <>\n          <script type={'x-shader/x-fragment'} id={'plane-fs'}>\n            {fragShader}\n          </script>\n          <script id=\"plane-vs\" type=\"x-shader/x-vertex\">\n            {vertShader}\n          </script>\n          <Curtains id=\"canvas\" style={{ zIndex: 10000 }} />\n        </>\n      )}\n      <GameCanvas id=\"plane\">\n        <canvas ref={canvas} width={overlayWidth} height={overlayHeight} data-sampler=\"planeTexture\" />\n      </GameCanvas>\n      {effectsEnabled && (\n        <>\n          <SkipIntro playerRef={videoPlayerRef} isEnabled={!isPauseMenuVisible} />\n          <SkipOutro onSongEnd={onSongEnd} isEnabled={!isPauseMenuVisible} />\n        </>\n      )}\n      <DurationBar players={playerSetups} />\n      {showMultipleLines && (\n        <Lyrics player={players[0]} playerChanges={playerChanges} effectsEnabled={effectsEnabled} />\n      )}\n      <Scores>\n        {effectsEnabled && (\n          <>\n            {GameState.getSingSetup()?.mode === GAME_MODE.CO_OP ? (\n              <span data-test=\"players-score\" data-score={GameState.getPlayerScore(0)}>\n                <ScoreText score={GameState.getPlayerScore(0)} />\n              </span>\n            ) : (\n              PlayersManager.getPlayers().map((player) => (\n                <span\n                  key={player.number}\n                  data-test={`player-${player.number}-score`}\n                  data-score={GameState.getPlayerScore(player.number)}>\n                  <ScoreText score={GameState.getPlayerScore(player.number)} />\n                </span>\n              ))\n            )}\n          </>\n        )}\n      </Scores>\n      <div ref={lyrics}>\n        <Lyrics\n          player={players[showMultipleLines ? 1 : 0]}\n          playerChanges={playerChanges}\n          bottom\n          effectsEnabled={effectsEnabled}\n        />\n      </div>\n    </Screen>\n  );\n}\n\nexport default GameOverlay;\n\nconst Screen = styled.div`\n  height: 100%;\n  color: white;\n  -webkit-text-stroke: 0.2rem black;\n  font-weight: bold;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst GameCanvas = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  canvas {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Curtains = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Scores = styled.div`\n  flex: 1;\n  height: 100%;\n  box-sizing: border-box;\n  font-size: 5.5rem;\n  display: flex;\n  justify-content: center;\n  gap: 4rem;\n  padding-right: 4rem;\n  flex-direction: column;\n  text-align: right;\n  z-index: 1;\n`;\n","import { PlayerSetup, seconds, SingSetup, Song } from 'interfaces';\nimport {\n  ComponentProps,\n  ForwardedRef,\n  forwardRef,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport styled from '@emotion/styled';\nimport VideoPlayer, { VideoPlayerRef, VideoState } from 'Elements/VideoPlayer';\nimport useKeyboard from 'hooks/useKeyboard';\nimport useKeyboardHelp from 'hooks/useKeyboardHelp';\nimport usePrevious from 'hooks/usePrevious';\nimport { FPSCountSetting, InputLagSetting, useSettingValue } from 'Scenes/Settings/SettingsState';\nimport PauseMenu from './GameOverlay/Components/PauseMenu';\nimport GameOverlay from './GameOverlay/GameOverlay';\nimport GameState from './GameState/GameState';\n\ninterface Props extends ComponentProps<typeof Container> {\n  singSetup: SingSetup;\n  song: Song;\n  width: number;\n  height: number;\n  autoplay?: boolean;\n  showControls?: boolean;\n  onCurrentTimeUpdate?: (newTime: number) => void;\n  onSongEnd: () => void;\n  onStatusChange?: (status: VideoState) => void;\n  players: PlayerSetup[];\n  playerChanges?: number[][];\n\n  effectsEnabled?: boolean;\n  restartSong?: () => void;\n}\n\nexport interface PlayerRef {\n  play: () => void;\n  pause: () => void;\n  seekTo: (time: number) => void;\n  setPlaybackSpeed: (speed: number) => void;\n}\n\nfunction usePlayerSetDuration(playerRef: MutableRefObject<VideoPlayerRef | null>, currentStatus: VideoState) {\n  const [duration, setDuration] = useState(0);\n  useEffect(() => {\n    if (playerRef.current && currentStatus === VideoState.PLAYING && duration === 0) {\n      playerRef.current.getDuration().then((dur: number) => {\n        setDuration(dur);\n        GameState.setDuration(dur);\n      });\n    }\n  }, [duration, playerRef, currentStatus]);\n\n  return duration;\n}\n\nfunction Player(\n  {\n    song,\n    width,\n    height,\n    autoplay = true,\n    showControls = false,\n    onCurrentTimeUpdate,\n    onSongEnd,\n    onStatusChange,\n    players,\n    playerChanges = [[], []],\n    effectsEnabled = true,\n    singSetup,\n    restartSong,\n    ...restProps\n  }: Props,\n  ref: ForwardedRef<PlayerRef>,\n) {\n  const player = useRef<VideoPlayerRef | null>(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentStatus, setCurrentStatus] = useState(VideoState.UNSTARTED);\n  const [inputLag] = useSettingValue(InputLagSetting);\n  const [pauseMenu, setPauseMenu] = useState(false);\n\n  useEffect(() => {\n    GameState.setSong(song);\n    GameState.setSingSetup(singSetup);\n\n    return () => {\n      GameState.resetSingSetup();\n    };\n  }, [song, singSetup]);\n\n  useEffect(() => {\n    if (!player.current) {\n      return;\n    }\n    if (currentStatus === VideoState.PLAYING) {\n      const interval = setInterval(async () => {\n        if (!player.current) return;\n\n        const time = Math.max(0, (await player.current.getCurrentTime()) * 1000 - inputLag);\n        setCurrentTime(time);\n        onCurrentTimeUpdate?.(time);\n        GameState.setCurrentTime(time);\n        GameState.update();\n      }, 1000 / FPSCountSetting.get());\n\n      return () => clearInterval(interval);\n    }\n  }, [player, onCurrentTimeUpdate, currentStatus, inputLag]);\n\n  const duration = usePlayerSetDuration(player, currentStatus);\n\n  useImperativeHandle(ref, () => ({\n    seekTo: (time: seconds) => player.current!.seekTo(time),\n    setPlaybackSpeed: (speed: number) => player.current!.setPlaybackSpeed(speed),\n    play: () => player.current!.playVideo(),\n    pause: () => player.current!.pauseVideo(),\n  }));\n\n  const onStateChangeCallback = useCallback(\n    (state: VideoState) => {\n      setCurrentStatus(state);\n      onStatusChange?.(state);\n    },\n    [setCurrentStatus, onStatusChange],\n  );\n\n  const isPauseMenuAvailable = effectsEnabled && onSongEnd !== undefined;\n\n  const openPauseMenu = () => {\n    setPauseMenu(true);\n    player.current?.pauseVideo();\n  };\n\n  const closePauseMenu = () => {\n    setPauseMenu(false);\n    player.current?.playVideo();\n  };\n\n  const togglePauseMenu = () => {\n    if (pauseMenu) {\n      closePauseMenu();\n    } else {\n      openPauseMenu();\n    }\n  };\n  const previousStatus = usePrevious(currentStatus);\n  useEffect(() => {\n    if (!isPauseMenuAvailable) return;\n\n    const wasJustPaused =\n      previousStatus !== VideoState.PAUSED &&\n      previousStatus !== VideoState.BUFFERING &&\n      currentStatus === VideoState.PAUSED;\n\n    if (currentStatus === VideoState.PLAYING && pauseMenu) {\n      player.current?.pauseVideo();\n    } else if (wasJustPaused && !pauseMenu) {\n      // Someone clicked on the video\n      setPauseMenu(true);\n    }\n  }, [pauseMenu, currentStatus, previousStatus, isPauseMenuAvailable]);\n\n  useKeyboard(\n    {\n      back: togglePauseMenu,\n    },\n    isPauseMenuAvailable,\n    [pauseMenu],\n  );\n\n  const help = useMemo(\n    () => ({\n      back: 'Pause Menu',\n    }),\n    [],\n  );\n  useKeyboardHelp(help, effectsEnabled);\n  return (\n    <Container {...restProps}>\n      {pauseMenu && <PauseMenu onExit={onSongEnd} onResume={closePauseMenu} onRestart={restartSong!} />}\n      {currentStatus !== VideoState.UNSTARTED && (\n        <Overlay\n          style={{\n            width: `${width}px`,\n            height: `${height}px`,\n          }}>\n          <GameOverlay\n            isPauseMenuVisible={pauseMenu}\n            effectsEnabled={effectsEnabled}\n            playerChanges={playerChanges}\n            duration={duration}\n            currentStatus={currentStatus}\n            song={song}\n            width={width}\n            height={height}\n            onSongEnd={onSongEnd}\n            playerSetups={players}\n            videoPlayerRef={player.current}\n          />\n        </Overlay>\n      )}\n      <PlayerContainer>\n        <VideoPlayer\n          ref={player}\n          video={song.video}\n          width={width}\n          height={height}\n          controls={showControls}\n          autoplay={autoplay}\n          disablekb={process.env.NODE_ENV !== 'development'}\n          volume={song.volume}\n          startAt={song.videoGap ?? 0}\n          onStateChange={onStateChangeCallback}\n        />\n      </PlayerContainer>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  z-index: 1;\n  background-color: rgba(0, 0, 0, 0.2);\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n`;\n\nconst PlayerContainer = styled.div`\n  overflow: hidden;\n  height: 100%;\n`;\n\nexport default forwardRef(Player);\n"],"names":["castSlice","array","start","end","length","baseSlice","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsVarRange","rsZWJ","reHasUnicode","hasUnicode","string","asciiToArray","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsSymbol","reUnicode","unicodeToArray","stringToArray","createCaseFirst","methodName","toString","strSymbols","chr","trailing","upperFirst","upperFirst$1","capitalize","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","cloneDeep","value","baseClone","uniq","baseUniq","useInterval","callback","delay","savedCallback","useRef","useEffect","interval_1","useInterval$1","usePrevious","ref","current","SelectInputModal","onClose","closeButtonText","Modal","jsx","MenuContainer","SelectInputView","PauseMenu","onResume","onExit","onRestart","menuRef","inputLagRef","focus","isInputModalOpen","setIsInputModalOpen","useState","register","useKeyboardNav","enabled","jsxs","MenuButton","InputLag","SKIP_INTRO_MS","isE2E","getSkipIntroTime","song","Math","floor","getSongFirstNoteMs","SKIP_INTRO_THRESHOLD_MS","songHasLongIntro","videoGap","SkipIntro","playerRef","isEnabled","mobilePhoneMode","useSettingValue","MobilePhoneModeSetting","GameState","getSong","hasLongIntro","useMemo","songFirstNoteMs","shouldBeVisible","getCurrentTime","canSkip","useKeyboard","accept","skipIntro","seekTo","artist","title","posthog","capture","name","help","back","useKeyboardHelp","Container","Kbd","_styled","target","typography","props","visible","process","disabled","SHOW_OUTRO_THRESHOLD_MS","SkipOutro","onSongEnd","duration","getDuration","singingEndBeat","max","getPlayers","map","getLastNoteEnd","player","getLastNotesSection","singingEndTime","beatToMs","currentBeat","setCurrentBeat","skipping","setSkipping","getCurrentBeat","useDebounce","skipOutro","setTimeout","SkipOutro$1","React","memo","DurationBar","players","currentTime","beatLength","getSongBeatLength","firstNotes","tracks","filter","v","index","find","track","sections","getFirstNoteStartFromSections","gap","lastNotes","getLastNoteEndFromSections","durationMs","Bar","Marker","note","BarFill","styles","BaseMarker","colors","text","active","left","min","position","BaseBarFill","width","round","fill","Ping","playerNumber","restProps","latency","useDevicePing","PlayersManager","getPlayer","input","deviceId","PingContainer","_interopRequireDefault","require$$0","Circle","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","_Error","Warning","PlayerStatus","status","tooltipPosition","StatusContainer","OkIcon","UnavailableIcon","UnstableIcon","StatusDescription","CircleIcon","ErrorIcon","WarningIcon","usePlayerMicStatus","intervalMs","onMeasure","data","setData","interval","setInterval","InputManager","getInputStatus","clearInterval","LyricsVolumeIndicator","bottom","playerVolume","getPlayerVolume","number","VolumeIndicator","StyledPlayerStatus","StyledPing","Lyrics","playerChanges","effectsEnabled","playerState","playerColor","thisPlayerChanges","getTrackIndex","section","getCurrentSection","nextSection","getNextSection","subsequentSection","previousChange","beat","nextChange","Infinity","timeToNextChange","passTheMicProgress","shouldBlink","hasNotes","isNotesSection","beatsBetweenSectionAndNote","LyricsContainer","PassTheMicProgress","LyricsLine","HeadstartContainer","Headstart","notes","LyricContainer","type","LyricActiveContainer","LyricActive","lyrics","trim","endsWith","PassTheMicSymbol","Fragment","BaseHeadstart","percent","color","rgbColor","rgb","tinycolor","toRgb","r","g","b","transformOrigin","transform","right","background","BaseLyricActive","children","clipPath","BasePassTheMicProgress","progress","SwapHorizIcon","shouldForwardProp","prop","shouldShake","nextLine","inactive","default","formatter","Intl","NumberFormat","undefined","maximumFractionDigits","ScoreText","score","format","getColor","ctx","isStar","isHit","isPerfect","starPerfect","perfect","star","hit","miss","getNoteColor","playerNote","cachedColors","getColors","c","setAlpha","toRgbString","ray","canvas","x","y","height","alpha","globalAlpha","gradient","createRadialGradient","cFirst","cLast","c0","addColorStop","randomInt","beginPath","arc","PI","closePath","fillStyle","debris","angle","spreadValue","initial","spread","random","randomSign","weight","sign","baseTtlMs","ttlSpreadMs","velocityModifier","SungTriangle","constructor","finished","tick","delta","percentage","ttl","startingTtl","ticksLeft","heightModifier","velocityX","velocityY","initialAngle","precisionMedium","precisionMedium$1","defaultAttributes","defaultAttributes$1","defaultVaryings","defaultVaryings$1","planeVS","planeFS","shaderPassVS","shaderPassFS","pitchPadding","NOTE_HEIGHT","BIG_NOTE_HEIGHT","getPlayerCanvas","drawingData","pixelsOverRatio","paddingHorizontal","paddedHeight","paddingVertical","playerCount","baseX","baseY","playerIndex","calculateData","currentSectionIndex","songBeatLength","minPitch","maxPitch","currentSection","playerCanvas","lastNote","at","sectionEndBeat","timeSectionGap","maxTime","pitchStepHeight","simpleRoundRect","radius","stroke","actualWidth","actualRadius","moveTo","lineTo","quadraticCurveTo","roundRect","glass","save","clip","fillRect","restore","applyColor","style","strokeStyle","lineWidth","drawRawNote","noteType","lines","freestyle","normal","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","drawRawPlayerNote","test","SHADOW_PAD","smallNoteFragments","w","h","middle","bigNoteFragments","spriteMap","blueMiss","draw","padding","fragments","blueHit","bluePerfect","blueStarMiss","blueStarHit","blueStarPerfect","redMiss","redHit","redPerfect","redStarMiss","redStarHit","redStarPerfect","noteNormal","noteStar","noteFreestyle","noteRap","noteRapstar","createCanvas","document","createElement","maxWidth","Object","values","sprite","reduce","a","e","cachedCanvas","getContext","currentHeight","positions","entries","pads","acc","generateSpriteMap","clearRect","forEach","key","entry","events","songStarted","subscribe","getSprite","fragment","drawSprite","destCtx","destX","destY","destW","destH","paddingWScale","paddingHScale","spriteData","finalWPadding","finalHPadding","imageSmoothingEnabled","drawImage","drawSpriteWithStartAndEnd","spriteName","startData","widthScale","endingsWidth","endingsSize","middleSize","getSpriteName","drawNote","drawPlayerFrequencyTrace","lineJoin","frequencyRecords","preciseDistance","i","starNoteTypes","drawPlayerNote","includes","ParticleManager","particles","lastTick","Date","now","getTimeDelta","timeShift","currentTick","particle","add","push","ParticleManager$1","baseTtl","ttlSpread","initialWidth","TriangleParticle","elapsedTicks","ExplodingNoteParticle","particleManager","lightColor","lighten","darkColor","darken","density","rand","finalColor","finalY","initialTtl","FadeoutNote","translate","velocity","WIDTH","WIDTH_SPREAD","pow","easeOutQuart","RayParticle","seed","widthModifier","easing","mainRayWidth","mainRayHeight","sin","INTERVAL_PX","VibratoParticle","deltaY","MAX_LOOKUP_RANGE","getPlayerNoteAtBeat","playerNotes","CanvasDrawing","verticalMargin","scaleFactor","loop","pauseTime","pausedOn","shaders","sectionChange","onSectionEnd","drawFrame","pause","resume","_a","cleanup","unsubscribe","isPlaying","startTime","FPSCountSetting","drawPlayer","get","endTime","baseTimeout","finalTimeout","requestAnimationFrame","getDrawingData","GraphicSetting","setDistortionForce","displacements","calculateDisplacements","drawNotesToSing","drawSungNotes","drawFlare","updatePlayerForce","getPlayerForce","sungNotes","currentPlayerNotes","getPlayerNoteDistance","curr","lastPlayerNote","lastPlayerNoteEnd","beatsSinceLastHit","forcePercent","_c","getNoteCoords","pitch","distance","vibrato","noDistanceNoteTypes","displacement","finalX","getPreciseY","randomFloat","updatePlayerCenter","fadeoutNotes","explodeNotes","sungNotesStreak","sungNote","currLength","sungNoteLength","displacementRange","displacementX","displacementY","sectionShift","findIndex","getCurrentSectionIndex","getPlayerNotes","getMinPitch","getMaxPitch","frequencies","getPlayerFrequencies","big","sectionStart","dx","dy","pitchY","fragShader","vertShader","MAX_RENDER_RESOLUTION_W","GameOverlay","currentStatus","playerSetups","videoPlayerRef","isPauseMenuVisible","graphicLevel","drawer","startInputMonitoring","stopInputMonitoring","overlayWidth","overlayHeight","overlayScaleFactor","offsetHeight","VideoState","ENDED","showMultipleLines","Screen","Curtains","zIndex","GameCanvas","Scores","getSingSetup","mode","GAME_MODE","CO_OP","getPlayerScore","usePlayerSetDuration","setDuration","PLAYING","then","dur","Player","autoplay","showControls","onCurrentTimeUpdate","onStatusChange","singSetup","restartSong","setCurrentTime","setCurrentStatus","UNSTARTED","inputLag","InputLagSetting","pauseMenu","setPauseMenu","setSong","setSingSetup","resetSingSetup","time","update","useImperativeHandle","setPlaybackSpeed","speed","play","playVideo","pauseVideo","onStateChangeCallback","useCallback","state","isPauseMenuAvailable","openPauseMenu","closePauseMenu","togglePauseMenu","previousStatus","wasJustPaused","PAUSED","BUFFERING","Overlay","PlayerContainer","VideoPlayer","video","volume","forwardRef"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,20,21,22,33,34,35,36,37,38,39]}