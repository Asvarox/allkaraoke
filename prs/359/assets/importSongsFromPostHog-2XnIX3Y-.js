import{c as m,g as S,s as d,S as g}from"./index-CgCRYWiv.js";const w="https://eu.posthog.com",y="281",I=new Date(Date.now()-1e3*3600*24*28).toISOString(),v=["(tv)","(album version)","(movie version)","[duet]"],D=e=>(v.forEach(o=>{e.title.toLowerCase().endsWith(o)&&(e.title=e.title.slice(0,-o.length))}),e.title=e.title.trim(),e.language=e.language.map(o=>o.toLowerCase().startsWith("espa")?"Spanish":o.toLowerCase().endsWith("(romanized)")?o.slice(0,-11).trim():o.toLowerCase().endsWith("(brazil)")?"Portuguese":o),e.lastUpdate=new Date().toISOString(),e.id=void 0,e.id=S(e),e),$=async(e,o,n,u,s,a)=>{var f,h;const r=await e(`${w}/api/projects/${y}/query`,{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:{kind:"HogQLQuery",query:`
            select events.properties.song, events.properties.songId, events.created_at
            from events
            where events.created_at > toDateTime('${a??I}')
              and event IN ('share-song', 'unshare-song') and events.properties.$user_id !='3ab0feed-e1d2-4ff0-8780-5db00698eb60'
            ORDER BY events.created_at ASC
            LIMIT 300
        `}})}),p=[];for(const[l,i]of r.results)try{!l&&i&&p.includes(i)&&(await s(i),console.log(`Deleting song ${i}`));let t=m(l.replaceAll("\\n",`
`).replaceAll('\\"','"'));if(!t.id){console.log("Song has no ID",t);return}D(t),n.includes(t.id)?console.log(`Song ${t.id} already fetched`):(((f=t.tracks[0])==null?void 0:f.sections.length)??0)<5?console.log(`Song ${t.id} seems to be broken, ${(h=t.tracks[0])==null?void 0:h.sections.length} sections found`):o.find(c=>c.id===t.id)?console.log(`Song ${t.id} already exists (by song id)`):o.find(c=>c.video===t.video)?console.log(`Song ${t.id} already exists (by video id)`):(t.lastUpdate=new Date().toISOString(),p.push(t.id),await u(t),console.log(`Added song ${t.id}`))}catch{console.warn(`Couldn't convert song ${l}`)}},b=async()=>{const e=d.session.getItem("posthog_key")||prompt("Enter PostHog PAT");if(!e)return;d.session.setItem("posthog_key",e);const o=new Date;o.setDate(o.getDate()-10);let n=prompt("Enter from",d.local.getItem("posthog_from")||o.toISOString());if(n===null)return;n=new Date(n).toISOString(),d.local.setItem("posthog_from",new Date().toISOString()),await $(async(s,a)=>{const r=await fetch(s,{...a,headers:{...a.headers,Authorization:`Bearer ${e}`}});if(!r.ok)throw new Error(`Request failed with status ${r.status}`);return r.json()},await g.getIndex(!0),[],async s=>g.store(s),async s=>g.deleteSong(s),n)};export{b as default};
//# sourceMappingURL=importSongsFromPostHog-2XnIX3Y-.js.map
